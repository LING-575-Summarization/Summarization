Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/366c76d8804a428d931a4fb27453931d-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/366c76d8804a428d931a4fb27453931d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 863638 COLUMNS
At line 3458260 RHS
At line 4321894 BOUNDS
At line 4325006 ENDATA
Problem MODEL has 863633 rows, 3111 columns and 874683 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 440.117 - 0.82 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 144 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 3724 rows, 947 columns (947 integer (947 of which binary)) and 10256 elements
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.6875
Cbc0038I Pass   1: (1.75 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 512
Cbc0038I Solution found of -405.13
Cbc0038I Rounding solution of -421.154 is better than previous of -405.13

Cbc0038I Before mini branch and bound, 934 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.80 seconds)
Cbc0038I Round again with cutoff of -423.051
Cbc0038I Reduced cost fixing fixed 52 variables on major pass 2
Cbc0038I Pass   2: (1.80 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 0
Cbc0038I Pass   3: (1.82 seconds) suminf.    0.42212 (8) obj. -423.051 iterations 679
Cbc0038I Pass   4: (1.83 seconds) suminf.    0.42212 (8) obj. -423.051 iterations 0
Cbc0038I Pass   5: (1.84 seconds) suminf.    2.36842 (5) obj. -429.915 iterations 289
Cbc0038I Pass   6: (1.84 seconds) suminf.    4.71548 (11) obj. -423.051 iterations 293
Cbc0038I Pass   7: (1.86 seconds) suminf.    3.11669 (7) obj. -423.051 iterations 457
Cbc0038I Pass   8: (1.87 seconds) suminf.    2.57143 (6) obj. -424.736 iterations 392
Cbc0038I Pass   9: (1.89 seconds) suminf.    3.07869 (7) obj. -423.051 iterations 741
Cbc0038I Pass  10: (1.90 seconds) suminf.    2.57143 (6) obj. -424.736 iterations 254
Cbc0038I Pass  11: (1.91 seconds) suminf.    5.23738 (15) obj. -423.051 iterations 608
Cbc0038I Pass  12: (1.94 seconds) suminf.    0.27103 (1) obj. -423.051 iterations 855
Cbc0038I Pass  13: (1.94 seconds) suminf.    0.40000 (1) obj. -424.764 iterations 231
Cbc0038I Pass  14: (1.96 seconds) suminf.    1.54542 (11) obj. -423.051 iterations 466
Cbc0038I Pass  15: (1.97 seconds) suminf.    1.02847 (7) obj. -423.051 iterations 408
Cbc0038I Pass  16: (1.98 seconds) suminf.    1.28571 (6) obj. -424.29 iterations 290
Cbc0038I Pass  17: (1.99 seconds) suminf.    0.80409 (10) obj. -423.051 iterations 615
Cbc0038I Pass  18: (2.00 seconds) suminf.    0.50000 (8) obj. -423.751 iterations 488
Cbc0038I Pass  19: (2.03 seconds) suminf.    1.03920 (9) obj. -423.051 iterations 746
Cbc0038I Pass  20: (2.04 seconds) suminf.    3.53469 (13) obj. -423.051 iterations 633
Cbc0038I Pass  21: (2.06 seconds) suminf.    1.66618 (13) obj. -423.051 iterations 419
Cbc0038I Pass  22: (2.07 seconds) suminf.    5.57287 (20) obj. -423.051 iterations 428
Cbc0038I Pass  23: (2.08 seconds) suminf.    4.98850 (19) obj. -423.051 iterations 329
Cbc0038I Pass  24: (2.09 seconds) suminf.    3.60000 (9) obj. -430.296 iterations 554
Cbc0038I Pass  25: (2.09 seconds) suminf.    3.60000 (9) obj. -430.296 iterations 56
Cbc0038I Pass  26: (2.12 seconds) suminf.    1.93501 (13) obj. -423.051 iterations 698
Cbc0038I Pass  27: (2.12 seconds) suminf.    1.93501 (13) obj. -423.051 iterations 0
Cbc0038I Pass  28: (2.13 seconds) suminf.    3.50000 (8) obj. -427.819 iterations 399
Cbc0038I Pass  29: (2.13 seconds) suminf.    3.50000 (8) obj. -427.819 iterations 2
Cbc0038I Pass  30: (2.14 seconds) suminf.    1.51429 (12) obj. -423.051 iterations 328
Cbc0038I Solution found of -424.268
Cbc0038I Rounding solution of -425.061 is better than previous of -424.268

Cbc0038I Before mini branch and bound, 823 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3724 rows 947 columns, reduced to 98 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -425.061 to -438.156 (2.26 seconds)
Cbc0038I Round again with cutoff of -438.548
Cbc0038I Reduced cost fixing fixed 215 variables on major pass 3
Cbc0038I Pass  31: (2.27 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 0
Cbc0038I Pass  32: (2.29 seconds) suminf.    5.51186 (14) obj. -438.548 iterations 649
Cbc0038I Pass  33: (2.30 seconds) suminf.    3.35161 (14) obj. -438.548 iterations 306
Cbc0038I Pass  34: (2.31 seconds) suminf.    3.35161 (14) obj. -438.548 iterations 16
Cbc0038I Pass  35: (2.31 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 496
Cbc0038I Pass  36: (2.32 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 33
Cbc0038I Pass  37: (2.34 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 553
Cbc0038I Pass  38: (2.35 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 4
Cbc0038I Pass  39: (2.36 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 498
Cbc0038I Pass  40: (2.37 seconds) suminf.    3.85961 (16) obj. -438.548 iterations 541
Cbc0038I Pass  41: (2.37 seconds) suminf.    3.85961 (16) obj. -438.548 iterations 23
Cbc0038I Pass  42: (2.39 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 481
Cbc0038I Pass  43: (2.40 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 551
Cbc0038I Pass  44: (2.41 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 3
Cbc0038I Pass  45: (2.42 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 501
Cbc0038I Pass  46: (2.43 seconds) suminf.    3.35161 (14) obj. -438.548 iterations 278
Cbc0038I Pass  47: (2.44 seconds) suminf.    3.35161 (14) obj. -438.548 iterations 290
Cbc0038I Pass  48: (2.45 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 475
Cbc0038I Pass  49: (2.46 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 12
Cbc0038I Pass  50: (2.48 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 624
Cbc0038I Pass  51: (2.48 seconds) suminf.    0.52078 (14) obj. -438.548 iterations 2
Cbc0038I Pass  52: (2.49 seconds) suminf.    5.68750 (13) obj. -440.117 iterations 497
Cbc0038I Pass  53: (2.51 seconds) suminf.    6.43644 (14) obj. -438.548 iterations 306
Cbc0038I Pass  54: (2.52 seconds) suminf.    6.43644 (14) obj. -438.548 iterations 239
Cbc0038I Pass  55: (2.53 seconds) suminf.    4.99596 (32) obj. -438.548 iterations 523
Cbc0038I Pass  56: (2.54 seconds) suminf.    3.94028 (14) obj. -438.548 iterations 43
Cbc0038I Pass  57: (2.54 seconds) suminf.    3.94028 (14) obj. -438.548 iterations 41
Cbc0038I Pass  58: (2.55 seconds) suminf.    4.87500 (13) obj. -439.334 iterations 476
Cbc0038I Pass  59: (2.56 seconds) suminf.    4.63974 (16) obj. -438.548 iterations 258
Cbc0038I Pass  60: (2.57 seconds) suminf.    4.16201 (19) obj. -438.548 iterations 598
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 899 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3724 rows 947 columns, reduced to 7 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (2.59 seconds)
Cbc0038I After 2.59 seconds - Feasibility pump exiting with objective of -438.156 - took 0.77 seconds
Cbc0012I Integer solution of -438.15559 found by feasibility pump after 0 iterations and 0 nodes (2.60 seconds)
Cbc0012I Integer solution of -439.29014 found by DiveCoefficient after 0 iterations and 0 nodes (2.60 seconds)
Cbc0038I Full problem 3724 rows 947 columns, reduced to 0 rows 0 columns
Cbc0031I 4 added rows had average density of 38
Cbc0013I At root node, 27 cuts changed objective from -440.11744 to -439.01396 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0001I Search completed - best objective -439.2901352532133, took 27 iterations and 0 nodes (2.67 seconds)
Cbc0035I Maximum depth 0, 250 variables fixed on reduced cost
Cuts at root node changed objective from -440.117 to -439.014
Probing was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                439.29013525
Enumerated nodes:               0
Total iterations:               27
Time (CPU seconds):             2.70
Time (Wallclock seconds):       3.25

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.96   (Wallclock seconds):       4.66

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/94f49cd2acae4c2aa7773c2eff5ddd32-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/94f49cd2acae4c2aa7773c2eff5ddd32-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 751365 COLUMNS
At line 3009118 RHS
At line 3760479 BOUNDS
At line 3763639 ENDATA
Problem MODEL has 751360 rows, 3159 columns and 763323 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 371.478 - 0.87 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 166 strengthened rows, 166 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 86 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 4405 rows, 1077 columns (1077 integer (1077 of which binary)) and 12074 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.666667
Cbc0038I Solution found of -368.153
Cbc0038I Before mini branch and bound, 1073 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4405 rows 1077 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.76 seconds)
Cbc0038I Round again with cutoff of -368.485
Cbc0038I Reduced cost fixing fixed 177 variables on major pass 2
Cbc0038I Pass   1: (1.79 seconds) suminf.    0.03675 (8) obj. -368.485 iterations 877
Cbc0038I Pass   2: (1.79 seconds) suminf.    0.29630 (8) obj. -370.834 iterations 132
Cbc0038I Pass   3: (1.80 seconds) suminf.    0.00000 (0) obj. -370.89 iterations 213
Cbc0038I Solution found of -370.89
Cbc0038I Before mini branch and bound, 1064 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.81 seconds)
Cbc0038I Round again with cutoff of -371.007
Cbc0038I Reduced cost fixing fixed 229 variables on major pass 3
Cbc0038I Pass   4: (1.83 seconds) suminf.    0.51804 (24) obj. -371.007 iterations 304
Cbc0038I Pass   5: (1.83 seconds) suminf.    0.52381 (11) obj. -371.028 iterations 322
Cbc0038I Pass   6: (1.85 seconds) suminf.    0.56071 (14) obj. -371.007 iterations 843
Cbc0038I Pass   7: (1.86 seconds) suminf.    0.56071 (14) obj. -371.007 iterations 335
Cbc0038I Pass   8: (1.87 seconds) suminf.    0.66667 (4) obj. -371.478 iterations 406
Cbc0038I Pass   9: (1.88 seconds) suminf.    0.57225 (4) obj. -371.007 iterations 362
Cbc0038I Pass  10: (1.89 seconds) suminf.    0.66667 (4) obj. -371.478 iterations 303
Cbc0038I Pass  11: (1.90 seconds) suminf.    0.62500 (5) obj. -371.158 iterations 325
Cbc0038I Pass  12: (1.90 seconds) suminf.    0.56716 (18) obj. -371.007 iterations 374
Cbc0038I Pass  13: (1.91 seconds) suminf.    0.62500 (5) obj. -371.158 iterations 321
Cbc0038I Pass  14: (1.92 seconds) suminf.    0.60618 (6) obj. -371.007 iterations 278
Cbc0038I Pass  15: (1.93 seconds) suminf.    0.59717 (23) obj. -371.007 iterations 375
Cbc0038I Pass  16: (1.93 seconds) suminf.    0.56471 (15) obj. -371.007 iterations 382
Cbc0038I Pass  17: (1.95 seconds) suminf.    0.98561 (31) obj. -371.007 iterations 627
Cbc0038I Pass  18: (1.96 seconds) suminf.    0.54326 (11) obj. -371.007 iterations 489
Cbc0038I Pass  19: (1.97 seconds) suminf.    0.73447 (8) obj. -371.007 iterations 425
Cbc0038I Pass  20: (1.97 seconds) suminf.    0.64225 (9) obj. -371.007 iterations 160
Cbc0038I Pass  21: (1.98 seconds) suminf.    0.53548 (15) obj. -371.007 iterations 472
Cbc0038I Pass  22: (1.99 seconds) suminf.    0.79282 (35) obj. -371.007 iterations 332
Cbc0038I Pass  23: (2.00 seconds) suminf.    0.60762 (5) obj. -371.007 iterations 548
Cbc0038I Pass  24: (2.01 seconds) suminf.    0.82822 (34) obj. -371.007 iterations 541
Cbc0038I Pass  25: (2.02 seconds) suminf.    0.60917 (15) obj. -371.007 iterations 554
Cbc0038I Pass  26: (2.03 seconds) suminf.    0.66667 (4) obj. -371.478 iterations 331
Cbc0038I Pass  27: (2.04 seconds) suminf.    0.60214 (31) obj. -371.007 iterations 550
Cbc0038I Pass  28: (2.05 seconds) suminf.    0.66857 (9) obj. -371.007 iterations 377
Cbc0038I Pass  29: (2.06 seconds) suminf.    0.57225 (4) obj. -371.007 iterations 470
Cbc0038I Pass  30: (2.06 seconds) suminf.    0.66667 (4) obj. -371.478 iterations 310
Cbc0038I Pass  31: (2.08 seconds) suminf.    0.64225 (9) obj. -371.007 iterations 614
Cbc0038I Pass  32: (2.08 seconds) suminf.    0.75335 (29) obj. -371.007 iterations 68
Cbc0038I Pass  33: (2.09 seconds) suminf.    0.65425 (31) obj. -371.007 iterations 394
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 977 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4405 rows 1077 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.12 seconds)
Cbc0038I After 2.12 seconds - Feasibility pump exiting with objective of -370.89 - took 0.39 seconds
Cbc0012I Integer solution of -370.88971 found by feasibility pump after 0 iterations and 0 nodes (2.12 seconds)
Cbc0012I Integer solution of -370.91137 found by DiveCoefficient after 52 iterations and 0 nodes (2.21 seconds)
Cbc0031I 3 added rows had average density of 18.666667
Cbc0013I At root node, 3 cuts changed objective from -371.47846 to -370.91137 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -370.9113728489839, took 52 iterations and 0 nodes (2.21 seconds)
Cbc0035I Maximum depth 0, 231 variables fixed on reduced cost
Cuts at root node changed objective from -371.478 to -370.911
Probing was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)

Result - Optimal solution found

Objective value:                370.91137285
Enumerated nodes:               0
Total iterations:               52
Time (CPU seconds):             2.24
Time (Wallclock seconds):       2.70

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.34   (Wallclock seconds):       3.92

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4412850941774a16b29fa5fa0cdace6f-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4412850941774a16b29fa5fa0cdace6f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 161034 COLUMNS
At line 645931 RHS
At line 806961 BOUNDS
At line 808560 ENDATA
Problem MODEL has 161029 rows, 1598 columns and 166221 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 356.651 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 122 substitutions
Cgl0004I processed model has 1632 rows, 443 columns (443 integer (443 of which binary)) and 4328 elements
Cbc0038I Initial state - 17 integers unsatisfied sum - 8.24242
Cbc0038I Solution found of -303.098
Cbc0038I Before mini branch and bound, 426 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1632 rows 443 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of -308.454
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.35298 (30) obj. -308.454 iterations 455
Cbc0038I Pass   2: suminf.    2.09524 (11) obj. -340.509 iterations 125
Cbc0038I Solution found of -330.793
Cbc0038I Before mini branch and bound, 396 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1632 rows 443 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of -335.965
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass   3: suminf.    2.60336 (20) obj. -335.965 iterations 114
Cbc0038I Pass   4: suminf.    5.03226 (16) obj. -343.835 iterations 125
Cbc0038I Pass   5: suminf.    2.57143 (6) obj. -336.476 iterations 29
Cbc0038I Pass   6: suminf.    2.57143 (6) obj. -336.476 iterations 9
Cbc0038I Pass   7: suminf.    2.84062 (12) obj. -335.965 iterations 104
Cbc0038I Pass   8: suminf.    2.57143 (6) obj. -336.476 iterations 74
Cbc0038I Pass   9: suminf.    2.60336 (20) obj. -335.965 iterations 185
Cbc0038I Pass  10: suminf.    5.03226 (16) obj. -343.835 iterations 113
Cbc0038I Pass  11: suminf.    2.57143 (6) obj. -336.476 iterations 30
Cbc0038I Pass  12: suminf.    6.36735 (28) obj. -338.677 iterations 133
Cbc0038I Pass  13: suminf.    4.61538 (12) obj. -343.999 iterations 125
Cbc0038I Pass  14: suminf.    4.61538 (12) obj. -343.999 iterations 71
Cbc0038I Pass  15: suminf.    6.42558 (26) obj. -335.965 iterations 123
Cbc0038I Pass  16: suminf.    4.61538 (12) obj. -343.999 iterations 126
Cbc0038I Pass  17: suminf.    2.60336 (20) obj. -335.965 iterations 171
Cbc0038I Pass  18: suminf.    4.23529 (9) obj. -344.393 iterations 106
Cbc0038I Pass  19: suminf.    4.23529 (9) obj. -344.393 iterations 99
Cbc0038I Pass  20: suminf.    4.23529 (9) obj. -344.393 iterations 159
Cbc0038I Pass  21: suminf.    9.45370 (29) obj. -335.965 iterations 170
Cbc0038I Pass  22: suminf.    4.23529 (9) obj. -344.393 iterations 105
Cbc0038I Pass  23: suminf.    4.72042 (35) obj. -335.965 iterations 145
Cbc0038I Pass  24: suminf.    8.55873 (64) obj. -335.965 iterations 238
Cbc0038I Pass  25: suminf.    0.67943 (4) obj. -335.965 iterations 225
Cbc0038I Pass  26: suminf.    0.96970 (4) obj. -340.084 iterations 102
Cbc0038I Pass  27: suminf.    6.25000 (52) obj. -340.861 iterations 188
Cbc0038I Pass  28: suminf.    2.31493 (65) obj. -335.965 iterations 157
Cbc0038I Pass  29: suminf.    2.54545 (7) obj. -341.733 iterations 255
Cbc0038I Pass  30: suminf.    2.25000 (9) obj. -336.835 iterations 208
Cbc0038I Pass  31: suminf.    0.94737 (6) obj. -340.743 iterations 94
Cbc0038I Pass  32: suminf.    2.60336 (20) obj. -335.965 iterations 191
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1632 rows 443 columns, reduced to 460 rows 136 columns
Cbc0038I Mini branch and bound improved solution from -330.793 to -350.989 (0.32 seconds)
Cbc0038I Round again with cutoff of -352.688
Cbc0038I Reduced cost fixing fixed 56 variables on major pass 4
Cbc0038I Pass  32: suminf.    7.21341 (24) obj. -352.688 iterations 100
Cbc0038I Pass  33: suminf.    8.24242 (17) obj. -356.651 iterations 151
Cbc0038I Pass  34: suminf.    8.24242 (17) obj. -356.651 iterations 85
Cbc0038I Pass  35: suminf.    8.24242 (17) obj. -356.651 iterations 144
Cbc0038I Pass  36: suminf.    4.76460 (31) obj. -352.688 iterations 271
Cbc0038I Pass  37: suminf.    4.76460 (31) obj. -352.688 iterations 17
Cbc0038I Pass  38: suminf.    4.76460 (31) obj. -352.688 iterations 10
Cbc0038I Pass  39: suminf.    4.76460 (31) obj. -352.688 iterations 7
Cbc0038I Pass  40: suminf.    4.76460 (31) obj. -352.688 iterations 3
Cbc0038I Pass  41: suminf.    4.76460 (31) obj. -352.688 iterations 2
Cbc0038I Pass  42: suminf.    4.76460 (31) obj. -352.688 iterations 5
Cbc0038I Pass  43: suminf.    4.76460 (31) obj. -352.688 iterations 9
Cbc0038I Pass  44: suminf.    4.76460 (31) obj. -352.688 iterations 6
Cbc0038I Pass  45: suminf.    4.76460 (31) obj. -352.688 iterations 2
Cbc0038I Pass  46: suminf.    4.76460 (31) obj. -352.688 iterations 3
Cbc0038I Pass  47: suminf.    3.33333 (14) obj. -352.861 iterations 229
Cbc0038I Pass  48: suminf.    3.33333 (14) obj. -352.861 iterations 93
Cbc0038I Pass  49: suminf.    7.21341 (24) obj. -352.688 iterations 176
Cbc0038I Pass  50: suminf.    8.24242 (17) obj. -356.651 iterations 141
Cbc0038I Pass  51: suminf.    2.57576 (17) obj. -352.949 iterations 108
Cbc0038I Pass  52: suminf.    2.57576 (17) obj. -352.949 iterations 95
Cbc0038I Pass  53: suminf.    2.67817 (21) obj. -352.688 iterations 116
Cbc0038I Pass  54: suminf.    2.57576 (17) obj. -352.949 iterations 141
Cbc0038I Pass  55: suminf.    2.57576 (17) obj. -352.949 iterations 132
Cbc0038I Pass  56: suminf.    2.57576 (17) obj. -352.949 iterations 162
Cbc0038I Pass  57: suminf.    2.78705 (23) obj. -352.688 iterations 152
Cbc0038I Pass  58: suminf.    2.57576 (17) obj. -352.949 iterations 114
Cbc0038I Pass  59: suminf.    2.57576 (17) obj. -352.949 iterations 160
Cbc0038I Pass  60: suminf.    2.87155 (24) obj. -352.688 iterations 147
Cbc0038I Pass  61: suminf.    2.75511 (21) obj. -352.688 iterations 148
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 375 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1632 rows 443 columns, reduced to 40 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I After 0.40 seconds - Feasibility pump exiting with objective of -350.989 - took 0.22 seconds
Cbc0012I Integer solution of -350.98922 found by feasibility pump after 0 iterations and 0 nodes (0.40 seconds)
Cbc0031I 5 added rows had average density of 14.2
Cbc0013I At root node, 14 cuts changed objective from -356.65067 to -349.65521 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 19 column cuts (19 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 18 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 107.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -350.9892181356921, took 182 iterations and 0 nodes (0.43 seconds)
Cbc0035I Maximum depth 0, 57 variables fixed on reduced cost
Cuts at root node changed objective from -356.651 to -349.655
Probing was tried 3 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 3 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                350.98921814
Enumerated nodes:               0
Total iterations:               182
Time (CPU seconds):             0.49
Time (Wallclock seconds):       0.53

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.79

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/120a796afe7445379cefe3b950d208c9-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/120a796afe7445379cefe3b950d208c9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 299470 COLUMNS
At line 1200162 RHS
At line 1499628 BOUNDS
At line 1501598 ENDATA
Problem MODEL has 299465 rows, 1969 columns and 306063 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 328.06 - 0.09 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 376 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 2051 rows, 576 columns (576 integer (576 of which binary)) and 5513 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.777778
Cbc0038I Solution found of -325.272
Cbc0038I Before mini branch and bound, 569 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2051 rows 576 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I Round again with cutoff of -325.551
Cbc0038I Reduced cost fixing fixed 116 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03412 (4) obj. -325.551 iterations 430
Cbc0038I Pass   2: suminf.    0.22222 (4) obj. -327.088 iterations 98
Cbc0038I Pass   3: suminf.    0.50000 (4) obj. -327.571 iterations 98
Cbc0038I Pass   4: suminf.    6.85789 (20) obj. -325.551 iterations 180
Cbc0038I Pass   5: suminf.    0.60000 (6) obj. -327.91 iterations 94
Cbc0038I Pass   6: suminf.    0.87500 (7) obj. -325.734 iterations 122
Cbc0038I Pass   7: suminf.    0.81250 (13) obj. -326.085 iterations 112
Cbc0038I Pass   8: suminf.    5.83666 (19) obj. -325.551 iterations 359
Cbc0038I Pass   9: suminf.    5.83666 (19) obj. -325.551 iterations 12
Cbc0038I Pass  10: suminf.    0.03412 (4) obj. -325.551 iterations 424
Cbc0038I Pass  11: suminf.    0.22222 (4) obj. -327.088 iterations 90
Cbc0038I Pass  12: suminf.    0.16429 (11) obj. -325.551 iterations 262
Cbc0038I Pass  13: suminf.    0.14482 (7) obj. -325.551 iterations 115
Cbc0038I Pass  14: suminf.    0.37500 (6) obj. -327.92 iterations 289
Cbc0038I Pass  15: suminf.    4.34674 (13) obj. -325.551 iterations 266
Cbc0038I Pass  16: suminf.    2.73268 (9) obj. -325.551 iterations 254
Cbc0038I Pass  17: suminf.    1.86153 (9) obj. -325.551 iterations 88
Cbc0038I Pass  18: suminf.    0.03412 (4) obj. -325.551 iterations 458
Cbc0038I Pass  19: suminf.    0.22222 (4) obj. -327.088 iterations 86
Cbc0038I Pass  20: suminf.    2.00000 (7) obj. -325.551 iterations 334
Cbc0038I Pass  21: suminf.    1.68582 (15) obj. -325.551 iterations 282
Cbc0038I Pass  22: suminf.    9.29314 (19) obj. -325.551 iterations 313
Cbc0038I Solution found of -327.272
Cbc0038I Before mini branch and bound, 497 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2051 rows 576 columns, reduced to 27 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I Round again with cutoff of -327.43
Cbc0038I Reduced cost fixing fixed 145 variables on major pass 3
Cbc0038I Pass  23: suminf.    0.28503 (10) obj. -327.43 iterations 60
Cbc0038I Pass  24: suminf.    0.37500 (6) obj. -327.92 iterations 102
Cbc0038I Pass  25: suminf.    1.35138 (12) obj. -327.43 iterations 102
Cbc0038I Pass  26: suminf.    3.61223 (11) obj. -327.43 iterations 385
Cbc0038I Pass  27: suminf.    3.33285 (13) obj. -327.43 iterations 10
Cbc0038I Pass  28: suminf.    2.33333 (7) obj. -327.896 iterations 309
Cbc0038I Pass  29: suminf.    2.33333 (7) obj. -327.896 iterations 5
Cbc0038I Pass  30: suminf.    2.33333 (7) obj. -327.896 iterations 81
Cbc0038I Pass  31: suminf.    2.33333 (7) obj. -327.896 iterations 79
Cbc0038I Pass  32: suminf.    3.73493 (25) obj. -327.43 iterations 178
Cbc0038I Pass  33: suminf.    3.73493 (25) obj. -327.43 iterations 171
Cbc0038I Pass  34: suminf.    3.73493 (25) obj. -327.43 iterations 4
Cbc0038I Pass  35: suminf.    3.73493 (25) obj. -327.43 iterations 5
Cbc0038I Pass  36: suminf.    3.73493 (25) obj. -327.43 iterations 2
Cbc0038I Pass  37: suminf.    3.33285 (13) obj. -327.43 iterations 10
Cbc0038I Pass  38: suminf.    2.63056 (8) obj. -327.43 iterations 167
Cbc0038I Pass  39: suminf.    0.40003 (14) obj. -327.43 iterations 318
Cbc0038I Pass  40: suminf.    0.28503 (10) obj. -327.43 iterations 142
Cbc0038I Pass  41: suminf.    0.37500 (6) obj. -327.92 iterations 89
Cbc0038I Pass  42: suminf.    0.49061 (7) obj. -327.43 iterations 273
Cbc0038I Pass  43: suminf.    0.57157 (14) obj. -327.43 iterations 165
Cbc0038I Pass  44: suminf.    0.49061 (7) obj. -327.43 iterations 200
Cbc0038I Pass  45: suminf.    0.51353 (13) obj. -327.43 iterations 316
Cbc0038I Pass  46: suminf.    0.38914 (5) obj. -327.43 iterations 197
Cbc0038I Pass  47: suminf.    0.40703 (19) obj. -327.43 iterations 162
Cbc0038I Pass  48: suminf.    0.38045 (8) obj. -327.43 iterations 167
Cbc0038I Pass  49: suminf.    0.41162 (12) obj. -327.43 iterations 177
Cbc0038I Pass  50: suminf.    0.40656 (16) obj. -327.43 iterations 204
Cbc0038I Pass  51: suminf.    0.44888 (16) obj. -327.43 iterations 263
Cbc0038I Pass  52: suminf.    0.58574 (10) obj. -327.43 iterations 196
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 469 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2051 rows 576 columns, reduced to 33 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.59 seconds)
Cbc0038I After 0.59 seconds - Feasibility pump exiting with objective of -327.272 - took 0.21 seconds
Cbc0012I Integer solution of -327.27226 found by feasibility pump after 0 iterations and 0 nodes (0.59 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 1 added rows had average density of 26
Cbc0013I At root node, 1 cuts changed objective from -328.06037 to -323.09261 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 65 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 6 row cuts average 163.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -327.2722599859381, took 105 iterations and 0 nodes (0.63 seconds)
Cbc0035I Maximum depth 0, 152 variables fixed on reduced cost
Cuts at root node changed objective from -328.06 to -323.093
Probing was tried 2 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                327.27225999
Enumerated nodes:               0
Total iterations:               105
Time (CPU seconds):             0.68
Time (Wallclock seconds):       0.83

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.32

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7c8b1c3a3f4447b9886769b719fe4997-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7c8b1c3a3f4447b9886769b719fe4997-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 223446 COLUMNS
At line 895780 RHS
At line 1119222 BOUNDS
At line 1120958 ENDATA
Problem MODEL has 223441 rows, 1735 columns and 229195 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 424.751 - 0.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 148 substitutions
Cgl0004I processed model has 1874 rows, 515 columns (515 integer (515 of which binary)) and 5006 elements
Cbc0038I Initial state - 37 integers unsatisfied sum - 18.18
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -332.818 iterations 410
Cbc0038I Solution found of -332.818
Cbc0038I Rounding solution of -352.732 is better than previous of -332.818

Cbc0038I Before mini branch and bound, 473 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1874 rows 515 columns, reduced to 19 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -352.732 to -407.093 (0.25 seconds)
Cbc0038I Round again with cutoff of -408.859
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.95464 (7) obj. -408.859 iterations 278
Cbc0038I Pass   3: suminf.    0.95464 (7) obj. -408.859 iterations 20
Cbc0038I Pass   4: suminf.    1.26316 (4) obj. -411.029 iterations 149
Cbc0038I Pass   5: suminf.    1.71982 (8) obj. -408.859 iterations 203
Cbc0038I Pass   6: suminf.    7.42732 (22) obj. -408.859 iterations 201
Cbc0038I Pass   7: suminf.    1.32055 (6) obj. -408.859 iterations 158
Cbc0038I Pass   8: suminf.    0.16213 (18) obj. -408.859 iterations 344
Cbc0038I Pass   9: suminf.    0.08298 (6) obj. -408.859 iterations 85
Cbc0038I Pass  10: suminf.    1.33333 (4) obj. -417.357 iterations 319
Cbc0038I Pass  11: suminf.    0.95464 (7) obj. -408.859 iterations 199
Cbc0038I Pass  12: suminf.    1.26316 (4) obj. -411.029 iterations 115
Cbc0038I Pass  13: suminf.    0.93866 (9) obj. -408.859 iterations 176
Cbc0038I Pass  14: suminf.    0.26199 (7) obj. -408.859 iterations 267
Cbc0038I Pass  15: suminf.    0.42105 (4) obj. -410.315 iterations 131
Cbc0038I Pass  16: suminf.    2.05263 (13) obj. -416.577 iterations 237
Cbc0038I Pass  17: suminf.    0.55556 (10) obj. -419.88 iterations 136
Cbc0038I Pass  18: suminf.    0.55556 (10) obj. -419.88 iterations 0
Cbc0038I Pass  19: suminf.    4.92833 (23) obj. -408.859 iterations 516
Cbc0038I Pass  20: suminf.    0.84211 (8) obj. -413.11 iterations 182
Cbc0038I Pass  21: suminf.    2.25000 (21) obj. -412.086 iterations 117
Cbc0038I Pass  22: suminf.    1.26316 (8) obj. -412.817 iterations 102
Cbc0038I Pass  23: suminf.    4.89651 (23) obj. -408.859 iterations 609
Cbc0038I Pass  24: suminf.    1.72425 (8) obj. -408.859 iterations 157
Cbc0038I Pass  25: suminf.    2.14286 (15) obj. -412.675 iterations 132
Cbc0038I Pass  26: suminf.    1.26316 (8) obj. -413.718 iterations 99
Cbc0038I Pass  27: suminf.    4.93741 (23) obj. -408.859 iterations 480
Cbc0038I Pass  28: suminf.    4.71912 (23) obj. -408.859 iterations 121
Cbc0038I Pass  29: suminf.    5.24650 (15) obj. -408.859 iterations 91
Cbc0038I Pass  30: suminf.    5.11597 (21) obj. -408.859 iterations 69
Cbc0038I Pass  31: suminf.    1.11111 (10) obj. -420.09 iterations 76
Cbc0038I Rounding solution of -408.767 is better than previous of -407.093

Cbc0038I Before mini branch and bound, 388 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1874 rows 515 columns, reduced to 138 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -408.767 to -421.509 (0.40 seconds)
Cbc0038I Round again with cutoff of -422.158
Cbc0038I Reduced cost fixing fixed 97 variables on major pass 3
Cbc0038I Pass  31: suminf.    5.13090 (37) obj. -422.158 iterations 502
Cbc0038I Pass  32: suminf.    5.13090 (37) obj. -422.158 iterations 12
Cbc0038I Pass  33: suminf.    3.20000 (16) obj. -423.583 iterations 284
Cbc0038I Pass  34: suminf.    3.20000 (16) obj. -423.583 iterations 14
Cbc0038I Pass  35: suminf.    6.13914 (22) obj. -422.158 iterations 319
Cbc0038I Pass  36: suminf.    5.05267 (21) obj. -422.158 iterations 15
Cbc0038I Pass  37: suminf.    3.20000 (16) obj. -423.583 iterations 286
Cbc0038I Pass  38: suminf.    4.64039 (19) obj. -422.158 iterations 228
Cbc0038I Pass  39: suminf.    4.64039 (19) obj. -422.158 iterations 83
Cbc0038I Pass  40: suminf.    4.64039 (19) obj. -422.158 iterations 14
Cbc0038I Pass  41: suminf.    9.13250 (19) obj. -422.158 iterations 74
Cbc0038I Pass  42: suminf.    4.64039 (19) obj. -422.158 iterations 64
Cbc0038I Pass  43: suminf.    5.62668 (19) obj. -422.158 iterations 9
Cbc0038I Pass  44: suminf.    5.62668 (19) obj. -422.158 iterations 7
Cbc0038I Pass  45: suminf.    8.42602 (22) obj. -422.158 iterations 32
Cbc0038I Pass  46: suminf.    5.05267 (21) obj. -422.158 iterations 15
Cbc0038I Pass  47: suminf.    5.05267 (21) obj. -422.158 iterations 0
Cbc0038I Pass  48: suminf.    3.20000 (16) obj. -423.583 iterations 292
Cbc0038I Pass  49: suminf.    3.20000 (16) obj. -423.583 iterations 39
Cbc0038I Pass  50: suminf.    4.64069 (21) obj. -422.158 iterations 230
Cbc0038I Pass  51: suminf.    5.62668 (19) obj. -422.158 iterations 331
Cbc0038I Pass  52: suminf.    5.62668 (19) obj. -422.158 iterations 17
Cbc0038I Pass  53: suminf.    8.42602 (22) obj. -422.158 iterations 50
Cbc0038I Pass  54: suminf.    5.05267 (21) obj. -422.158 iterations 15
Cbc0038I Pass  55: suminf.    5.05267 (21) obj. -422.158 iterations 0
Cbc0038I Pass  56: suminf.    3.20000 (16) obj. -423.583 iterations 303
Cbc0038I Pass  57: suminf.    3.20000 (16) obj. -423.583 iterations 30
Cbc0038I Pass  58: suminf.    3.90795 (28) obj. -422.158 iterations 111
Cbc0038I Pass  59: suminf.    1.42857 (5) obj. -422.735 iterations 139
Cbc0038I Pass  60: suminf.    0.92958 (9) obj. -422.158 iterations 351
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 436 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1874 rows 515 columns, reduced to 70 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -421.509 to -423.723 (0.50 seconds)
Cbc0038I Round again with cutoff of -424.032
Cbc0038I Reduced cost fixing fixed 114 variables on major pass 4
Cbc0038I Pass  60: suminf.   14.55990 (37) obj. -424.032 iterations 2
Cbc0038I Pass  61: suminf.   14.55990 (37) obj. -424.032 iterations 12
Cbc0038I Pass  62: suminf.    4.48000 (16) obj. -424.736 iterations 276
Cbc0038I Pass  63: suminf.    4.48000 (16) obj. -424.736 iterations 5
Cbc0038I Pass  64: suminf.    4.97806 (20) obj. -424.032 iterations 193
Cbc0038I Pass  65: suminf.    4.48000 (16) obj. -424.736 iterations 189
Cbc0038I Pass  66: suminf.    4.97806 (20) obj. -424.032 iterations 152
Cbc0038I Pass  67: suminf.    5.78615 (26) obj. -424.032 iterations 189
Cbc0038I Pass  68: suminf.    5.76000 (16) obj. -424.065 iterations 124
Cbc0038I Pass  69: suminf.    7.73563 (30) obj. -424.032 iterations 335
Cbc0038I Pass  70: suminf.    5.78936 (26) obj. -424.032 iterations 217
Cbc0038I Pass  71: suminf.    5.93105 (25) obj. -424.032 iterations 252
Cbc0038I Pass  72: suminf.    5.77668 (20) obj. -424.032 iterations 257
Cbc0038I Pass  73: suminf.    7.44869 (23) obj. -424.032 iterations 321
Cbc0038I Pass  74: suminf.    5.55917 (23) obj. -424.032 iterations 275
Cbc0038I Pass  75: suminf.    5.12000 (16) obj. -424.42 iterations 107
Cbc0038I Pass  76: suminf.    9.96193 (30) obj. -424.032 iterations 296
Cbc0038I Pass  77: suminf.    9.37500 (20) obj. -424.162 iterations 280
Cbc0038I Pass  78: suminf.    9.37500 (20) obj. -424.162 iterations 31
Cbc0038I Pass  79: suminf.    9.39746 (20) obj. -424.032 iterations 62
Cbc0038I Pass  80: suminf.   10.03577 (22) obj. -424.032 iterations 309
Cbc0038I Pass  81: suminf.   10.68950 (24) obj. -424.032 iterations 30
Cbc0038I Pass  82: suminf.    9.37500 (20) obj. -424.162 iterations 234
Cbc0038I Pass  83: suminf.    9.74478 (29) obj. -424.032 iterations 199
Cbc0038I Pass  84: suminf.    8.62559 (24) obj. -424.032 iterations 74
Cbc0038I Pass  85: suminf.    7.57247 (30) obj. -424.032 iterations 18
Cbc0038I Pass  86: suminf.    8.62559 (24) obj. -424.032 iterations 41
Cbc0038I Pass  87: suminf.    8.05813 (25) obj. -424.032 iterations 123
Cbc0038I Pass  88: suminf.    4.48000 (16) obj. -424.736 iterations 168
Cbc0038I Pass  89: suminf.   10.03800 (30) obj. -424.032 iterations 325
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 418 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1874 rows 515 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.60 seconds)
Cbc0038I After 0.60 seconds - Feasibility pump exiting with objective of -423.723 - took 0.36 seconds
Cbc0012I Integer solution of -423.7233 found by feasibility pump after 0 iterations and 0 nodes (0.60 seconds)
Cbc0038I Full problem 1874 rows 515 columns, reduced to 8 rows 7 columns
Cbc0031I 3 added rows had average density of 19
Cbc0013I At root node, 15 cuts changed objective from -424.75114 to -423.7233 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 10 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 138.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -423.7232950548891, took 28 iterations and 0 nodes (0.63 seconds)
Cbc0035I Maximum depth 0, 111 variables fixed on reduced cost
Cuts at root node changed objective from -424.751 to -423.723
Probing was tried 2 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                423.72329505
Enumerated nodes:               0
Total iterations:               28
Time (CPU seconds):             0.70
Time (Wallclock seconds):       0.76

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/26f38e45aa8a49a7a24540b1313acd0e-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/26f38e45aa8a49a7a24540b1313acd0e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1549606 COLUMNS
At line 6203478 RHS
At line 7753080 BOUNDS
At line 7757354 ENDATA
Problem MODEL has 1549601 rows, 4273 columns and 1568009 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 460.757 - 1.51 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 253 strengthened rows, 228 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 345 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 81 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 7191 rows, 1570 columns (1570 integer (1570 of which binary)) and 20263 elements
Cbc0038I Initial state - 63 integers unsatisfied sum - 6
Cbc0038I Solution found of -448.591
Cbc0038I Before mini branch and bound, 1507 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7191 rows 1570 columns, reduced to 39 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (3.86 seconds)
Cbc0038I Round again with cutoff of -449.808
Cbc0038I Reduced cost fixing fixed 189 variables on major pass 2
Cbc0038I Pass   1: (3.92 seconds) suminf.    0.15493 (9) obj. -449.808 iterations 1411
Cbc0038I Pass   2: (3.94 seconds) suminf.    1.17391 (9) obj. -457.809 iterations 312
Cbc0038I Pass   3: (3.95 seconds) suminf.    1.50000 (3) obj. -454.228 iterations 452
Cbc0038I Pass   4: (3.98 seconds) suminf.    0.77817 (9) obj. -449.808 iterations 624
Cbc0038I Pass   5: (4.01 seconds) suminf.    1.56522 (9) obj. -455.988 iterations 370
Cbc0038I Pass   6: (4.02 seconds) suminf.    1.56522 (9) obj. -455.988 iterations 367
Cbc0038I Pass   7: (4.05 seconds) suminf.    0.74290 (16) obj. -449.808 iterations 555
Cbc0038I Pass   8: (4.06 seconds) suminf.    0.33333 (1) obj. -451.449 iterations 254
Cbc0038I Pass   9: (4.08 seconds) suminf.    0.35510 (9) obj. -449.808 iterations 476
Cbc0038I Pass  10: (4.10 seconds) suminf.    0.78261 (9) obj. -453.165 iterations 340
Cbc0038I Pass  11: (4.12 seconds) suminf.    1.33333 (4) obj. -450.003 iterations 522
Cbc0038I Pass  12: (4.15 seconds) suminf.    0.55900 (9) obj. -449.808 iterations 565
Cbc0038I Pass  13: (4.16 seconds) suminf.    0.78261 (9) obj. -451.564 iterations 333
Cbc0038I Pass  14: (4.18 seconds) suminf.    2.00000 (5) obj. -457.434 iterations 477
Cbc0038I Pass  15: (4.20 seconds) suminf.    1.45455 (8) obj. -457.147 iterations 331
Cbc0038I Pass  16: (4.23 seconds) suminf.    4.09819 (15) obj. -449.808 iterations 692
Cbc0038I Pass  17: (4.25 seconds) suminf.    4.09819 (15) obj. -449.808 iterations 400
Cbc0038I Pass  18: (4.26 seconds) suminf.    1.75000 (7) obj. -454.06 iterations 203
Cbc0038I Pass  19: (4.27 seconds) suminf.    1.75000 (7) obj. -454.06 iterations 36
Cbc0038I Pass  20: (4.28 seconds) suminf.    3.07692 (10) obj. -453.176 iterations 269
Cbc0038I Pass  21: (4.29 seconds) suminf.    2.33333 (7) obj. -455.147 iterations 237
Cbc0038I Pass  22: (4.33 seconds) suminf.    3.26732 (15) obj. -449.808 iterations 868
Cbc0038I Pass  23: (4.36 seconds) suminf.    2.33333 (7) obj. -455.147 iterations 511
Cbc0038I Pass  24: (4.40 seconds) suminf.    2.37162 (11) obj. -449.808 iterations 954
Cbc0038I Pass  25: (4.41 seconds) suminf.    2.32033 (12) obj. -449.808 iterations 236
Cbc0038I Pass  26: (4.43 seconds) suminf.    2.18182 (8) obj. -457.337 iterations 973
Cbc0038I Pass  27: (4.47 seconds) suminf.    3.41264 (15) obj. -449.808 iterations 747
Cbc0038I Pass  28: (4.49 seconds) suminf.    2.33333 (7) obj. -454.593 iterations 543
Cbc0038I Pass  29: (4.50 seconds) suminf.    2.33333 (7) obj. -454.593 iterations 18
Cbc0038I Pass  30: (4.51 seconds) suminf.    4.20951 (16) obj. -449.808 iterations 277
Cbc0038I Rounding solution of -454.65 is better than previous of -448.591

Cbc0038I Before mini branch and bound, 1437 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7191 rows 1570 columns, reduced to 77 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -454.65 to -459.385 (4.57 seconds)
Cbc0038I Round again with cutoff of -459.659
Cbc0038I Reduced cost fixing fixed 348 variables on major pass 3
Cbc0038I Pass  30: (4.61 seconds) suminf.    1.68407 (17) obj. -459.659 iterations 315
Cbc0038I Pass  31: (4.62 seconds) suminf.    1.75000 (7) obj. -460.007 iterations 404
Cbc0038I Pass  32: (4.66 seconds) suminf.    1.97479 (15) obj. -459.659 iterations 1281
Cbc0038I Pass  33: (4.68 seconds) suminf.    1.84239 (18) obj. -459.659 iterations 298
Cbc0038I Pass  34: (4.69 seconds) suminf.    1.68407 (17) obj. -459.659 iterations 459
Cbc0038I Pass  35: (4.70 seconds) suminf.    1.75000 (7) obj. -460.007 iterations 332
Cbc0038I Pass  36: (4.73 seconds) suminf.    1.69103 (17) obj. -459.659 iterations 895
Cbc0038I Pass  37: (4.76 seconds) suminf.    3.54199 (15) obj. -459.659 iterations 1484
Cbc0038I Pass  38: (4.78 seconds) suminf.    3.54199 (15) obj. -459.659 iterations 370
Cbc0038I Pass  39: (4.78 seconds) suminf.    2.82485 (9) obj. -459.659 iterations 56
Cbc0038I Pass  40: (4.79 seconds) suminf.    2.71888 (12) obj. -459.659 iterations 35
Cbc0038I Pass  41: (4.81 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 949
Cbc0038I Pass  42: (4.82 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 6
Cbc0038I Pass  43: (4.86 seconds) suminf.    2.52686 (15) obj. -459.659 iterations 1135
Cbc0038I Pass  44: (4.88 seconds) suminf.    2.02498 (8) obj. -459.659 iterations 745
Cbc0038I Pass  45: (4.89 seconds) suminf.    1.30674 (6) obj. -459.659 iterations 475
Cbc0038I Pass  46: (4.90 seconds) suminf.    1.30674 (6) obj. -459.659 iterations 211
Cbc0038I Pass  47: (4.91 seconds) suminf.    1.04099 (8) obj. -459.659 iterations 300
Cbc0038I Pass  48: (4.92 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 507
Cbc0038I Pass  49: (4.95 seconds) suminf.    0.92641 (7) obj. -459.659 iterations 1050
Cbc0038I Pass  50: (4.95 seconds) suminf.    0.92641 (7) obj. -459.659 iterations 40
Cbc0038I Pass  51: (5.01 seconds) suminf.    2.71888 (12) obj. -459.659 iterations 1930
Cbc0038I Pass  52: (5.03 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 969
Cbc0038I Pass  53: (5.04 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 10
Cbc0038I Pass  54: (5.07 seconds) suminf.    2.52686 (15) obj. -459.659 iterations 1193
Cbc0038I Pass  55: (5.11 seconds) suminf.    0.72727 (8) obj. -460.13 iterations 1027
Cbc0038I Pass  56: (5.13 seconds) suminf.    1.65492 (9) obj. -459.659 iterations 980
Cbc0038I Pass  57: (5.14 seconds) suminf.    1.57181 (9) obj. -459.659 iterations 322
Cbc0038I Pass  58: (5.15 seconds) suminf.    0.92641 (7) obj. -459.659 iterations 303
Cbc0038I Pass  59: (5.16 seconds) suminf.    0.92641 (7) obj. -459.659 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1468 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7191 rows 1570 columns, reduced to 66 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (5.21 seconds)
Cbc0038I After 5.21 seconds - Feasibility pump exiting with objective of -459.385 - took 1.42 seconds
Cbc0012I Integer solution of -459.38466 found by feasibility pump after 0 iterations and 0 nodes (5.21 seconds)
Cbc0038I Full problem 7191 rows 1570 columns, reduced to 39 rows 19 columns
Cbc0031I 2 added rows had average density of 394.5
Cbc0013I At root node, 2 cuts changed objective from -460.75672 to -460.70481 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 59 row cuts average 396.8 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -459.38466 best solution, best possible -460.53751 (5.51 seconds)
Cbc0001I Search completed - best objective -459.3846552618301, took 199 iterations and 2 nodes (5.62 seconds)
Cbc0032I Strong branching done 14 times (414 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 349 variables fixed on reduced cost
Cuts at root node changed objective from -460.757 to -460.538
Probing was tried 6 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 4 times and created 59 cuts of which 0 were active after adding rounds of cuts (0.126 seconds)

Result - Optimal solution found

Objective value:                459.38465526
Enumerated nodes:               2
Total iterations:               199
Time (CPU seconds):             5.40
Time (Wallclock seconds):       6.85

Option for printingOptions changed from normal to all
Total time (CPU seconds):       7.74   (Wallclock seconds):       9.46

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cfb3399a6f60457780eb09f8a61f8784-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cfb3399a6f60457780eb09f8a61f8784-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 130278 COLUMNS
At line 522737 RHS
At line 653011 BOUNDS
At line 654464 ENDATA
Problem MODEL has 130273 rows, 1452 columns and 134959 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 341.984 - 0.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 392 substitutions
Cgl0004I processed model has 1408 rows, 414 columns (414 integer (414 of which binary)) and 3678 elements
Cbc0038I Initial state - 9 integers unsatisfied sum - 4.5
Cbc0038I Solution found of -314.118
Cbc0038I Before mini branch and bound, 405 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1408 rows 414 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -316.904
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   1: suminf.    4.50000 (9) obj. -341.984 iterations 235
Cbc0038I Pass   2: suminf.    0.23189 (9) obj. -316.904 iterations 240
Cbc0038I Pass   3: suminf.    2.25000 (5) obj. -334.458 iterations 126
Cbc0038I Pass   4: suminf.    8.80438 (29) obj. -316.904 iterations 116
Cbc0038I Pass   5: suminf.    6.98735 (31) obj. -316.904 iterations 99
Cbc0038I Pass   6: suminf.    3.40468 (24) obj. -316.904 iterations 75
Cbc0038I Pass   7: suminf.    2.84284 (27) obj. -316.904 iterations 82
Cbc0038I Pass   8: suminf.    3.38343 (20) obj. -316.904 iterations 99
Cbc0038I Pass   9: suminf.    2.83779 (21) obj. -316.904 iterations 85
Cbc0038I Pass  10: suminf.    2.86450 (21) obj. -316.904 iterations 82
Cbc0038I Pass  11: suminf.    4.07194 (21) obj. -316.904 iterations 77
Cbc0038I Pass  12: suminf.    4.61444 (27) obj. -316.904 iterations 116
Cbc0038I Pass  13: suminf.    4.87327 (61) obj. -316.904 iterations 234
Cbc0038I Pass  14: suminf.    3.25601 (26) obj. -316.904 iterations 179
Cbc0038I Pass  15: suminf.    2.25000 (5) obj. -333.111 iterations 118
Cbc0038I Pass  16: suminf.    0.34393 (9) obj. -316.904 iterations 168
Cbc0038I Pass  17: suminf.    2.25000 (5) obj. -333.111 iterations 101
Cbc0038I Pass  18: suminf.    2.70000 (18) obj. -328.582 iterations 147
Cbc0038I Pass  19: suminf.    0.30000 (3) obj. -333.839 iterations 102
Cbc0038I Pass  20: suminf.    0.45000 (9) obj. -332.739 iterations 94
Cbc0038I Pass  21: suminf.    0.30000 (3) obj. -333.839 iterations 83
Cbc0038I Pass  22: suminf.    0.52174 (12) obj. -332.945 iterations 71
Cbc0038I Pass  23: suminf.    0.45000 (9) obj. -332.739 iterations 117
Cbc0038I Pass  24: suminf.    3.60000 (9) obj. -328.542 iterations 122
Cbc0038I Pass  25: suminf.    3.60000 (9) obj. -328.542 iterations 88
Cbc0038I Pass  26: suminf.    2.76436 (23) obj. -316.904 iterations 179
Cbc0038I Pass  27: suminf.    2.82406 (19) obj. -316.904 iterations 99
Cbc0038I Pass  28: suminf.    2.82406 (19) obj. -316.904 iterations 154
Cbc0038I Pass  29: suminf.   10.15716 (31) obj. -316.904 iterations 221
Cbc0038I Pass  30: suminf.    2.80000 (8) obj. -321.976 iterations 189
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 222 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1408 rows 414 columns, reduced to 355 rows 117 columns
Cbc0038I Mini branch and bound improved solution from -314.118 to -338.068 (0.25 seconds)
Cbc0038I Round again with cutoff of -338.851
Cbc0038I Reduced cost fixing fixed 65 variables on major pass 3
Cbc0038I Pass  30: suminf.    4.50000 (9) obj. -341.984 iterations 0
Cbc0038I Pass  31: suminf.    3.11259 (14) obj. -338.851 iterations 218
Cbc0038I Pass  32: suminf.    3.60000 (10) obj. -341.962 iterations 108
Cbc0038I Pass  33: suminf.    1.20000 (10) obj. -339.487 iterations 124
Cbc0038I Pass  34: suminf.    1.10039 (14) obj. -338.851 iterations 176
Cbc0038I Pass  35: suminf.    1.20000 (10) obj. -339.487 iterations 112
Cbc0038I Pass  36: suminf.    1.13382 (15) obj. -338.851 iterations 178
Cbc0038I Pass  37: suminf.    1.14594 (16) obj. -338.851 iterations 144
Cbc0038I Pass  38: suminf.    1.25352 (17) obj. -338.851 iterations 139
Cbc0038I Pass  39: suminf.    1.13382 (15) obj. -338.851 iterations 105
Cbc0038I Pass  40: suminf.    1.34911 (13) obj. -338.851 iterations 141
Cbc0038I Pass  41: suminf.    1.21729 (25) obj. -338.851 iterations 174
Cbc0038I Pass  42: suminf.    1.13382 (15) obj. -338.851 iterations 213
Cbc0038I Pass  43: suminf.    1.20000 (10) obj. -339.487 iterations 141
Cbc0038I Pass  44: suminf.    1.25352 (17) obj. -338.851 iterations 193
Cbc0038I Pass  45: suminf.    2.75070 (13) obj. -338.851 iterations 210
Cbc0038I Pass  46: suminf.    2.75070 (13) obj. -338.851 iterations 11
Cbc0038I Pass  47: suminf.    3.60000 (10) obj. -340.615 iterations 252
Cbc0038I Pass  48: suminf.    3.37192 (10) obj. -338.851 iterations 185
Cbc0038I Pass  49: suminf.    2.75070 (13) obj. -338.851 iterations 303
Cbc0038I Pass  50: suminf.    2.75070 (13) obj. -338.851 iterations 38
Cbc0038I Pass  51: suminf.    2.75070 (13) obj. -338.851 iterations 9
Cbc0038I Pass  52: suminf.    3.19439 (12) obj. -338.851 iterations 143
Cbc0038I Pass  53: suminf.    2.84938 (23) obj. -338.851 iterations 243
Cbc0038I Pass  54: suminf.    1.10039 (14) obj. -338.851 iterations 159
Cbc0038I Pass  55: suminf.    1.20000 (10) obj. -339.487 iterations 110
Cbc0038I Pass  56: suminf.    1.25352 (17) obj. -338.851 iterations 193
Cbc0038I Pass  57: suminf.    2.28274 (26) obj. -338.851 iterations 171
Cbc0038I Pass  58: suminf.    1.40043 (30) obj. -338.851 iterations 180
Cbc0038I Pass  59: suminf.    1.50000 (9) obj. -339.495 iterations 147
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 331 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1408 rows 414 columns, reduced to 8 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -338.068 - took 0.20 seconds
Cbc0012I Integer solution of -338.06812 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 1408 rows 414 columns, reduced to 0 rows 0 columns
Cbc0031I 2 added rows had average density of 17
Cbc0013I At root node, 12 cuts changed objective from -341.98441 to -337.86512 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 50 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0001I Search completed - best objective -338.0681198986771, took 173 iterations and 0 nodes (0.39 seconds)
Cbc0035I Maximum depth 0, 70 variables fixed on reduced cost
Cuts at root node changed objective from -341.984 to -337.865
Probing was tried 6 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 6 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 6 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                338.06811990
Enumerated nodes:               0
Total iterations:               173
Time (CPU seconds):             0.44
Time (Wallclock seconds):       0.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.63   (Wallclock seconds):       0.70

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b9a7494018eb448494d7260f20b0d0ba-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b9a7494018eb448494d7260f20b0d0ba-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1872456 COLUMNS
At line 7495315 RHS
At line 9367767 BOUNDS
At line 9372378 ENDATA
Problem MODEL has 1872451 rows, 4610 columns and 1890947 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 480.983 - 1.61 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 82 strengthened rows, 188 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 7027 rows, 1623 columns (1623 integer (1623 of which binary)) and 19321 elements
Cbc0038I Initial state - 35 integers unsatisfied sum - 13.6923
Cbc0038I Pass   1: (4.32 seconds) suminf.    0.00000 (0) obj. -409.697 iterations 1390
Cbc0038I Solution found of -409.697
Cbc0038I Rounding solution of -425.382 is better than previous of -409.697

Cbc0038I Before mini branch and bound, 1585 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -425.382 to -464.451 (4.53 seconds)
Cbc0038I Round again with cutoff of -466.105
Cbc0038I Reduced cost fixing fixed 124 variables on major pass 2
Cbc0038I Pass   2: (4.59 seconds) suminf.    0.49592 (39) obj. -466.105 iterations 409
Cbc0038I Pass   3: (4.61 seconds) suminf.    0.18192 (6) obj. -466.105 iterations 498
Cbc0038I Pass   4: (4.64 seconds) suminf.    1.00000 (6) obj. -473.539 iterations 479
Cbc0038I Pass   5: (4.66 seconds) suminf.    0.29167 (4) obj. -466.105 iterations 357
Cbc0038I Pass   6: (4.69 seconds) suminf.    0.15416 (14) obj. -466.105 iterations 689
Cbc0038I Pass   7: (4.72 seconds) suminf.    1.34483 (13) obj. -475.387 iterations 555
Cbc0038I Pass   8: (4.75 seconds) suminf.    4.46201 (14) obj. -466.105 iterations 368
Cbc0038I Pass   9: (4.76 seconds) suminf.    4.11571 (13) obj. -466.105 iterations 301
Cbc0038I Pass  10: (4.79 seconds) suminf.    6.57393 (26) obj. -466.105 iterations 483
Cbc0038I Pass  11: (4.81 seconds) suminf.    3.00000 (7) obj. -471.586 iterations 400
Cbc0038I Pass  12: (4.84 seconds) suminf.    1.60129 (7) obj. -466.105 iterations 582
Cbc0038I Pass  13: (4.86 seconds) suminf.    1.61538 (7) obj. -466.239 iterations 373
Cbc0038I Pass  14: (4.88 seconds) suminf.    0.00000 (0) obj. -467.631 iterations 404
Cbc0038I Solution found of -467.631
Cbc0038I Before mini branch and bound, 1536 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 44 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -467.631 to -471.673 (4.95 seconds)
Cbc0038I Round again with cutoff of -473.535
Cbc0038I Reduced cost fixing fixed 232 variables on major pass 3
Cbc0038I Pass  15: (4.99 seconds) suminf.    2.67050 (20) obj. -473.535 iterations 293
Cbc0038I Pass  16: (5.01 seconds) suminf.    1.05545 (15) obj. -473.535 iterations 595
Cbc0038I Pass  17: (5.02 seconds) suminf.    1.16667 (7) obj. -474.299 iterations 317
Cbc0038I Pass  18: (5.04 seconds) suminf.    1.52513 (9) obj. -473.535 iterations 284
Cbc0038I Pass  19: (5.06 seconds) suminf.    2.86073 (14) obj. -473.535 iterations 463
Cbc0038I Pass  20: (5.07 seconds) suminf.    2.28571 (12) obj. -473.535 iterations 223
Cbc0038I Pass  21: (5.10 seconds) suminf.    7.34392 (19) obj. -473.535 iterations 869
Cbc0038I Pass  22: (5.14 seconds) suminf.    2.32620 (25) obj. -473.535 iterations 1085
Cbc0038I Pass  23: (5.15 seconds) suminf.    1.05545 (15) obj. -473.535 iterations 191
Cbc0038I Pass  24: (5.16 seconds) suminf.    1.16667 (7) obj. -474.299 iterations 334
Cbc0038I Pass  25: (5.18 seconds) suminf.    0.00000 (0) obj. -475.546 iterations 271
Cbc0038I Solution found of -475.546
Cbc0038I Before mini branch and bound, 1549 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (5.24 seconds)
Cbc0038I Round again with cutoff of -477.177
Cbc0038I Reduced cost fixing fixed 310 variables on major pass 4
Cbc0038I Pass  26: (5.28 seconds) suminf.    7.14783 (26) obj. -477.177 iterations 994
Cbc0038I Pass  27: (5.29 seconds) suminf.    4.23122 (35) obj. -477.177 iterations 310
Cbc0038I Pass  28: (5.32 seconds) suminf.    1.38889 (25) obj. -480.482 iterations 983
Cbc0038I Pass  29: (5.33 seconds) suminf.    0.94444 (17) obj. -480.523 iterations 19
Cbc0038I Pass  30: (5.35 seconds) suminf.    2.03655 (17) obj. -477.177 iterations 690
Cbc0038I Solution found of -479.38
Cbc0038I Before mini branch and bound, 1555 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 34 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (5.41 seconds)
Cbc0038I Round again with cutoff of -479.861
Cbc0038I Reduced cost fixing fixed 373 variables on major pass 5
Cbc0038I Pass  31: (5.42 seconds) suminf.   12.54561 (26) obj. -479.861 iterations 3
Cbc0038I Pass  32: (5.44 seconds) suminf.   10.90353 (35) obj. -479.861 iterations 300
Cbc0038I Pass  33: (5.47 seconds) suminf.    7.00000 (27) obj. -480.838 iterations 1085
Cbc0038I Pass  34: (5.48 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 97
Cbc0038I Pass  35: (5.48 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 1
Cbc0038I Pass  36: (5.52 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 1207
Cbc0038I Pass  37: (5.52 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 11
Cbc0038I Pass  38: (5.53 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 14
Cbc0038I Pass  39: (5.53 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 7
Cbc0038I Pass  40: (5.54 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 5
Cbc0038I Pass  41: (5.54 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 9
Cbc0038I Pass  42: (5.55 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 5
Cbc0038I Pass  43: (5.55 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 10
Cbc0038I Pass  44: (5.56 seconds) suminf.   11.45037 (30) obj. -479.861 iterations 12
Cbc0038I Pass  45: (5.56 seconds) suminf.    7.93926 (25) obj. -479.861 iterations 34
Cbc0038I Pass  46: (5.59 seconds) suminf.    4.67484 (28) obj. -479.861 iterations 837
Cbc0038I Pass  47: (5.61 seconds) suminf.    4.82387 (29) obj. -479.861 iterations 721
Cbc0038I Pass  48: (5.64 seconds) suminf.    4.89358 (25) obj. -479.861 iterations 826
Cbc0038I Pass  49: (5.65 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 322
Cbc0038I Pass  50: (5.66 seconds) suminf.    3.33333 (30) obj. -480.161 iterations 304
Cbc0038I Pass  51: (5.66 seconds) suminf.    3.44444 (30) obj. -480.713 iterations 262
Cbc0038I Pass  52: (5.67 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 241
Cbc0038I Pass  53: (5.68 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 270
Cbc0038I Pass  54: (5.69 seconds) suminf.    3.51732 (29) obj. -479.861 iterations 291
Cbc0038I Pass  55: (5.70 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 303
Cbc0038I Pass  56: (5.71 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 299
Cbc0038I Pass  57: (5.72 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 269
Cbc0038I Pass  58: (5.73 seconds) suminf.    3.00000 (21) obj. -480.44 iterations 269
Cbc0038I Pass  59: (5.74 seconds) suminf.    3.10190 (22) obj. -479.861 iterations 391
Cbc0038I Pass  60: (5.75 seconds) suminf.    3.33333 (30) obj. -480.161 iterations 360
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1539 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 30 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (5.81 seconds)
Cbc0038I After 5.82 seconds - Feasibility pump exiting with objective of -479.38 - took 1.39 seconds
Cbc0012I Integer solution of -479.38047 found by feasibility pump after 0 iterations and 0 nodes (5.82 seconds)
Cbc0038I Full problem 7027 rows 1623 columns, reduced to 8 rows 7 columns
Cbc0031I 2 added rows had average density of 230.5
Cbc0013I At root node, 2 cuts changed objective from -480.98334 to -479.83094 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 18 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 449.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0001I Search completed - best objective -479.3804711200101, took 50 iterations and 0 nodes (6.00 seconds)
Cbc0032I Strong branching done 4 times (92 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 367 variables fixed on reduced cost
Cuts at root node changed objective from -480.983 to -479.294
Probing was tried 2 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)

Result - Optimal solution found

Objective value:                479.38047112
Enumerated nodes:               0
Total iterations:               50
Time (CPU seconds):             5.75
Time (Wallclock seconds):       7.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.65   (Wallclock seconds):       10.84

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/0fa6cea67da04499aa19c9decf449f5e-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/0fa6cea67da04499aa19c9decf449f5e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 699186 COLUMNS
At line 2800208 RHS
At line 3499390 BOUNDS
At line 3502358 ENDATA
Problem MODEL has 699181 rows, 2967 columns and 710163 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.764 - 0.76 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 115 strengthened rows, 180 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 3914 rows, 961 columns (961 integer (960 of which binary)) and 10767 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.8
Cbc0038I Pass   1: (1.52 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 566
Cbc0038I Solution found of -344.082
Cbc0038I Cleaned solution of -344.082
Cbc0038I Rounding solution of -361.873 is better than previous of -344.082

Cbc0038I Before mini branch and bound, 949 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.58 seconds)
Cbc0038I Round again with cutoff of -364.262
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   2: (1.58 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 0
Cbc0038I Pass   3: (1.61 seconds) suminf.    0.21396 (4) obj. -364.262 iterations 759
Cbc0038I Pass   4: (1.62 seconds) suminf.    1.47368 (4) obj. -372.292 iterations 261
Cbc0038I Pass   5: (1.63 seconds) suminf.    7.59112 (31) obj. -364.262 iterations 282
Cbc0038I Pass   6: (1.64 seconds) suminf.    1.89474 (4) obj. -373.363 iterations 209
Cbc0038I Pass   7: (1.65 seconds) suminf.    0.35541 (1) obj. -364.262 iterations 151
Cbc0038I Solution found of -364.262
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3915 rows 961 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -369.996
Cbc0038I Before mini branch and bound, 915 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3914 rows 961 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -369.996 to -369.996 (1.74 seconds)
Cbc0038I Round again with cutoff of -373.15
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass   8: (1.74 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 0
Cbc0038I Pass   9: (1.76 seconds) suminf.    1.17679 (10) obj. -373.15 iterations 618
Cbc0038I Pass  10: (1.77 seconds) suminf.    2.00000 (6) obj. -380.541 iterations 267
Cbc0038I Pass  11: (1.77 seconds) suminf.    2.00000 (6) obj. -380.541 iterations 5
Cbc0038I Pass  12: (1.78 seconds) suminf.    4.03907 (15) obj. -373.15 iterations 237
Cbc0038I Pass  13: (1.79 seconds) suminf.    2.33333 (6) obj. -380.06 iterations 193
Cbc0038I Pass  14: (1.81 seconds) suminf.    0.92941 (10) obj. -373.15 iterations 544
Cbc0038I Pass  15: (1.81 seconds) suminf.    2.33333 (6) obj. -380.06 iterations 212
Cbc0038I Pass  16: (1.82 seconds) suminf.    1.42857 (5) obj. -374.128 iterations 355
Cbc0038I Pass  17: (1.83 seconds) suminf.    1.33333 (4) obj. -374.526 iterations 236
Cbc0038I Pass  18: (1.84 seconds) suminf.    0.07166 (1) obj. -373.15 iterations 171
Cbc0038I Solution found of -373.15
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3915 rows 961 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -373.787
Cbc0038I Before mini branch and bound, 915 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3914 rows 961 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (1.89 seconds)
Cbc0038I Round again with cutoff of -377.38
Cbc0038I Reduced cost fixing fixed 72 variables on major pass 4
Cbc0038I Pass  19: (1.89 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 0
Cbc0038I Pass  20: (1.91 seconds) suminf.    2.73606 (7) obj. -377.38 iterations 752
Cbc0038I Pass  21: (1.92 seconds) suminf.    2.00000 (6) obj. -380.541 iterations 495
Cbc0038I Pass  22: (1.94 seconds) suminf.    4.01930 (17) obj. -377.38 iterations 572
Cbc0038I Pass  23: (1.95 seconds) suminf.    2.00000 (6) obj. -380.541 iterations 562
Cbc0038I Pass  24: (1.96 seconds) suminf.    0.00000 (0) obj. -381.206 iterations 315
Cbc0038I Solution found of -381.206
Cbc0038I Cleaned solution of -381.206
Cbc0038I Before mini branch and bound, 919 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3914 rows 961 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (1.99 seconds)
Cbc0038I Round again with cutoff of -382.574
Cbc0038I Reduced cost fixing fixed 150 variables on major pass 5
Cbc0038I Pass  25: (1.99 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 0
Cbc0038I Pass  26: (2.01 seconds) suminf.    6.09306 (16) obj. -382.574 iterations 573
Cbc0038I Pass  27: (2.02 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 386
Cbc0038I Pass  28: (2.03 seconds) suminf.    7.39765 (25) obj. -382.574 iterations 649
Cbc0038I Pass  29: (2.04 seconds) suminf.    9.19470 (25) obj. -382.574 iterations 58
Cbc0038I Pass  30: (2.05 seconds) suminf.    5.26932 (16) obj. -382.574 iterations 287
Cbc0038I Pass  31: (2.05 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 382
Cbc0038I Pass  32: (2.06 seconds) suminf.    3.43750 (11) obj. -385.122 iterations 209
Cbc0038I Pass  33: (2.06 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 191
Cbc0038I Pass  34: (2.07 seconds) suminf.    3.75000 (18) obj. -385.205 iterations 297
Cbc0038I Pass  35: (2.08 seconds) suminf.    3.75000 (18) obj. -385.205 iterations 325
Cbc0038I Pass  36: (2.08 seconds) suminf.    3.75000 (18) obj. -385.205 iterations 283
Cbc0038I Pass  37: (2.09 seconds) suminf.   14.88532 (37) obj. -382.574 iterations 392
Cbc0038I Pass  38: (2.10 seconds) suminf.   12.70000 (26) obj. -384.315 iterations 240
Cbc0038I Pass  39: (2.10 seconds) suminf.    3.60000 (12) obj. -385.5 iterations 6
Cbc0038I Pass  40: (2.11 seconds) suminf.    2.58478 (16) obj. -382.574 iterations 438
Cbc0038I Pass  41: (2.12 seconds) suminf.    3.60000 (12) obj. -385.5 iterations 369
Cbc0038I Pass  42: (2.14 seconds) suminf.    3.86035 (20) obj. -382.574 iterations 674
Cbc0038I Pass  43: (2.15 seconds) suminf.    1.80737 (12) obj. -382.574 iterations 372
Cbc0038I Pass  44: (2.16 seconds) suminf.    1.58182 (16) obj. -382.574 iterations 422
Cbc0038I Pass  45: (2.16 seconds) suminf.    1.80000 (12) obj. -383.202 iterations 367
Cbc0038I Pass  46: (2.18 seconds) suminf.    1.75343 (14) obj. -382.574 iterations 496
Cbc0038I Pass  47: (2.19 seconds) suminf.    1.80000 (18) obj. -382.574 iterations 523
Cbc0038I Pass  48: (2.21 seconds) suminf.    1.75343 (14) obj. -382.574 iterations 523
Cbc0038I Pass  49: (2.23 seconds) suminf.    2.51851 (15) obj. -382.574 iterations 698
Cbc0038I Pass  50: (2.23 seconds) suminf.    2.51851 (15) obj. -382.574 iterations 60
Cbc0038I Pass  51: (2.25 seconds) suminf.    0.89862 (21) obj. -382.574 iterations 528
Cbc0038I Solution found of -383.164
Cbc0038I Cleaned solution of -383.164
Cbc0038I Before mini branch and bound, 839 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3914 rows 961 columns, reduced to 28 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -383.164 to -383.25 (2.27 seconds)
Cbc0038I Round again with cutoff of -384.256
Cbc0038I Reduced cost fixing fixed 171 variables on major pass 6
Cbc0038I Pass  52: (2.28 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 0
Cbc0038I Pass  53: (2.29 seconds) suminf.    5.79529 (18) obj. -384.256 iterations 624
Cbc0038I Pass  54: (2.31 seconds) suminf.    8.14183 (18) obj. -384.256 iterations 495
Cbc0038I Pass  55: (2.32 seconds) suminf.    7.12440 (17) obj. -384.256 iterations 548
Cbc0038I Pass  56: (2.34 seconds) suminf.    3.96394 (18) obj. -384.256 iterations 693
Cbc0038I Pass  57: (2.35 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 292
Cbc0038I Pass  58: (2.35 seconds) suminf.    3.43750 (11) obj. -385.122 iterations 194
Cbc0038I Pass  59: (2.36 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 179
Cbc0038I Pass  60: (2.36 seconds) suminf.    3.43750 (11) obj. -385.122 iterations 173
Cbc0038I Pass  61: (2.37 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 331
Cbc0038I Pass  62: (2.37 seconds) suminf.    3.00000 (12) obj. -385.717 iterations 322
Cbc0038I Pass  63: (2.38 seconds) suminf.    4.66309 (20) obj. -384.256 iterations 437
Cbc0038I Pass  64: (2.39 seconds) suminf.    6.26044 (18) obj. -384.256 iterations 502
Cbc0038I Pass  65: (2.40 seconds) suminf.    5.40000 (12) obj. -384.848 iterations 256
Cbc0038I Pass  66: (2.41 seconds) suminf.    5.79073 (18) obj. -384.256 iterations 484
Cbc0038I Pass  67: (2.42 seconds) suminf.    6.07414 (20) obj. -384.256 iterations 508
Cbc0038I Pass  68: (2.44 seconds) suminf.    6.42286 (26) obj. -384.256 iterations 367
Cbc0038I Pass  69: (2.45 seconds) suminf.    6.60000 (18) obj. -384.256 iterations 350
Cbc0038I Pass  70: (2.46 seconds) suminf.    5.79073 (18) obj. -384.256 iterations 704
Cbc0038I Pass  71: (2.48 seconds) suminf.    6.07414 (20) obj. -384.256 iterations 485
Cbc0038I Pass  72: (2.49 seconds) suminf.    6.71942 (25) obj. -384.256 iterations 560
Cbc0038I Pass  73: (2.50 seconds) suminf.    5.40000 (12) obj. -384.848 iterations 503
Cbc0038I Pass  74: (2.51 seconds) suminf.    5.96413 (20) obj. -384.256 iterations 375
Cbc0038I Pass  75: (2.53 seconds) suminf.    6.99390 (24) obj. -384.256 iterations 575
Cbc0038I Pass  76: (2.53 seconds) suminf.    5.81970 (19) obj. -384.256 iterations 175
Cbc0038I Pass  77: (2.54 seconds) suminf.    4.73161 (19) obj. -384.256 iterations 242
Cbc0038I Pass  78: (2.54 seconds) suminf.    4.57674 (20) obj. -384.256 iterations 12
Cbc0038I Pass  79: (2.55 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 543
Cbc0038I Pass  80: (2.56 seconds) suminf.    4.80000 (12) obj. -385.764 iterations 17
Cbc0038I Pass  81: (2.57 seconds) suminf.    5.79529 (18) obj. -384.256 iterations 445
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 864 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3914 rows 961 columns, reduced to 18 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (2.59 seconds)
Cbc0038I After 2.59 seconds - Feasibility pump exiting with objective of -383.25 - took 1.02 seconds
Cbc0012I Integer solution of -383.24993 found by feasibility pump after 0 iterations and 0 nodes (2.59 seconds)
Cbc0038I Full problem 3914 rows 961 columns, reduced to 2 rows 4 columns
Cbc0031I 3 added rows had average density of 58
Cbc0013I At root node, 3 cuts changed objective from -385.76432 to -383.96974 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 55.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -383.24993 best solution, best possible -383.96258 (2.77 seconds)
Cbc0001I Search completed - best objective -383.2499259963602, took 599 iterations and 6 nodes (2.97 seconds)
Cbc0032I Strong branching done 48 times (936 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 181 variables fixed on reduced cost
Cuts at root node changed objective from -385.764 to -383.963
Probing was tried 17 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 7 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                383.24992600
Enumerated nodes:               6
Total iterations:               599
Time (CPU seconds):             3.02
Time (Wallclock seconds):       3.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.06   (Wallclock seconds):       4.63

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/73814668c7b94fc9ad82b1327949387b-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/73814668c7b94fc9ad82b1327949387b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 121224 COLUMNS
At line 486505 RHS
At line 607725 BOUNDS
At line 609176 ENDATA
Problem MODEL has 121219 rows, 1450 columns and 125764 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 361.405 - 0.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 294 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 1262 rows, 371 columns (371 integer (371 of which binary)) and 3342 elements
Cbc0038I Initial state - 9 integers unsatisfied sum - 1.5
Cbc0038I Pass   1: suminf.    1.07692 (14) obj. -361.346 iterations 194
Cbc0038I Solution found of -281.63
Cbc0038I Before mini branch and bound, 348 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1262 rows 371 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -281.63 to -328.488 (0.15 seconds)
Cbc0038I Round again with cutoff of -331.779
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.07692 (14) obj. -361.346 iterations 0
Cbc0038I Pass   3: suminf.    5.30936 (39) obj. -331.779 iterations 238
Cbc0038I Pass   4: suminf.    6.93878 (18) obj. -349.521 iterations 119
Cbc0038I Pass   5: suminf.    1.03658 (36) obj. -331.779 iterations 101
Cbc0038I Pass   6: suminf.    0.36224 (7) obj. -331.779 iterations 120
Cbc0038I Pass   7: suminf.    1.36111 (7) obj. -345.132 iterations 87
Cbc0038I Pass   8: suminf.    0.36224 (7) obj. -331.779 iterations 142
Cbc0038I Pass   9: suminf.    3.70588 (9) obj. -347.545 iterations 148
Cbc0038I Pass  10: suminf.    1.50000 (3) obj. -346.569 iterations 76
Cbc0038I Pass  11: suminf.    3.67949 (51) obj. -340.024 iterations 138
Cbc0038I Pass  12: suminf.    3.58268 (44) obj. -341.359 iterations 137
Cbc0038I Pass  13: suminf.    2.48387 (9) obj. -340.104 iterations 213
Cbc0038I Pass  14: suminf.    2.48387 (9) obj. -340.299 iterations 143
Cbc0038I Pass  15: suminf.   12.26250 (43) obj. -332.846 iterations 192
Cbc0038I Pass  16: suminf.    3.40733 (16) obj. -331.779 iterations 126
Cbc0038I Pass  17: suminf.    0.81437 (7) obj. -331.779 iterations 121
Cbc0038I Pass  18: suminf.    1.94444 (7) obj. -346.885 iterations 102
Cbc0038I Pass  19: suminf.    3.91742 (43) obj. -331.779 iterations 166
Cbc0038I Pass  20: suminf.    2.52161 (7) obj. -331.779 iterations 176
Cbc0038I Pass  21: suminf.    2.91667 (7) obj. -337.06 iterations 110
Cbc0038I Pass  22: suminf.    4.90493 (17) obj. -331.779 iterations 125
Cbc0038I Pass  23: suminf.    1.69252 (13) obj. -331.779 iterations 180
Cbc0038I Pass  24: suminf.    1.12925 (6) obj. -331.779 iterations 143
Cbc0038I Pass  25: suminf.    3.15382 (7) obj. -331.779 iterations 185
Cbc0038I Pass  26: suminf.    3.50000 (7) obj. -336.407 iterations 85
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -335.7 iterations 66
Cbc0038I Solution found of -335.7
Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1262 rows 371 columns, reduced to 418 rows 130 columns
Cbc0038I Mini branch and bound improved solution from -335.7 to -351.283 (0.29 seconds)
Cbc0038I Round again with cutoff of -353.308
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  28: suminf.    1.07692 (14) obj. -361.346 iterations 0
Cbc0038I Pass  29: suminf.    3.80063 (15) obj. -353.308 iterations 262
Cbc0038I Pass  30: suminf.    3.80063 (15) obj. -353.308 iterations 1
Cbc0038I Pass  31: suminf.    0.76923 (10) obj. -359.928 iterations 116
Cbc0038I Pass  32: suminf.    0.76923 (10) obj. -359.928 iterations 7
Cbc0038I Pass  33: suminf.    1.47368 (14) obj. -358.953 iterations 99
Cbc0038I Pass  34: suminf.    0.76923 (10) obj. -359.928 iterations 89
Cbc0038I Pass  35: suminf.    3.80063 (15) obj. -353.308 iterations 326
Cbc0038I Pass  36: suminf.    3.80063 (15) obj. -353.308 iterations 1
Cbc0038I Pass  37: suminf.    0.76923 (10) obj. -359.928 iterations 118
Cbc0038I Pass  38: suminf.    0.76923 (10) obj. -359.928 iterations 77
Cbc0038I Pass  39: suminf.    2.87818 (32) obj. -353.308 iterations 176
Cbc0038I Pass  40: suminf.    2.06563 (15) obj. -353.308 iterations 176
Cbc0038I Pass  41: suminf.    2.30769 (10) obj. -354.552 iterations 193
Cbc0038I Pass  42: suminf.    1.84482 (13) obj. -353.308 iterations 237
Cbc0038I Pass  43: suminf.    2.88632 (29) obj. -353.308 iterations 102
Cbc0038I Pass  44: suminf.    1.84482 (13) obj. -353.308 iterations 89
Cbc0038I Pass  45: suminf.    2.78884 (16) obj. -353.308 iterations 42
Cbc0038I Pass  46: suminf.    3.75000 (10) obj. -354.486 iterations 267
Cbc0038I Pass  47: suminf.    6.22138 (23) obj. -353.308 iterations 148
Cbc0038I Pass  48: suminf.    4.61538 (12) obj. -354.402 iterations 80
Cbc0038I Pass  49: suminf.    5.33126 (13) obj. -353.308 iterations 360
Cbc0038I Pass  50: suminf.    3.84615 (10) obj. -354.443 iterations 170
Cbc0038I Pass  51: suminf.    3.51064 (10) obj. -353.308 iterations 156
Cbc0038I Pass  52: suminf.    2.06563 (15) obj. -353.308 iterations 256
Cbc0038I Pass  53: suminf.    2.30769 (10) obj. -354.552 iterations 203
Cbc0038I Pass  54: suminf.    1.84482 (13) obj. -353.308 iterations 270
Cbc0038I Pass  55: suminf.    2.97412 (15) obj. -353.308 iterations 50
Cbc0038I Pass  56: suminf.    1.84482 (13) obj. -353.308 iterations 43
Cbc0038I Pass  57: suminf.    2.53132 (18) obj. -353.308 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 240 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1262 rows 371 columns, reduced to 103 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -351.283 to -353.766 (0.39 seconds)
Cbc0038I Round again with cutoff of -356.058
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  57: suminf.    1.07692 (14) obj. -361.346 iterations 0
Cbc0038I Pass  58: suminf.    5.24196 (15) obj. -356.058 iterations 287
Cbc0038I Pass  59: suminf.    0.76923 (10) obj. -359.928 iterations 115
Cbc0038I Pass  60: suminf.    1.08333 (13) obj. -359.81 iterations 96
Cbc0038I Pass  61: suminf.    0.76923 (10) obj. -359.928 iterations 87
Cbc0038I Pass  62: suminf.    1.08333 (13) obj. -359.81 iterations 93
Cbc0038I Pass  63: suminf.    7.67238 (22) obj. -356.058 iterations 136
Cbc0038I Pass  64: suminf.    7.13234 (24) obj. -356.058 iterations 238
Cbc0038I Pass  65: suminf.    7.13234 (24) obj. -356.058 iterations 29
Cbc0038I Pass  66: suminf.    1.08333 (13) obj. -359.81 iterations 220
Cbc0038I Pass  67: suminf.    1.08333 (13) obj. -359.81 iterations 56
Cbc0038I Pass  68: suminf.    1.08333 (13) obj. -359.81 iterations 86
Cbc0038I Pass  69: suminf.    5.95666 (18) obj. -356.058 iterations 206
Cbc0038I Pass  70: suminf.    5.95666 (18) obj. -356.058 iterations 163
Cbc0038I Pass  71: suminf.    7.43451 (23) obj. -356.058 iterations 218
Cbc0038I Pass  72: suminf.    7.43451 (23) obj. -356.058 iterations 15
Cbc0038I Pass  73: suminf.    0.76923 (10) obj. -359.928 iterations 197
Cbc0038I Pass  74: suminf.    0.76923 (10) obj. -359.928 iterations 7
Cbc0038I Pass  75: suminf.    5.24196 (15) obj. -356.058 iterations 294
Cbc0038I Pass  76: suminf.    5.24196 (15) obj. -356.058 iterations 118
Cbc0038I Pass  77: suminf.    6.31528 (19) obj. -356.058 iterations 169
Cbc0038I Pass  78: suminf.    5.08706 (18) obj. -356.058 iterations 151
Cbc0038I Pass  79: suminf.    1.07692 (14) obj. -361.346 iterations 93
Cbc0038I Pass  80: suminf.    1.08333 (13) obj. -361.346 iterations 54
Cbc0038I Pass  81: suminf.    1.07692 (14) obj. -361.346 iterations 53
Cbc0038I Pass  82: suminf.    2.34435 (13) obj. -356.058 iterations 205
Cbc0038I Pass  83: suminf.    0.76923 (10) obj. -359.928 iterations 109
Cbc0038I Pass  84: suminf.    5.24196 (15) obj. -356.058 iterations 264
Cbc0038I Pass  85: suminf.    7.85883 (19) obj. -356.058 iterations 103
Cbc0038I Pass  86: suminf.    1.22554 (10) obj. -356.058 iterations 120
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 293 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1262 rows 371 columns, reduced to 67 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I After 0.47 seconds - Feasibility pump exiting with objective of -353.766 - took 0.33 seconds
Cbc0012I Integer solution of -353.76602 found by feasibility pump after 0 iterations and 0 nodes (0.48 seconds)
Cbc0038I Full problem 1262 rows 371 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -360.93001 found by DiveCoefficient after 3 iterations and 0 nodes (0.50 seconds)
Cbc0031I 2 added rows had average density of 31
Cbc0013I At root node, 2 cuts changed objective from -361.40518 to -360.93001 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -360.9300135740399, took 3 iterations and 0 nodes (0.50 seconds)
Cbc0035I Maximum depth 0, 34 variables fixed on reduced cost
Cuts at root node changed objective from -361.405 to -360.93
Probing was tried 2 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                360.93001357
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.54
Time (Wallclock seconds):       0.57

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.77

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4ceee0f90c2941bd9ce7558052ca1179-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4ceee0f90c2941bd9ce7558052ca1179-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2131542 COLUMNS
At line 8531769 RHS
At line 10663307 BOUNDS
At line 10667872 ENDATA
Problem MODEL has 2131537 rows, 4564 columns and 2151413 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 521.245 - 2.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 95 strengthened rows, 136 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 94 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 7865 rows, 1725 columns (1725 integer (1724 of which binary)) and 21908 elements
Cbc0038I Initial state - 70 integers unsatisfied sum - 29.1875
Cbc0038I Pass   1: (5.53 seconds) suminf.    0.00000 (0) obj. -434.84 iterations 1489
Cbc0038I Solution found of -434.84
Cbc0038I Cleaned solution of -434.84
Cbc0038I Rounding solution of -460.813 is better than previous of -434.84

Cbc0038I Before mini branch and bound, 1651 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7865 rows 1725 columns, reduced to 24 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -460.813 to -500.763 (5.76 seconds)
Cbc0038I Round again with cutoff of -502.811
Cbc0038I Reduced cost fixing fixed 121 variables on major pass 2
Cbc0038I Pass   2: (5.89 seconds) suminf.    7.45823 (25) obj. -502.811 iterations 977
Cbc0038I Pass   3: (5.91 seconds) suminf.    3.68779 (13) obj. -502.811 iterations 154
Cbc0038I Pass   4: (5.92 seconds) suminf.    3.67199 (15) obj. -502.811 iterations 211
Cbc0038I Pass   5: (5.96 seconds) suminf.    3.18182 (14) obj. -508.377 iterations 678
Cbc0038I Pass   6: (5.97 seconds) suminf.    3.18182 (14) obj. -508.377 iterations 7
Cbc0038I Pass   7: (6.04 seconds) suminf.    8.06914 (26) obj. -502.811 iterations 1180
Cbc0038I Pass   8: (6.06 seconds) suminf.    7.92656 (21) obj. -502.811 iterations 411
Cbc0038I Pass   9: (6.08 seconds) suminf.    8.12002 (21) obj. -502.811 iterations 343
Cbc0038I Pass  10: (6.12 seconds) suminf.    3.99124 (18) obj. -502.811 iterations 549
Cbc0038I Pass  11: (6.14 seconds) suminf.    0.00000 (0) obj. -505.845 iterations 324
Cbc0038I Solution found of -505.845
Cbc0038I Cleaned solution of -505.845
Cbc0038I Before mini branch and bound, 1615 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7865 rows 1725 columns, reduced to 76 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (6.22 seconds)
Cbc0038I Round again with cutoff of -508.925
Cbc0038I Reduced cost fixing fixed 197 variables on major pass 3
Cbc0038I Pass  12: (6.27 seconds) suminf.    8.77006 (25) obj. -508.925 iterations 505
Cbc0038I Pass  13: (6.31 seconds) suminf.    2.00000 (6) obj. -511.456 iterations 864
Cbc0038I Pass  14: (6.32 seconds) suminf.    1.90909 (14) obj. -509.302 iterations 85
Cbc0038I Pass  15: (6.36 seconds) suminf.    2.44125 (15) obj. -508.925 iterations 921
Cbc0038I Pass  16: (6.40 seconds) suminf.    2.03226 (21) obj. -509.366 iterations 936
Cbc0038I Pass  17: (6.42 seconds) suminf.    2.45244 (17) obj. -508.925 iterations 432
Cbc0038I Pass  18: (6.44 seconds) suminf.    2.43718 (10) obj. -508.925 iterations 630
Cbc0038I Pass  19: (6.48 seconds) suminf.    1.55773 (7) obj. -508.925 iterations 841
Cbc0038I Pass  20: (6.52 seconds) suminf.    1.53123 (19) obj. -508.925 iterations 866
Cbc0038I Pass  21: (6.58 seconds) suminf.    0.70748 (11) obj. -508.925 iterations 1404
Cbc0038I Pass  22: (6.59 seconds) suminf.    0.70748 (11) obj. -508.925 iterations 0
Cbc0038I Pass  23: (6.63 seconds) suminf.    2.73761 (20) obj. -508.925 iterations 1066
Cbc0038I Pass  24: (6.64 seconds) suminf.    2.73761 (20) obj. -508.925 iterations 16
Cbc0038I Pass  25: (6.68 seconds) suminf.    3.40321 (26) obj. -508.925 iterations 1074
Cbc0038I Pass  26: (6.72 seconds) suminf.    3.42213 (18) obj. -508.925 iterations 920
Cbc0038I Pass  27: (6.74 seconds) suminf.    2.72727 (15) obj. -509.621 iterations 286
Cbc0038I Pass  28: (6.78 seconds) suminf.    3.54983 (16) obj. -508.925 iterations 953
Cbc0038I Pass  29: (6.81 seconds) suminf.    3.78105 (17) obj. -508.925 iterations 750
Cbc0038I Pass  30: (6.85 seconds) suminf.    0.68182 (15) obj. -513.822 iterations 682
Cbc0038I Pass  31: (6.87 seconds) suminf.    0.68182 (15) obj. -513.822 iterations 356
Cbc0038I Pass  32: (6.92 seconds) suminf.    5.97236 (21) obj. -508.925 iterations 878
Cbc0038I Pass  33: (6.96 seconds) suminf.   10.88147 (28) obj. -508.925 iterations 961
Cbc0038I Pass  34: (6.97 seconds) suminf.    8.12661 (33) obj. -508.925 iterations 216
Cbc0038I Pass  35: (6.98 seconds) suminf.    8.12661 (33) obj. -508.925 iterations 34
Cbc0038I Pass  36: (7.03 seconds) suminf.    0.00000 (0) obj. -514.105 iterations 1081
Cbc0038I Solution found of -514.105
Cbc0038I Cleaned solution of -514.105
Cbc0038I Before mini branch and bound, 1595 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7865 rows 1725 columns, reduced to 115 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (7.10 seconds)
Cbc0038I Round again with cutoff of -516.247
Cbc0038I Reduced cost fixing fixed 335 variables on major pass 4
Cbc0038I Pass  37: (7.13 seconds) suminf.    7.56736 (53) obj. -516.247 iterations 394
Cbc0038I Pass  38: (7.14 seconds) suminf.    7.36182 (59) obj. -516.247 iterations 145
Cbc0038I Pass  39: (7.15 seconds) suminf.   11.24627 (41) obj. -516.247 iterations 204
Cbc0038I Pass  40: (7.17 seconds) suminf.    6.57011 (98) obj. -516.247 iterations 204
Cbc0038I Pass  41: (7.17 seconds) suminf.    6.57011 (98) obj. -516.247 iterations 8
Cbc0038I Pass  42: (7.18 seconds) suminf.    8.87141 (56) obj. -516.247 iterations 71
Cbc0038I Pass  43: (7.19 seconds) suminf.    8.81990 (52) obj. -516.247 iterations 13
Cbc0038I Pass  44: (7.19 seconds) suminf.   13.57627 (50) obj. -516.247 iterations 32
Cbc0038I Pass  45: (7.20 seconds) suminf.    9.93160 (50) obj. -516.247 iterations 16
Cbc0038I Pass  46: (7.21 seconds) suminf.    7.36297 (51) obj. -516.247 iterations 31
Cbc0038I Pass  47: (7.22 seconds) suminf.    7.36182 (59) obj. -516.247 iterations 13
Cbc0038I Pass  48: (7.23 seconds) suminf.   10.53571 (34) obj. -516.247 iterations 78
Cbc0038I Pass  49: (7.24 seconds) suminf.    7.04591 (29) obj. -516.247 iterations 318
Cbc0038I Pass  50: (7.26 seconds) suminf.    7.04591 (29) obj. -516.247 iterations 293
Cbc0038I Pass  51: (7.27 seconds) suminf.    7.94021 (29) obj. -516.247 iterations 31
Cbc0038I Pass  52: (7.28 seconds) suminf.    7.43566 (56) obj. -516.247 iterations 56
Cbc0038I Pass  53: (7.30 seconds) suminf.    7.66382 (41) obj. -516.247 iterations 153
Cbc0038I Pass  54: (7.31 seconds) suminf.    7.04591 (29) obj. -516.247 iterations 134
Cbc0038I Pass  55: (7.32 seconds) suminf.    7.04591 (29) obj. -516.247 iterations 20
Cbc0038I Pass  56: (7.36 seconds) suminf.   10.32782 (29) obj. -516.247 iterations 1187
Cbc0038I Pass  57: (7.37 seconds) suminf.    6.57011 (98) obj. -516.247 iterations 91
Cbc0038I Pass  58: (7.37 seconds) suminf.    6.57011 (98) obj. -516.247 iterations 1
Cbc0038I Pass  59: (7.38 seconds) suminf.    8.87141 (56) obj. -516.247 iterations 52
Cbc0038I Pass  60: (7.39 seconds) suminf.    8.81990 (52) obj. -516.247 iterations 14
Cbc0038I Pass  61: (7.39 seconds) suminf.    8.81990 (52) obj. -516.247 iterations 26
Cbc0038I Pass  62: (7.40 seconds) suminf.    8.81990 (52) obj. -516.247 iterations 22
Cbc0038I Pass  63: (7.41 seconds) suminf.    9.47778 (53) obj. -516.247 iterations 38
Cbc0038I Pass  64: (7.41 seconds) suminf.    9.35486 (60) obj. -516.247 iterations 28
Cbc0038I Pass  65: (7.42 seconds) suminf.   12.04970 (52) obj. -516.247 iterations 93
Cbc0038I Pass  66: (7.43 seconds) suminf.    7.04591 (29) obj. -516.247 iterations 235
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1579 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7865 rows 1725 columns, reduced to 147 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (7.50 seconds)
Cbc0038I After 7.50 seconds - Feasibility pump exiting with objective of -514.105 - took 1.86 seconds
Cbc0012I Integer solution of -514.10529 found by feasibility pump after 0 iterations and 0 nodes (7.51 seconds)
Cbc0038I Full problem 7865 rows 1725 columns, reduced to 47 rows 20 columns
Cbc0031I 5 added rows had average density of 50.2
Cbc0013I At root node, 5 cuts changed objective from -521.2452 to -518.43782 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 63 column cuts (63 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 36 row cuts average 50.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 526.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -514.10529 best solution, best possible -518.17873 (7.79 seconds)
Cbc0012I Integer solution of -514.97176 found by rounding after 263 iterations and 4 nodes (8.05 seconds)
Cbc0012I Integer solution of -515.48449 found by rounding after 305 iterations and 5 nodes (8.07 seconds)
Cbc0001I Search completed - best objective -515.4844853943472, took 342 iterations and 6 nodes (8.08 seconds)
Cbc0032I Strong branching done 68 times (1672 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 382 variables fixed on reduced cost
Cuts at root node changed objective from -521.245 to -518.179
Probing was tried 12 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 12 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)

Result - Optimal solution found

Objective value:                515.48448539
Enumerated nodes:               6
Total iterations:               342
Time (CPU seconds):             7.48
Time (Wallclock seconds):       10.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       11.07   (Wallclock seconds):       19.71

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/92eda33d4d99412da53c71f84527d8b9-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/92eda33d4d99412da53c71f84527d8b9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 833658 COLUMNS
At line 3338437 RHS
At line 4172091 BOUNDS
At line 4175358 ENDATA
Problem MODEL has 833653 rows, 3266 columns and 846126 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 404.266 - 0.92 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 120 strengthened rows, 350 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 180 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 4464 rows, 1091 columns (1091 integer (1091 of which binary)) and 12338 elements
Cbc0038I Initial state - 25 integers unsatisfied sum - 3.6
Cbc0038I Solution found of -390.438
Cbc0038I Before mini branch and bound, 1066 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.22 seconds)
Cbc0038I Round again with cutoff of -391.821
Cbc0038I Reduced cost fixing fixed 90 variables on major pass 2
Cbc0038I Pass   1: (2.26 seconds) suminf.    0.09465 (1) obj. -391.821 iterations 985
Cbc0038I Pass   2: (2.26 seconds) suminf.    0.44444 (1) obj. -396.931 iterations 117
Cbc0038I Pass   3: (2.27 seconds) suminf.    9.35775 (42) obj. -391.821 iterations 307
Cbc0038I Pass   4: (2.29 seconds) suminf.    5.96228 (31) obj. -391.821 iterations 440
Cbc0038I Pass   5: (2.30 seconds) suminf.    1.60000 (6) obj. -398.953 iterations 232
Cbc0038I Pass   6: (2.31 seconds) suminf.    0.09465 (1) obj. -391.821 iterations 291
Cbc0038I Pass   7: (2.32 seconds) suminf.    0.44444 (1) obj. -396.931 iterations 95
Cbc0038I Pass   8: (2.32 seconds) suminf.    0.64965 (2) obj. -391.821 iterations 245
Cbc0038I Pass   9: (2.33 seconds) suminf.    0.41878 (1) obj. -391.821 iterations 254
Cbc0038I Pass  10: (2.33 seconds) suminf.    0.44444 (1) obj. -393.819 iterations 87
Cbc0038I Pass  11: (2.34 seconds) suminf.    3.41608 (9) obj. -391.821 iterations 313
Cbc0038I Pass  12: (2.35 seconds) suminf.    3.41608 (9) obj. -391.821 iterations 248
Cbc0038I Pass  13: (2.36 seconds) suminf.    2.10422 (6) obj. -391.821 iterations 379
Cbc0038I Pass  14: (2.37 seconds) suminf.    0.87602 (4) obj. -391.821 iterations 151
Cbc0038I Pass  15: (2.37 seconds) suminf.    1.15385 (3) obj. -394.097 iterations 147
Cbc0038I Pass  16: (2.38 seconds) suminf.    2.50000 (6) obj. -397.777 iterations 244
Cbc0038I Pass  17: (2.39 seconds) suminf.    0.41878 (1) obj. -391.821 iterations 389
Cbc0038I Pass  18: (2.40 seconds) suminf.    0.44444 (1) obj. -393.819 iterations 96
Cbc0038I Pass  19: (2.40 seconds) suminf.    1.94444 (7) obj. -397.278 iterations 290
Cbc0038I Pass  20: (2.42 seconds) suminf.    0.48722 (1) obj. -391.821 iterations 487
Cbc0038I Pass  21: (2.43 seconds) suminf.    0.44444 (1) obj. -392.819 iterations 102
Cbc0038I Pass  22: (2.43 seconds) suminf.    0.63928 (2) obj. -391.821 iterations 302
Cbc0038I Pass  23: (2.44 seconds) suminf.    0.41878 (1) obj. -391.821 iterations 349
Cbc0038I Pass  24: (2.45 seconds) suminf.    0.44444 (1) obj. -393.819 iterations 90
Cbc0038I Pass  25: (2.46 seconds) suminf.    2.78981 (13) obj. -391.821 iterations 224
Cbc0038I Pass  26: (2.46 seconds) suminf.    1.74180 (5) obj. -391.821 iterations 294
Cbc0038I Pass  27: (2.47 seconds) suminf.    1.71429 (4) obj. -391.864 iterations 145
Cbc0038I Pass  28: (2.48 seconds) suminf.    1.74180 (5) obj. -391.821 iterations 362
Cbc0038I Pass  29: (2.49 seconds) suminf.    1.71773 (5) obj. -391.821 iterations 224
Cbc0038I Pass  30: (2.49 seconds) suminf.    1.65668 (5) obj. -391.821 iterations 199
Cbc0038I Rounding solution of -396.531 is better than previous of -390.438

Cbc0038I Before mini branch and bound, 972 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 80 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -396.531 to -398.639 (2.55 seconds)
Cbc0038I Round again with cutoff of -399.765
Cbc0038I Reduced cost fixing fixed 166 variables on major pass 3
Cbc0038I Pass  30: (2.56 seconds) suminf.    0.82667 (3) obj. -399.765 iterations 94
Cbc0038I Pass  31: (2.57 seconds) suminf.    0.92308 (3) obj. -400.852 iterations 148
Cbc0038I Pass  32: (2.58 seconds) suminf.    2.04268 (18) obj. -399.765 iterations 726
Cbc0038I Pass  33: (2.59 seconds) suminf.    1.49054 (10) obj. -399.765 iterations 262
Cbc0038I Pass  34: (2.60 seconds) suminf.    2.05882 (7) obj. -401.527 iterations 418
Cbc0038I Pass  35: (2.61 seconds) suminf.    1.73741 (6) obj. -399.765 iterations 322
Cbc0038I Pass  36: (2.62 seconds) suminf.    1.42857 (5) obj. -400.488 iterations 244
Cbc0038I Pass  37: (2.63 seconds) suminf.    1.49054 (10) obj. -399.765 iterations 674
Cbc0038I Pass  38: (2.64 seconds) suminf.    2.05882 (7) obj. -401.527 iterations 410
Cbc0038I Pass  39: (2.65 seconds) suminf.    0.25507 (6) obj. -399.765 iterations 293
Cbc0038I Pass  40: (2.66 seconds) suminf.    0.12412 (3) obj. -399.765 iterations 266
Cbc0038I Pass  41: (2.66 seconds) suminf.    0.23077 (3) obj. -400.968 iterations 106
Cbc0038I Pass  42: (2.67 seconds) suminf.    0.28839 (4) obj. -399.765 iterations 232
Cbc0038I Pass  43: (2.68 seconds) suminf.    0.17597 (3) obj. -399.765 iterations 316
Cbc0038I Pass  44: (2.68 seconds) suminf.    0.23077 (3) obj. -400.383 iterations 97
Cbc0038I Pass  45: (2.69 seconds) suminf.    0.23203 (4) obj. -399.765 iterations 233
Cbc0038I Pass  46: (2.70 seconds) suminf.    0.12412 (3) obj. -399.765 iterations 289
Cbc0038I Pass  47: (2.70 seconds) suminf.    0.23077 (3) obj. -400.968 iterations 91
Cbc0038I Pass  48: (2.71 seconds) suminf.    0.44963 (3) obj. -399.765 iterations 239
Cbc0038I Pass  49: (2.72 seconds) suminf.    3.22558 (26) obj. -399.765 iterations 305
Cbc0038I Solution found of -402.044
Cbc0038I Before mini branch and bound, 1004 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 40 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -402.044 to -403.1 (2.75 seconds)
Cbc0038I Round again with cutoff of -403.45
Cbc0038I Reduced cost fixing fixed 243 variables on major pass 4
Cbc0038I Pass  50: (2.78 seconds) suminf.    2.62919 (25) obj. -403.45 iterations 433
Cbc0038I Pass  51: (2.79 seconds) suminf.    2.66667 (12) obj. -403.577 iterations 381
Cbc0038I Pass  52: (2.80 seconds) suminf.    2.63806 (13) obj. -403.45 iterations 218
Cbc0038I Pass  53: (2.80 seconds) suminf.    2.62919 (25) obj. -403.45 iterations 415
Cbc0038I Pass  54: (2.81 seconds) suminf.    2.66667 (12) obj. -403.577 iterations 358
Cbc0038I Pass  55: (2.82 seconds) suminf.    2.64781 (20) obj. -403.45 iterations 256
Cbc0038I Pass  56: (2.82 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 321
Cbc0038I Pass  57: (2.83 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 175
Cbc0038I Pass  58: (2.83 seconds) suminf.    1.12851 (7) obj. -403.45 iterations 191
Cbc0038I Pass  59: (2.84 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 179
Cbc0038I Pass  60: (2.85 seconds) suminf.    0.01649 (2) obj. -403.45 iterations 761
Cbc0038I Pass  61: (2.86 seconds) suminf.    0.01649 (2) obj. -403.45 iterations 3
Cbc0038I Solution found of -404.03
Cbc0038I Before mini branch and bound, 1036 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (2.89 seconds)
Cbc0038I Round again with cutoff of -404.101
Cbc0038I Reduced cost fixing fixed 256 variables on major pass 5
Cbc0038I Pass  62: (2.95 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 426
Cbc0038I Pass  63: (2.97 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 705
Cbc0038I Pass  64: (2.97 seconds) suminf.    0.84573 (8) obj. -404.101 iterations 179
Cbc0038I Pass  65: (2.98 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 172
Cbc0038I Pass  66: (2.99 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 817
Cbc0038I Pass  67: (3.00 seconds) suminf.    1.00107 (7) obj. -404.101 iterations 673
Cbc0038I Pass  68: (3.01 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 283
Cbc0038I Pass  69: (3.01 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 157
Cbc0038I Pass  70: (3.03 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 816
Cbc0038I Pass  71: (3.04 seconds) suminf.    0.86311 (7) obj. -404.101 iterations 632
Cbc0038I Pass  72: (3.04 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 277
Cbc0038I Pass  73: (3.05 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 169
Cbc0038I Pass  74: (3.06 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 892
Cbc0038I Pass  75: (3.07 seconds) suminf.    1.49551 (14) obj. -404.101 iterations 48
Cbc0038I Pass  76: (3.08 seconds) suminf.    1.27148 (9) obj. -404.101 iterations 343
Cbc0038I Pass  77: (3.09 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 532
Cbc0038I Pass  78: (3.10 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 254
Cbc0038I Pass  79: (3.11 seconds) suminf.    0.85828 (5) obj. -404.101 iterations 285
Cbc0038I Pass  80: (3.11 seconds) suminf.    0.87512 (7) obj. -404.101 iterations 313
Cbc0038I Pass  81: (3.12 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 243
Cbc0038I Pass  82: (3.12 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 310
Cbc0038I Pass  83: (3.13 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 197
Cbc0038I Pass  84: (3.14 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 834
Cbc0038I Pass  85: (3.14 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 37
Cbc0038I Pass  86: (3.15 seconds) suminf.    3.65008 (26) obj. -404.101 iterations 53
Cbc0038I Pass  87: (3.15 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 54
Cbc0038I Pass  88: (3.16 seconds) suminf.    3.43154 (33) obj. -404.101 iterations 42
Cbc0038I Pass  89: (3.16 seconds) suminf.    3.53848 (25) obj. -404.101 iterations 39
Cbc0038I Pass  90: (3.16 seconds) suminf.    2.03762 (15) obj. -404.101 iterations 48
Cbc0038I Pass  91: (3.18 seconds) suminf.    0.80000 (4) obj. -404.256 iterations 676
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1040 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 14 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (3.21 seconds)
Cbc0038I After 3.22 seconds - Feasibility pump exiting with objective of -404.03 - took 0.93 seconds
Cbc0012I Integer solution of -404.02982 found by feasibility pump after 0 iterations and 0 nodes (3.22 seconds)
Cbc0038I Full problem 4464 rows 1091 columns, reduced to 0 rows 0 columns
Cbc0031I 2 added rows had average density of 30
Cbc0013I At root node, 6 cuts changed objective from -404.26643 to -404.02982 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 5 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -404.029823580313, took 0 iterations and 0 nodes (3.28 seconds)
Cbc0035I Maximum depth 0, 255 variables fixed on reduced cost
Cuts at root node changed objective from -404.266 to -404.03
Probing was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Optimal solution found

Objective value:                404.02982358
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             3.10
Time (Wallclock seconds):       3.99

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.38   (Wallclock seconds):       5.78

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5501dfeaa57d48ae94d9c97f9b29ba88-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5501dfeaa57d48ae94d9c97f9b29ba88-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1852131 COLUMNS
At line 7413976 RHS
At line 9266103 BOUNDS
At line 9270677 ENDATA
Problem MODEL has 1852126 rows, 4573 columns and 1871213 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 502.697 - 1.65 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 435 strengthened rows, 196 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 430 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 124 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 107 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 97 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 70 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 7312 rows, 1672 columns (1672 integer (1672 of which binary)) and 21269 elements
Cbc0038I Initial state - 74 integers unsatisfied sum - 21.1373
Cbc0038I Pass   1: (4.43 seconds) suminf.    0.00000 (0) obj. -432.661 iterations 1523
Cbc0038I Solution found of -432.661
Cbc0038I Rounding solution of -442.042 is better than previous of -432.661

Cbc0038I Before mini branch and bound, 1595 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7312 rows 1672 columns, reduced to 21 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -442.042 to -497.466 (4.62 seconds)
Cbc0038I Round again with cutoff of -497.989
Cbc0038I Reduced cost fixing fixed 305 variables on major pass 2
Cbc0038I Pass   2: (4.75 seconds) suminf.    6.91483 (23) obj. -497.989 iterations 1347
Cbc0038I Pass   3: (4.76 seconds) suminf.    6.68197 (62) obj. -497.989 iterations 142
Cbc0038I Pass   4: (4.77 seconds) suminf.    5.48088 (23) obj. -497.989 iterations 456
Cbc0038I Pass   5: (4.81 seconds) suminf.    0.07533 (29) obj. -497.989 iterations 885
Cbc0038I Pass   6: (4.83 seconds) suminf.    0.57143 (12) obj. -501.206 iterations 326
Cbc0038I Pass   7: (4.85 seconds) suminf.    1.08740 (5) obj. -497.989 iterations 383
Cbc0038I Pass   8: (4.88 seconds) suminf.    0.83359 (29) obj. -497.989 iterations 738
Cbc0038I Pass   9: (4.90 seconds) suminf.    0.86667 (13) obj. -498.05 iterations 328
Cbc0038I Pass  10: (4.94 seconds) suminf.    1.59194 (10) obj. -497.989 iterations 1047
Cbc0038I Pass  11: (4.96 seconds) suminf.    1.23791 (10) obj. -497.989 iterations 350
Cbc0038I Pass  12: (4.97 seconds) suminf.    1.10365 (3) obj. -497.989 iterations 371
Cbc0038I Solution found of -499.425
Cbc0038I Rounding solution of -499.466 is better than previous of -499.425

Cbc0038I Before mini branch and bound, 1545 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7312 rows 1672 columns, reduced to 67 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (5.04 seconds)
Cbc0038I Round again with cutoff of -500.112
Cbc0038I Reduced cost fixing fixed 344 variables on major pass 3
Cbc0038I Pass  13: (5.08 seconds) suminf.    3.75893 (29) obj. -500.112 iterations 1147
Cbc0038I Pass  14: (5.11 seconds) suminf.    0.38111 (29) obj. -500.112 iterations 529
Cbc0038I Pass  15: (5.12 seconds) suminf.    0.50000 (11) obj. -500.694 iterations 257
Cbc0038I Pass  16: (5.14 seconds) suminf.    0.59868 (7) obj. -500.112 iterations 371
Cbc0038I Pass  17: (5.15 seconds) suminf.    0.58780 (10) obj. -500.112 iterations 419
Cbc0038I Pass  18: (5.17 seconds) suminf.    0.38111 (29) obj. -500.112 iterations 390
Cbc0038I Pass  19: (5.19 seconds) suminf.    0.57143 (12) obj. -501.206 iterations 264
Cbc0038I Pass  20: (5.23 seconds) suminf.    1.70941 (17) obj. -500.112 iterations 1132
Cbc0038I Pass  21: (5.24 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 40
Cbc0038I Pass  22: (5.25 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 16
Cbc0038I Pass  23: (5.25 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 16
Cbc0038I Pass  24: (5.26 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 21
Cbc0038I Pass  25: (5.29 seconds) suminf.    1.00000 (5) obj. -500.247 iterations 924
Cbc0038I Pass  26: (5.30 seconds) suminf.    1.00000 (2) obj. -501.078 iterations 203
Cbc0038I Pass  27: (5.33 seconds) suminf.    0.38111 (29) obj. -500.112 iterations 476
Cbc0038I Pass  28: (5.34 seconds) suminf.    0.57143 (12) obj. -501.206 iterations 270
Cbc0038I Pass  29: (5.37 seconds) suminf.    1.00000 (3) obj. -500.112 iterations 702
Cbc0038I Pass  30: (5.40 seconds) suminf.    0.38111 (29) obj. -500.112 iterations 744
Cbc0038I Pass  31: (5.41 seconds) suminf.    0.57143 (12) obj. -501.206 iterations 260
Cbc0038I Pass  32: (5.44 seconds) suminf.    0.65565 (6) obj. -500.112 iterations 829
Cbc0038I Pass  33: (5.48 seconds) suminf.    1.53180 (7) obj. -500.112 iterations 1084
Cbc0038I Pass  34: (5.51 seconds) suminf.    1.00000 (2) obj. -501.078 iterations 963
Cbc0038I Pass  35: (5.53 seconds) suminf.    1.00000 (5) obj. -500.247 iterations 259
Cbc0038I Pass  36: (5.54 seconds) suminf.    1.00000 (2) obj. -501.078 iterations 248
Cbc0038I Pass  37: (5.55 seconds) suminf.    1.11041 (6) obj. -500.112 iterations 319
Cbc0038I Pass  38: (5.57 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 779
Cbc0038I Pass  39: (5.58 seconds) suminf.    1.24784 (4) obj. -500.112 iterations 89
Cbc0038I Pass  40: (5.63 seconds) suminf.    0.38111 (29) obj. -500.112 iterations 1416
Cbc0038I Pass  41: (5.65 seconds) suminf.    0.57143 (12) obj. -501.206 iterations 279
Cbc0038I Pass  42: (5.67 seconds) suminf.    0.58480 (5) obj. -500.112 iterations 437
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1538 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7312 rows 1672 columns, reduced to 55 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (5.73 seconds)
Cbc0038I After 5.74 seconds - Feasibility pump exiting with objective of -499.466 - took 1.25 seconds
Cbc0012I Integer solution of -499.46629 found by feasibility pump after 0 iterations and 0 nodes (5.74 seconds)
Cbc0038I Full problem 7312 rows 1672 columns, reduced to 15 rows 9 columns
Cbc0031I 2 added rows had average density of 232.5
Cbc0013I At root node, 2 cuts changed objective from -502.69661 to -501.83533 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 446.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -499.46629 best solution, best possible -501.83533 (5.94 seconds)
Cbc0012I Integer solution of -499.84551 found by rounding after 300 iterations and 5 nodes (6.31 seconds)
Cbc0001I Search completed - best objective -499.8455065466209, took 701 iterations and 10 nodes (6.52 seconds)
Cbc0032I Strong branching done 54 times (968 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 386 variables fixed on reduced cost
Cuts at root node changed objective from -502.697 to -501.835
Probing was tried 11 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)

Result - Optimal solution found

Objective value:                499.84550655
Enumerated nodes:               10
Total iterations:               701
Time (CPU seconds):             6.41
Time (Wallclock seconds):       8.60

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.25   (Wallclock seconds):       11.84

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3efcad1a46324215bc919c0d5d19372f-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3efcad1a46324215bc919c0d5d19372f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 141432 COLUMNS
At line 567457 RHS
At line 708885 BOUNDS
At line 710440 ENDATA
Problem MODEL has 141427 rows, 1554 columns and 146108 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 370.409 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 158 substitutions
Cgl0004I processed model has 1353 rows, 392 columns (392 integer (392 of which binary)) and 3560 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.33333
Cbc0038I Pass   1: suminf.    2.04545 (9) obj. -370 iterations 242
Cbc0038I Solution found of -313.06
Cbc0038I Before mini branch and bound, 373 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1353 rows 392 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -313.06 to -337.733 (0.20 seconds)
Cbc0038I Round again with cutoff of -341.001
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.04545 (9) obj. -370 iterations 0
Cbc0038I Pass   3: suminf.    2.07977 (43) obj. -341.001 iterations 276
Cbc0038I Pass   4: suminf.    2.56000 (8) obj. -355.775 iterations 152
Cbc0038I Pass   5: suminf.    2.56000 (8) obj. -355.775 iterations 18
Cbc0038I Pass   6: suminf.    1.40000 (7) obj. -348.501 iterations 81
Cbc0038I Solution found of -341.657
Cbc0038I Before mini branch and bound, 323 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1353 rows 392 columns, reduced to 99 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -341.657 to -357.675 (0.22 seconds)
Cbc0038I Round again with cutoff of -360.222
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   7: suminf.    2.04545 (9) obj. -370 iterations 0
Cbc0038I Pass   8: suminf.    4.06050 (17) obj. -360.222 iterations 289
Cbc0038I Pass   9: suminf.    4.06050 (17) obj. -360.222 iterations 153
Cbc0038I Pass  10: suminf.    3.23974 (9) obj. -360.222 iterations 263
Cbc0038I Pass  11: suminf.    7.86472 (22) obj. -360.222 iterations 112
Cbc0038I Pass  12: suminf.    4.72201 (15) obj. -360.222 iterations 137
Cbc0038I Pass  13: suminf.    3.07856 (11) obj. -360.222 iterations 194
Cbc0038I Pass  14: suminf.    2.10000 (6) obj. -360.801 iterations 89
Cbc0038I Pass  15: suminf.    2.10000 (6) obj. -360.801 iterations 7
Cbc0038I Pass  16: suminf.    2.29555 (15) obj. -360.222 iterations 120
Cbc0038I Pass  17: suminf.    2.10000 (6) obj. -360.801 iterations 112
Cbc0038I Pass  18: suminf.    2.47422 (19) obj. -360.222 iterations 74
Cbc0038I Pass  19: suminf.    5.10789 (31) obj. -360.222 iterations 144
Cbc0038I Pass  20: suminf.    5.26792 (28) obj. -360.222 iterations 164
Cbc0038I Pass  21: suminf.    3.07856 (11) obj. -360.222 iterations 190
Cbc0038I Pass  22: suminf.    3.07856 (11) obj. -360.222 iterations 5
Cbc0038I Pass  23: suminf.    2.10000 (6) obj. -360.801 iterations 96
Cbc0038I Pass  24: suminf.    2.10000 (6) obj. -360.801 iterations 72
Cbc0038I Pass  25: suminf.    2.96142 (19) obj. -360.222 iterations 136
Cbc0038I Pass  26: suminf.    2.44285 (11) obj. -360.222 iterations 135
Cbc0038I Pass  27: suminf.    3.85703 (17) obj. -360.222 iterations 160
Cbc0038I Pass  28: suminf.    3.00000 (6) obj. -360.306 iterations 135
Cbc0038I Pass  29: suminf.    2.96205 (15) obj. -360.222 iterations 334
Cbc0038I Pass  30: suminf.    1.41176 (6) obj. -364.709 iterations 193
Cbc0038I Pass  31: suminf.    1.41176 (6) obj. -364.709 iterations 5
Cbc0038I Pass  32: suminf.    3.07856 (11) obj. -360.222 iterations 211
Cbc0038I Pass  33: suminf.    2.10000 (6) obj. -360.801 iterations 89
Cbc0038I Pass  34: suminf.    2.10000 (6) obj. -360.801 iterations 5
Cbc0038I Pass  35: suminf.    2.28607 (12) obj. -360.222 iterations 127
Cbc0038I Pass  36: suminf.    2.10000 (6) obj. -360.801 iterations 122
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1353 rows 392 columns, reduced to 105 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -357.675 to -364.207 (0.31 seconds)
Cbc0038I Round again with cutoff of -366.068
Cbc0038I Reduced cost fixing fixed 53 variables on major pass 4
Cbc0038I Pass  36: suminf.    2.04545 (9) obj. -370 iterations 0
Cbc0038I Pass  37: suminf.    5.50430 (15) obj. -366.068 iterations 237
Cbc0038I Pass  38: suminf.    5.31287 (15) obj. -366.068 iterations 150
Cbc0038I Pass  39: suminf.    5.31287 (15) obj. -366.068 iterations 173
Cbc0038I Pass  40: suminf.    6.28572 (15) obj. -366.068 iterations 216
Cbc0038I Pass  41: suminf.    5.50430 (15) obj. -366.068 iterations 184
Cbc0038I Pass  42: suminf.    6.31744 (16) obj. -366.068 iterations 230
Cbc0038I Pass  43: suminf.   11.31579 (31) obj. -366.068 iterations 24
Cbc0038I Pass  44: suminf.    6.31744 (16) obj. -366.068 iterations 43
Cbc0038I Pass  45: suminf.    6.31744 (16) obj. -366.068 iterations 156
Cbc0038I Pass  46: suminf.    4.86638 (22) obj. -366.068 iterations 181
Cbc0038I Pass  47: suminf.    2.85436 (13) obj. -366.068 iterations 189
Cbc0038I Pass  48: suminf.    2.50000 (11) obj. -366.687 iterations 128
Cbc0038I Pass  49: suminf.    3.41164 (16) obj. -366.068 iterations 130
Cbc0038I Pass  50: suminf.    2.50000 (11) obj. -366.687 iterations 121
Cbc0038I Pass  51: suminf.    3.33333 (10) obj. -366.121 iterations 72
Cbc0038I Pass  52: suminf.    3.36804 (14) obj. -366.068 iterations 116
Cbc0038I Pass  53: suminf.    2.50000 (11) obj. -366.687 iterations 133
Cbc0038I Pass  54: suminf.    3.34594 (39) obj. -366.068 iterations 122
Cbc0038I Pass  55: suminf.    3.39319 (30) obj. -366.068 iterations 160
Cbc0038I Pass  56: suminf.    3.55626 (17) obj. -366.068 iterations 234
Cbc0038I Pass  57: suminf.    3.36751 (12) obj. -366.068 iterations 168
Cbc0038I Pass  58: suminf.    3.39938 (16) obj. -366.068 iterations 162
Cbc0038I Pass  59: suminf.    3.39566 (20) obj. -366.068 iterations 213
Cbc0038I Pass  60: suminf.    3.40968 (19) obj. -366.068 iterations 74
Cbc0038I Pass  61: suminf.    3.42594 (16) obj. -366.068 iterations 96
Cbc0038I Pass  62: suminf.    3.42594 (16) obj. -366.068 iterations 113
Cbc0038I Pass  63: suminf.    2.85436 (13) obj. -366.068 iterations 236
Cbc0038I Pass  64: suminf.    2.50000 (11) obj. -366.687 iterations 113
Cbc0038I Pass  65: suminf.    6.11923 (17) obj. -366.068 iterations 263
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1353 rows 392 columns, reduced to 116 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -364.207 to -365.671 (0.38 seconds)
Cbc0038I Round again with cutoff of -367.37
Cbc0038I Reduced cost fixing fixed 61 variables on major pass 5
Cbc0038I Pass  65: suminf.    2.04545 (9) obj. -370 iterations 0
Cbc0038I Pass  66: suminf.    4.35866 (15) obj. -367.37 iterations 215
Cbc0038I Pass  67: suminf.    6.73995 (21) obj. -367.37 iterations 221
Cbc0038I Pass  68: suminf.    4.99586 (17) obj. -367.37 iterations 164
Cbc0038I Pass  69: suminf.    5.59091 (20) obj. -367.37 iterations 285
Cbc0038I Pass  70: suminf.    5.59091 (20) obj. -367.37 iterations 2
Cbc0038I Pass  71: suminf.    4.99586 (17) obj. -367.37 iterations 353
Cbc0038I Pass  72: suminf.    4.99586 (17) obj. -367.37 iterations 31
Cbc0038I Pass  73: suminf.    5.28000 (11) obj. -367.994 iterations 228
Cbc0038I Pass  74: suminf.    5.28000 (11) obj. -367.994 iterations 100
Cbc0038I Pass  75: suminf.    6.56997 (17) obj. -367.37 iterations 132
Cbc0038I Pass  76: suminf.    6.56997 (17) obj. -367.37 iterations 125
Cbc0038I Pass  77: suminf.    5.28000 (11) obj. -367.994 iterations 118
Cbc0038I Pass  78: suminf.    5.28193 (23) obj. -367.37 iterations 176
Cbc0038I Pass  79: suminf.    5.28000 (11) obj. -367.994 iterations 158
Cbc0038I Pass  80: suminf.    5.28000 (11) obj. -367.994 iterations 107
Cbc0038I Pass  81: suminf.    5.50458 (21) obj. -367.37 iterations 288
Cbc0038I Pass  82: suminf.    3.29390 (30) obj. -367.37 iterations 6
Cbc0038I Pass  83: suminf.    5.28000 (11) obj. -367.994 iterations 224
Cbc0038I Pass  84: suminf.    4.99586 (17) obj. -367.37 iterations 388
Cbc0038I Pass  85: suminf.    5.59091 (20) obj. -367.37 iterations 285
Cbc0038I Pass  86: suminf.    5.59091 (20) obj. -367.37 iterations 2
Cbc0038I Pass  87: suminf.    5.59091 (20) obj. -367.37 iterations 126
Cbc0038I Pass  88: suminf.    5.59091 (20) obj. -367.37 iterations 127
Cbc0038I Pass  89: suminf.    4.99586 (17) obj. -367.37 iterations 472
Cbc0038I Pass  90: suminf.    4.99586 (17) obj. -367.37 iterations 2
Cbc0038I Pass  91: suminf.    5.59091 (20) obj. -367.37 iterations 311
Cbc0038I Pass  92: suminf.    4.99586 (17) obj. -367.37 iterations 259
Cbc0038I Pass  93: suminf.    5.28000 (11) obj. -367.994 iterations 149
Cbc0038I Pass  94: suminf.    5.22839 (20) obj. -367.37 iterations 121
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 316 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1353 rows 392 columns, reduced to 51 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.46 seconds - Feasibility pump exiting with objective of -365.671 - took 0.25 seconds
Cbc0012I Integer solution of -365.67077 found by feasibility pump after 0 iterations and 0 nodes (0.46 seconds)
Cbc0038I Full problem 1353 rows 392 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -369.04114 found by DiveCoefficient after 15 iterations and 0 nodes (0.48 seconds)
Cbc0031I 3 added rows had average density of 54.666667
Cbc0013I At root node, 3 cuts changed objective from -370.40871 to -369.04114 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 20 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 96.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -369.041140056091, took 15 iterations and 0 nodes (0.48 seconds)
Cbc0035I Maximum depth 0, 54 variables fixed on reduced cost
Cuts at root node changed objective from -370.409 to -369.041
Probing was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 3 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                369.04114006
Enumerated nodes:               0
Total iterations:               15
Time (CPU seconds):             0.49
Time (Wallclock seconds):       0.57

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.69   (Wallclock seconds):       0.82

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/dfd83b2b5be64d03bef97ecdcf111f80-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/dfd83b2b5be64d03bef97ecdcf111f80-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 102486 COLUMNS
At line 411445 RHS
At line 513927 BOUNDS
At line 515288 ENDATA
Problem MODEL has 102481 rows, 1360 columns and 106425 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 342.161 - 0.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 206 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 996 rows, 302 columns (302 integer (302 of which binary)) and 2636 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.7
Cbc0038I Pass   1: suminf.    0.62069 (9) obj. -341.951 iterations 174
Cbc0038I Solution found of -254.352
Cbc0038I Before mini branch and bound, 286 integers at bound fixed and 0 continuous
Cbc0038I Full problem 996 rows 302 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -254.352 to -285.645 (0.12 seconds)
Cbc0038I Round again with cutoff of -291.296
Cbc0038I Pass   2: suminf.    0.62069 (9) obj. -341.951 iterations 0
Cbc0038I Pass   3: suminf.    1.77223 (12) obj. -291.296 iterations 185
Cbc0038I Pass   4: suminf.    0.90323 (7) obj. -324.696 iterations 85
Cbc0038I Pass   5: suminf.    0.90323 (7) obj. -324.696 iterations 2
Cbc0038I Pass   6: suminf.    0.90323 (7) obj. -324.696 iterations 58
Cbc0038I Pass   7: suminf.    0.90323 (7) obj. -324.696 iterations 54
Cbc0038I Pass   8: suminf.    1.05000 (7) obj. -315.156 iterations 58
Cbc0038I Solution found of -305.736
Cbc0038I Rounding solution of -308.058 is better than previous of -305.736

Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 996 rows 302 columns, reduced to 25 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -308.058 to -319.059 (0.14 seconds)
Cbc0038I Round again with cutoff of -323.679
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.62069 (9) obj. -341.951 iterations 0
Cbc0038I Pass  10: suminf.    0.14801 (24) obj. -323.679 iterations 205
Cbc0038I Pass  11: suminf.    0.14801 (24) obj. -323.679 iterations 13
Cbc0038I Pass  12: suminf.    0.41379 (6) obj. -335.299 iterations 83
Cbc0038I Pass  13: suminf.    0.41379 (6) obj. -335.299 iterations 7
Cbc0038I Pass  14: suminf.    0.41379 (6) obj. -335.299 iterations 57
Cbc0038I Pass  15: suminf.    0.41379 (6) obj. -335.299 iterations 55
Cbc0038I Pass  16: suminf.    0.14801 (24) obj. -323.679 iterations 114
Cbc0038I Pass  17: suminf.    0.14801 (24) obj. -323.679 iterations 13
Cbc0038I Pass  18: suminf.    4.80417 (20) obj. -323.679 iterations 114
Cbc0038I Pass  19: suminf.    1.69758 (10) obj. -323.679 iterations 29
Cbc0038I Pass  20: suminf.    0.25000 (5) obj. -325.175 iterations 16
Cbc0038I Pass  21: suminf.    2.44515 (18) obj. -323.679 iterations 116
Cbc0038I Pass  22: suminf.    1.07692 (4) obj. -326.356 iterations 69
Cbc0038I Pass  23: suminf.    2.39134 (15) obj. -323.679 iterations 70
Cbc0038I Pass  24: suminf.    1.38462 (4) obj. -325.76 iterations 61
Cbc0038I Pass  25: suminf.    2.44005 (18) obj. -323.679 iterations 94
Cbc0038I Pass  26: suminf.    1.38462 (4) obj. -325.76 iterations 71
Cbc0038I Pass  27: suminf.    2.78824 (28) obj. -323.679 iterations 115
Cbc0038I Pass  28: suminf.    4.80790 (14) obj. -323.679 iterations 164
Cbc0038I Pass  29: suminf.    4.43195 (11) obj. -323.679 iterations 158
Cbc0038I Pass  30: suminf.    2.44515 (18) obj. -323.679 iterations 198
Cbc0038I Pass  31: suminf.    1.07692 (4) obj. -326.356 iterations 55
Cbc0038I Pass  32: suminf.    2.85924 (16) obj. -323.679 iterations 78
Cbc0038I Pass  33: suminf.    1.07692 (4) obj. -326.356 iterations 68
Cbc0038I Pass  34: suminf.    1.98516 (13) obj. -323.679 iterations 61
Cbc0038I Pass  35: suminf.    1.98516 (13) obj. -323.679 iterations 103
Cbc0038I Pass  36: suminf.    7.99381 (17) obj. -323.679 iterations 155
Cbc0038I Pass  37: suminf.    2.33955 (12) obj. -323.679 iterations 295
Cbc0038I Pass  38: suminf.    1.91383 (10) obj. -323.679 iterations 159
Cbc0038I Rounding solution of -321.272 is better than previous of -319.059

Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous
Cbc0038I Full problem 996 rows 302 columns, reduced to 123 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -321.272 to -334.101 (0.20 seconds)
Cbc0038I Round again with cutoff of -336.519
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.62069 (9) obj. -341.951 iterations 0
Cbc0038I Pass  39: suminf.    2.97617 (15) obj. -336.519 iterations 341
Cbc0038I Pass  40: suminf.    2.97617 (15) obj. -336.519 iterations 45
Cbc0038I Pass  41: suminf.    2.97617 (15) obj. -336.519 iterations 3
Cbc0038I Pass  42: suminf.    2.97617 (15) obj. -336.519 iterations 3
Cbc0038I Pass  43: suminf.    2.97617 (15) obj. -336.519 iterations 7
Cbc0038I Pass  44: suminf.    2.97617 (15) obj. -336.519 iterations 38
Cbc0038I Pass  45: suminf.    2.97617 (15) obj. -336.519 iterations 36
Cbc0038I Pass  46: suminf.    0.67925 (11) obj. -338.01 iterations 205
Cbc0038I Pass  47: suminf.    0.30015 (6) obj. -336.519 iterations 122
Cbc0038I Pass  48: suminf.    0.62069 (6) obj. -341.164 iterations 63
Cbc0038I Pass  49: suminf.    0.62069 (6) obj. -341.164 iterations 79
Cbc0038I Pass  50: suminf.    4.62162 (17) obj. -338.225 iterations 133
Cbc0038I Pass  51: suminf.    1.60378 (6) obj. -336.519 iterations 255
Cbc0038I Pass  52: suminf.    1.86207 (6) obj. -340.262 iterations 60
Cbc0038I Pass  53: suminf.    1.59996 (25) obj. -336.519 iterations 90
Cbc0038I Pass  54: suminf.    1.28968 (6) obj. -336.519 iterations 114
Cbc0038I Pass  55: suminf.    1.44828 (6) obj. -338.817 iterations 63
Cbc0038I Pass  56: suminf.    4.34130 (21) obj. -336.519 iterations 110
Cbc0038I Pass  57: suminf.    2.91799 (22) obj. -336.519 iterations 117
Cbc0038I Pass  58: suminf.    1.03448 (6) obj. -338.707 iterations 77
Cbc0038I Pass  59: suminf.    1.18545 (6) obj. -336.519 iterations 86
Cbc0038I Pass  60: suminf.    1.03448 (6) obj. -338.707 iterations 100
Cbc0038I Pass  61: suminf.    2.49542 (16) obj. -336.519 iterations 121
Cbc0038I Pass  62: suminf.    2.21213 (19) obj. -336.519 iterations 137
Cbc0038I Pass  63: suminf.    1.44828 (6) obj. -337.262 iterations 123
Cbc0038I Pass  64: suminf.    1.49955 (6) obj. -336.519 iterations 100
Cbc0038I Pass  65: suminf.    1.52729 (11) obj. -336.519 iterations 122
Cbc0038I Pass  66: suminf.    0.85711 (6) obj. -336.519 iterations 138
Cbc0038I Pass  67: suminf.    1.03448 (6) obj. -339.089 iterations 52
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 228 integers at bound fixed and 0 continuous
Cbc0038I Full problem 996 rows 302 columns, reduced to 76 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -334.101 to -338.438 (0.25 seconds)
Cbc0038I Round again with cutoff of -339.555
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 5
Cbc0038I Pass  67: suminf.    0.70000 (7) obj. -342.161 iterations 3
Cbc0038I Pass  68: suminf.    4.55912 (14) obj. -339.555 iterations 258
Cbc0038I Pass  69: suminf.    3.21429 (9) obj. -340.863 iterations 76
Cbc0038I Pass  70: suminf.    3.21429 (9) obj. -340.863 iterations 66
Cbc0038I Pass  71: suminf.    3.21429 (9) obj. -340.863 iterations 64
Cbc0038I Pass  72: suminf.    3.21429 (9) obj. -340.863 iterations 50
Cbc0038I Pass  73: suminf.    3.21429 (9) obj. -340.863 iterations 97
Cbc0038I Pass  74: suminf.    5.51827 (14) obj. -339.555 iterations 160
Cbc0038I Pass  75: suminf.    4.58458 (17) obj. -339.555 iterations 135
Cbc0038I Pass  76: suminf.    0.12348 (8) obj. -339.555 iterations 98
Cbc0038I Pass  77: suminf.    0.11485 (14) obj. -339.555 iterations 102
Cbc0038I Pass  78: suminf.    0.35000 (7) obj. -341.578 iterations 71
Cbc0038I Pass  79: suminf.    0.30769 (4) obj. -341.008 iterations 96
Cbc0038I Pass  80: suminf.    0.30769 (4) obj. -341.008 iterations 90
Cbc0038I Pass  81: suminf.    6.71348 (18) obj. -339.555 iterations 111
Cbc0038I Pass  82: suminf.    0.28571 (4) obj. -340.259 iterations 72
Cbc0038I Pass  83: suminf.    0.12449 (7) obj. -339.555 iterations 106
Cbc0038I Pass  84: suminf.    0.50000 (7) obj. -341.214 iterations 97
Cbc0038I Pass  85: suminf.    2.59569 (12) obj. -339.555 iterations 141
Cbc0038I Pass  86: suminf.    0.47059 (8) obj. -339.884 iterations 84
Cbc0038I Pass  87: suminf.    4.74795 (14) obj. -339.555 iterations 210
Cbc0038I Pass  88: suminf.    1.49783 (7) obj. -339.555 iterations 154
Cbc0038I Pass  89: suminf.    1.40000 (7) obj. -340.432 iterations 40
Cbc0038I Pass  90: suminf.    0.70000 (7) obj. -342.161 iterations 52
Cbc0038I Pass  91: suminf.    0.70000 (7) obj. -342.161 iterations 43
Cbc0038I Pass  92: suminf.    4.55912 (14) obj. -339.555 iterations 188
Cbc0038I Pass  93: suminf.    3.21429 (9) obj. -340.863 iterations 65
Cbc0038I Pass  94: suminf.    3.21429 (9) obj. -340.863 iterations 34
Cbc0038I Pass  95: suminf.    3.21429 (9) obj. -340.863 iterations 31
Cbc0038I Pass  96: suminf.    3.21429 (9) obj. -340.863 iterations 61
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 240 integers at bound fixed and 0 continuous
Cbc0038I Full problem 996 rows 302 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -338.438 - took 0.19 seconds
Cbc0012I Integer solution of -338.43802 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0031I 4 added rows had average density of 27.5
Cbc0013I At root node, 4 cuts changed objective from -342.16053 to -340.11805 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -338.43802 best solution, best possible -340.11805 (0.35 seconds)
Cbc0001I Search completed - best objective -338.4380210813471, took 377 iterations and 12 nodes (0.44 seconds)
Cbc0032I Strong branching done 262 times (1378 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 76 variables fixed on reduced cost
Cuts at root node changed objective from -342.161 to -340.118
Probing was tried 35 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 34 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 34 times and created 94 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                338.43802108
Enumerated nodes:               12
Total iterations:               377
Time (CPU seconds):             0.47
Time (Wallclock seconds):       0.50

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.67

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5488ebdc77d64a5fa08871b3122e92d9-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5488ebdc77d64a5fa08871b3122e92d9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 263984 COLUMNS
At line 1058201 RHS
At line 1322181 BOUNDS
At line 1324182 ENDATA
Problem MODEL has 263979 rows, 2000 columns and 270733 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 382.065 - 0.09 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 306 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 2160 rows, 578 columns (578 integer (578 of which binary)) and 5766 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 2.1
Cbc0038I Pass   1: suminf.    1.64516 (17) obj. -380.799 iterations 356
Cbc0038I Solution found of -272.313
Cbc0038I Rounding solution of -275.635 is better than previous of -272.313

Cbc0038I Before mini branch and bound, 547 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2160 rows 578 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -275.635 to -323.374 (0.36 seconds)
Cbc0038I Round again with cutoff of -329.243
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.64516 (17) obj. -380.799 iterations 0
Cbc0038I Pass   3: suminf.    3.97962 (12) obj. -329.243 iterations 336
Cbc0038I Pass   4: suminf.    6.00000 (12) obj. -358.145 iterations 148
Cbc0038I Pass   5: suminf.    3.56479 (12) obj. -329.243 iterations 138
Cbc0038I Pass   6: suminf.    3.19722 (11) obj. -329.243 iterations 49
Cbc0038I Pass   7: suminf.    4.71429 (11) obj. -352.25 iterations 116
Cbc0038I Pass   8: suminf.    1.87500 (19) obj. -348.611 iterations 262
Cbc0038I Solution found of -331.412
Cbc0038I Rounding solution of -340.208 is better than previous of -331.412

Cbc0038I Before mini branch and bound, 518 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2160 rows 578 columns, reduced to 21 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.40 seconds)
Cbc0038I Round again with cutoff of -348.579
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass   9: suminf.    1.64516 (17) obj. -380.799 iterations 0
Cbc0038I Pass  10: suminf.    6.79923 (23) obj. -348.579 iterations 148
Cbc0038I Pass  11: suminf.    5.33131 (12) obj. -348.579 iterations 41
Cbc0038I Pass  12: suminf.    5.33131 (12) obj. -348.579 iterations 80
Cbc0038I Pass  13: suminf.    6.00000 (12) obj. -358.145 iterations 113
Cbc0038I Pass  14: suminf.    6.43022 (22) obj. -348.579 iterations 153
Cbc0038I Pass  15: suminf.    4.08687 (23) obj. -348.579 iterations 229
Cbc0038I Pass  16: suminf.    4.08687 (23) obj. -348.579 iterations 47
Cbc0038I Pass  17: suminf.    3.72414 (18) obj. -356.323 iterations 315
Cbc0038I Pass  18: suminf.    0.17210 (6) obj. -348.579 iterations 205
Cbc0038I Pass  19: suminf.    0.64286 (6) obj. -358.611 iterations 61
Cbc0038I Pass  20: suminf.    2.05882 (19) obj. -352.981 iterations 228
Cbc0038I Pass  21: suminf.    0.43967 (6) obj. -348.579 iterations 187
Cbc0038I Pass  22: suminf.    0.75000 (6) obj. -355.192 iterations 77
Cbc0038I Pass  23: suminf.    2.66667 (8) obj. -350.306 iterations 266
Cbc0038I Pass  24: suminf.    0.69044 (6) obj. -348.579 iterations 221
Cbc0038I Pass  25: suminf.    0.96429 (6) obj. -354.415 iterations 79
Cbc0038I Pass  26: suminf.    1.81818 (4) obj. -352.949 iterations 322
Cbc0038I Pass  27: suminf.    0.35962 (6) obj. -348.579 iterations 182
Cbc0038I Pass  28: suminf.    0.53571 (6) obj. -352.332 iterations 58
Cbc0038I Pass  29: suminf.    3.46829 (54) obj. -350.858 iterations 267
Cbc0038I Pass  30: suminf.    3.04237 (15) obj. -348.579 iterations 285
Cbc0038I Pass  31: suminf.    2.63196 (7) obj. -348.579 iterations 346
Cbc0038I Pass  32: suminf.    0.84634 (6) obj. -348.579 iterations 200
Cbc0038I Pass  33: suminf.    1.39286 (6) obj. -360.225 iterations 54
Cbc0038I Pass  34: suminf.    7.88196 (72) obj. -348.579 iterations 244
Cbc0038I Pass  35: suminf.    0.64339 (6) obj. -348.579 iterations 209
Cbc0038I Pass  36: suminf.    1.07143 (6) obj. -357.7 iterations 76
Cbc0038I Pass  37: suminf.    8.73134 (37) obj. -351.734 iterations 287
Cbc0038I Pass  38: suminf.    2.24561 (44) obj. -358.464 iterations 335
Cbc0038I Rounding solution of -348.234 is better than previous of -340.208

Cbc0038I Before mini branch and bound, 370 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2160 rows 578 columns, reduced to 458 rows 145 columns
Cbc0038I Mini branch and bound improved solution from -348.234 to -375.628 (0.55 seconds)
Cbc0038I Round again with cutoff of -377.559
Cbc0038I Reduced cost fixing fixed 79 variables on major pass 4
Cbc0038I Pass  38: suminf.    1.68750 (9) obj. -380.82 iterations 7
Cbc0038I Pass  39: suminf.    4.62247 (19) obj. -377.559 iterations 356
Cbc0038I Pass  40: suminf.    6.16389 (19) obj. -377.559 iterations 262
Cbc0038I Pass  41: suminf.    6.00000 (12) obj. -378.069 iterations 190
Cbc0038I Pass  42: suminf.    5.00000 (10) obj. -381.863 iterations 54
Cbc0038I Pass  43: suminf.    0.78514 (10) obj. -377.559 iterations 257
Cbc0038I Pass  44: suminf.    1.07143 (10) obj. -379.84 iterations 145
Cbc0038I Pass  45: suminf.    0.50895 (11) obj. -377.559 iterations 230
Cbc0038I Pass  46: suminf.    0.50000 (2) obj. -377.803 iterations 200
Cbc0038I Pass  47: suminf.    0.56919 (14) obj. -377.559 iterations 160
Cbc0038I Pass  48: suminf.    0.50000 (2) obj. -377.803 iterations 139
Cbc0038I Pass  49: suminf.    0.54808 (12) obj. -377.559 iterations 155
Cbc0038I Pass  50: suminf.    1.90909 (7) obj. -380.946 iterations 241
Cbc0038I Pass  51: suminf.    6.13182 (17) obj. -377.559 iterations 355
Cbc0038I Pass  52: suminf.    4.70806 (16) obj. -377.559 iterations 298
Cbc0038I Pass  53: suminf.    3.12443 (19) obj. -377.559 iterations 207
Cbc0038I Pass  54: suminf.    0.78514 (10) obj. -377.559 iterations 163
Cbc0038I Pass  55: suminf.    1.07143 (10) obj. -379.84 iterations 126
Cbc0038I Pass  56: suminf.    1.20000 (3) obj. -379.924 iterations 194
Cbc0038I Pass  57: suminf.    1.12500 (9) obj. -377.936 iterations 99
Cbc0038I Pass  58: suminf.    1.46415 (19) obj. -377.559 iterations 288
Cbc0038I Pass  59: suminf.    1.59420 (12) obj. -377.559 iterations 405
Cbc0038I Pass  60: suminf.    2.58043 (13) obj. -377.559 iterations 236
Cbc0038I Pass  61: suminf.    1.50000 (4) obj. -379.164 iterations 112
Cbc0038I Pass  62: suminf.    0.78514 (10) obj. -377.559 iterations 234
Cbc0038I Pass  63: suminf.    1.07143 (10) obj. -379.84 iterations 130
Cbc0038I Pass  64: suminf.    1.50000 (5) obj. -377.559 iterations 165
Cbc0038I Pass  65: suminf.    0.50000 (5) obj. -377.559 iterations 147
Cbc0038I Pass  66: suminf.    0.39121 (27) obj. -377.559 iterations 473
Cbc0038I Pass  67: suminf.    0.42091 (11) obj. -377.559 iterations 226
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 492 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2160 rows 578 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.68 seconds)
Cbc0038I After 0.68 seconds - Feasibility pump exiting with objective of -375.628 - took 0.34 seconds
Cbc0012I Integer solution of -375.62831 found by feasibility pump after 0 iterations and 0 nodes (0.68 seconds)
Cbc0012I Integer solution of -381.96919 found by DiveCoefficient after 0 iterations and 0 nodes (0.69 seconds)
Cbc0038I Full problem 2160 rows 578 columns, reduced to 2 rows 3 columns
Cbc0031I 2 added rows had average density of 8
Cbc0013I At root node, 28 cuts changed objective from -382.06502 to -381.05403 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 5 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -381.9691936748191, took 0 iterations and 0 nodes (0.71 seconds)
Cbc0035I Maximum depth 0, 124 variables fixed on reduced cost
Cuts at root node changed objective from -382.065 to -381.054
Probing was tried 1 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                381.96919367
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.76
Time (Wallclock seconds):       0.87

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/43402f20cdaf4105b1d1e77532149a1f-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/43402f20cdaf4105b1d1e77532149a1f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 882722 COLUMNS
At line 3534767 RHS
At line 4417485 BOUNDS
At line 4420800 ENDATA
Problem MODEL has 882717 rows, 3314 columns and 895267 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 395.264 - 0.90 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 246 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 4599 rows, 1129 columns (1129 integer (1128 of which binary)) and 12520 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.09091
Cbc0038I Solution found of -367.056
Cbc0038I Cleaned solution of -367.056
Cbc0038I Before mini branch and bound, 1115 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4599 rows 1129 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.93 seconds)
Cbc0038I Round again with cutoff of -369.876
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   1: (1.96 seconds) suminf.    0.03066 (1) obj. -369.876 iterations 968
Cbc0038I Solution found of -369.876
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4600 rows 1129 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -372.529
Cbc0038I Rounding solution of -386.969 is better than previous of -372.529

Cbc0038I Before mini branch and bound, 1114 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.00 seconds)
Cbc0038I Round again with cutoff of -388.628
Cbc0038I Reduced cost fixing fixed 133 variables on major pass 3
Cbc0038I Pass   2: (2.06 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 788
Cbc0038I Pass   3: (2.06 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 1
Cbc0038I Pass   4: (2.07 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 295
Cbc0038I Pass   5: (2.07 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 0
Cbc0038I Pass   6: (2.09 seconds) suminf.   11.78631 (26) obj. -388.628 iterations 785
Cbc0038I Pass   7: (2.10 seconds) suminf.    5.78581 (25) obj. -388.628 iterations 70
Cbc0038I Pass   8: (2.11 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 911
Cbc0038I Pass   9: (2.11 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 1
Cbc0038I Pass  10: (2.12 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 230
Cbc0038I Pass  11: (2.12 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 0
Cbc0038I Pass  12: (2.12 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 258
Cbc0038I Pass  13: (2.13 seconds) suminf.    2.06898 (25) obj. -388.628 iterations 365
Cbc0038I Pass  14: (2.15 seconds) suminf.    0.76391 (17) obj. -388.628 iterations 522
Cbc0038I Pass  15: (2.16 seconds) suminf.    2.52339 (11) obj. -388.628 iterations 201
Cbc0038I Pass  16: (2.17 seconds) suminf.    2.35294 (10) obj. -389.532 iterations 558
Cbc0038I Pass  17: (2.19 seconds) suminf.    2.06138 (15) obj. -388.628 iterations 588
Cbc0038I Pass  18: (2.20 seconds) suminf.    2.06138 (15) obj. -388.628 iterations 167
Cbc0038I Pass  19: (2.20 seconds) suminf.    1.46915 (9) obj. -388.628 iterations 147
Cbc0038I Pass  20: (2.21 seconds) suminf.    1.01080 (15) obj. -388.628 iterations 253
Cbc0038I Pass  21: (2.23 seconds) suminf.    3.18182 (14) obj. -393.085 iterations 702
Cbc0038I Pass  22: (2.24 seconds) suminf.    3.18182 (14) obj. -393.085 iterations 5
Cbc0038I Pass  23: (2.26 seconds) suminf.    1.91662 (23) obj. -388.628 iterations 735
Cbc0038I Pass  24: (2.26 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 259
Cbc0038I Pass  25: (2.27 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 249
Cbc0038I Pass  26: (2.27 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 0
Cbc0038I Pass  27: (2.28 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 253
Cbc0038I Pass  28: (2.29 seconds) suminf.    2.69452 (9) obj. -388.628 iterations 628
Cbc0038I Pass  29: (2.31 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 624
Cbc0038I Pass  30: (2.31 seconds) suminf.    0.61438 (5) obj. -388.628 iterations 0
Cbc0038I Pass  31: (2.31 seconds) suminf.    2.33333 (5) obj. -388.675 iterations 247
Cbc0038I Rounding solution of -391.492 is better than previous of -386.969

Cbc0038I Before mini branch and bound, 990 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4599 rows 1129 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -391.492 to -393.473 (2.38 seconds)
Cbc0038I Round again with cutoff of -394.011
Cbc0038I Reduced cost fixing fixed 220 variables on major pass 4
Cbc0038I Pass  31: (2.40 seconds) suminf.    4.49110 (15) obj. -394.011 iterations 853
Cbc0038I Pass  32: (2.42 seconds) suminf.    5.09091 (14) obj. -395.264 iterations 706
Cbc0038I Pass  33: (2.43 seconds) suminf.    5.09091 (14) obj. -395.264 iterations 179
Cbc0038I Pass  34: (2.44 seconds) suminf.    3.36460 (9) obj. -394.011 iterations 442
Cbc0038I Pass  35: (2.44 seconds) suminf.    2.66667 (8) obj. -394.749 iterations 323
Cbc0038I Pass  36: (2.45 seconds) suminf.    2.66667 (8) obj. -394.749 iterations 159
Cbc0038I Pass  37: (2.46 seconds) suminf.    2.66667 (8) obj. -394.749 iterations 156
Cbc0038I Pass  38: (2.46 seconds) suminf.    2.66667 (8) obj. -394.749 iterations 159
Cbc0038I Pass  39: (2.47 seconds) suminf.    2.66667 (8) obj. -394.749 iterations 267
Cbc0038I Pass  40: (2.48 seconds) suminf.    3.14501 (9) obj. -394.011 iterations 375
Cbc0038I Pass  41: (2.49 seconds) suminf.    3.36460 (9) obj. -394.011 iterations 340
Cbc0038I Pass  42: (2.49 seconds) suminf.    3.36460 (9) obj. -394.011 iterations 241
Cbc0038I Pass  43: (2.50 seconds) suminf.    4.92833 (18) obj. -394.011 iterations 493
Cbc0038I Pass  44: (2.51 seconds) suminf.    7.20325 (19) obj. -394.011 iterations 83
Cbc0038I Pass  45: (2.51 seconds) suminf.    7.20325 (19) obj. -394.011 iterations 233
Cbc0038I Pass  46: (2.53 seconds) suminf.    7.00000 (14) obj. -395.001 iterations 430
Cbc0038I Pass  47: (2.54 seconds) suminf.    7.00000 (14) obj. -395.001 iterations 284
Cbc0038I Pass  48: (2.55 seconds) suminf.    7.00000 (14) obj. -395.001 iterations 314
Cbc0038I Pass  49: (2.56 seconds) suminf.    7.00000 (14) obj. -395.001 iterations 270
Cbc0038I Pass  50: (2.57 seconds) suminf.    4.49110 (15) obj. -394.011 iterations 567
Cbc0038I Pass  51: (2.57 seconds) suminf.    4.49110 (15) obj. -394.011 iterations 0
Cbc0038I Pass  52: (2.59 seconds) suminf.    5.09091 (14) obj. -395.264 iterations 665
Cbc0038I Pass  53: (2.60 seconds) suminf.    5.03957 (20) obj. -394.011 iterations 313
Cbc0038I Pass  54: (2.60 seconds) suminf.    4.62965 (19) obj. -394.011 iterations 364
Cbc0038I Pass  55: (2.61 seconds) suminf.    5.68421 (27) obj. -394.311 iterations 401
Cbc0038I Pass  56: (2.62 seconds) suminf.    5.35745 (23) obj. -394.011 iterations 343
Cbc0038I Pass  57: (2.64 seconds) suminf.    4.84710 (19) obj. -394.011 iterations 785
Cbc0038I Pass  58: (2.64 seconds) suminf.    4.84710 (19) obj. -394.011 iterations 83
Cbc0038I Pass  59: (2.65 seconds) suminf.    4.84710 (19) obj. -394.011 iterations 339
Cbc0038I Pass  60: (2.66 seconds) suminf.    7.06890 (23) obj. -394.011 iterations 361
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1051 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4599 rows 1129 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (2.68 seconds)
Cbc0038I After 2.68 seconds - Feasibility pump exiting with objective of -393.473 - took 0.79 seconds
Cbc0012I Integer solution of -393.47323 found by feasibility pump after 0 iterations and 0 nodes (2.68 seconds)
Cbc0038I Full problem 4599 rows 1129 columns, reduced to 1 rows 2 columns
Cbc0031I 5 added rows had average density of 22.4
Cbc0013I At root node, 27 cuts changed objective from -395.26432 to -391.30824 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 8.5 elements, 15 column cuts (15 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 24 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -393.4732279848479, took 508 iterations and 0 nodes (2.89 seconds)
Cbc0035I Maximum depth 0, 229 variables fixed on reduced cost
Cuts at root node changed objective from -395.264 to -391.308
Probing was tried 4 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 4 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Optimal solution found

Objective value:                393.47322798
Enumerated nodes:               0
Total iterations:               508
Time (CPU seconds):             3.12
Time (Wallclock seconds):       680.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.65   (Wallclock seconds):       683.47

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8a19622d7ed946d985c92aeff17f20e3-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8a19622d7ed946d985c92aeff17f20e3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1269806 COLUMNS
At line 5083882 RHS
At line 6353684 BOUNDS
At line 6357662 ENDATA
Problem MODEL has 1269801 rows, 3977 columns and 1285199 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 449.517 - 1.24 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 327 strengthened rows, 510 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 243 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 5499 rows, 1361 columns (1361 integer (1358 of which binary)) and 15364 elements
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.35294
Cbc0038I Solution found of -423.596
Cbc0038I Cleaned solution of -423.596
Cbc0038I Before mini branch and bound, 1348 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5499 rows 1361 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.92 seconds)
Cbc0038I Round again with cutoff of -426.188
Cbc0038I Reduced cost fixing fixed 73 variables on major pass 2
Cbc0038I Pass   1: (2.94 seconds) suminf.    0.40000 (1) obj. -436.408 iterations 1142
Cbc0038I Solution found of -436.408
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 5500 rows 1361 columns, reduced to 2 rows 3 columns
Cbc0038I Cleaned solution of -439.391
Cbc0038I Before mini branch and bound, 1347 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.08 seconds)
Cbc0038I Round again with cutoff of -441.417
Cbc0038I Reduced cost fixing fixed 182 variables on major pass 3
Cbc0038I Pass   2: (3.11 seconds) suminf.    0.51751 (3) obj. -441.417 iterations 289
Cbc0038I Pass   3: (3.12 seconds) suminf.    0.96179 (4) obj. -441.417 iterations 593
Cbc0038I Pass   4: (3.16 seconds) suminf.    0.00000 (0) obj. -444.541 iterations 1073
Cbc0038I Solution found of -444.541
Cbc0038I Cleaned solution of -444.541
Cbc0038I Before mini branch and bound, 1341 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5499 rows 1361 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -444.541 to -444.541 (3.19 seconds)
Cbc0038I Round again with cutoff of -446.034
Cbc0038I Reduced cost fixing fixed 268 variables on major pass 4
Cbc0038I Pass   5: (3.22 seconds) suminf.    1.63632 (6) obj. -446.034 iterations 1067
Cbc0038I Pass   6: (3.24 seconds) suminf.    2.33333 (5) obj. -446.92 iterations 771
Cbc0038I Pass   7: (3.25 seconds) suminf.    2.83703 (11) obj. -446.034 iterations 175
Cbc0038I Pass   8: (3.25 seconds) suminf.    2.33333 (5) obj. -446.92 iterations 166
Cbc0038I Pass   9: (3.26 seconds) suminf.    1.14570 (6) obj. -446.034 iterations 302
Cbc0038I Pass  10: (3.27 seconds) suminf.    1.14570 (6) obj. -446.034 iterations 660
Cbc0038I Pass  11: (3.28 seconds) suminf.    2.00000 (5) obj. -446.779 iterations 785
Cbc0038I Pass  12: (3.29 seconds) suminf.    2.33333 (5) obj. -446.92 iterations 240
Cbc0038I Pass  13: (3.30 seconds) suminf.    1.63632 (6) obj. -446.034 iterations 758
Cbc0038I Pass  14: (3.32 seconds) suminf.    1.14032 (8) obj. -446.034 iterations 727
Cbc0038I Pass  15: (3.34 seconds) suminf.    0.96749 (12) obj. -446.034 iterations 766
Cbc0038I Pass  16: (3.37 seconds) suminf.    3.31083 (8) obj. -446.034 iterations 1166
Cbc0038I Pass  17: (3.37 seconds) suminf.    2.57143 (6) obj. -446.631 iterations 339
Cbc0038I Pass  18: (3.40 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 871
Cbc0038I Pass  19: (3.40 seconds) suminf.    3.31083 (8) obj. -446.034 iterations 19
Cbc0038I Pass  20: (3.42 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 893
Cbc0038I Pass  21: (3.43 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 459
Cbc0038I Pass  22: (3.44 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 18
Cbc0038I Pass  23: (3.45 seconds) suminf.    2.57143 (6) obj. -446.631 iterations 795
Cbc0038I Pass  24: (3.47 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 812
Cbc0038I Pass  25: (3.49 seconds) suminf.    2.57143 (6) obj. -446.631 iterations 779
Cbc0038I Pass  26: (3.50 seconds) suminf.    3.23077 (7) obj. -448.364 iterations 294
Cbc0038I Pass  27: (3.52 seconds) suminf.    1.44378 (7) obj. -446.034 iterations 827
Cbc0038I Pass  28: (3.53 seconds) suminf.    0.96749 (12) obj. -446.034 iterations 126
Cbc0038I Pass  29: (3.55 seconds) suminf.    3.31083 (8) obj. -446.034 iterations 1136
Cbc0038I Pass  30: (3.56 seconds) suminf.    2.57143 (6) obj. -446.631 iterations 321
Cbc0038I Pass  31: (3.58 seconds) suminf.    2.99218 (14) obj. -446.034 iterations 723
Cbc0038I Pass  32: (3.60 seconds) suminf.    2.57143 (6) obj. -446.631 iterations 716
Cbc0038I Pass  33: (3.62 seconds) suminf.    3.10396 (7) obj. -446.034 iterations 857
Cbc0038I Pass  34: (3.62 seconds) suminf.    3.31371 (11) obj. -446.034 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1317 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5499 rows 1361 columns, reduced to 1 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -444.541 to -445.54 (3.67 seconds)
Cbc0038I Round again with cutoff of -447.079
Cbc0038I Reduced cost fixing fixed 289 variables on major pass 5
Cbc0038I Pass  34: (3.68 seconds) suminf.    1.84500 (12) obj. -447.079 iterations 137
Cbc0038I Pass  35: (3.70 seconds) suminf.    2.74180 (13) obj. -447.079 iterations 814
Cbc0038I Pass  36: (3.71 seconds) suminf.    2.74180 (13) obj. -447.079 iterations 1
Cbc0038I Pass  37: (3.72 seconds) suminf.    2.74180 (13) obj. -447.079 iterations 326
Cbc0038I Pass  38: (3.72 seconds) suminf.    2.74180 (13) obj. -447.079 iterations 13
Cbc0038I Pass  39: (3.74 seconds) suminf.    0.42857 (6) obj. -448.163 iterations 766
Cbc0038I Pass  40: (3.75 seconds) suminf.    0.42857 (6) obj. -448.163 iterations 270
Cbc0038I Pass  41: (3.76 seconds) suminf.    1.38243 (7) obj. -447.079 iterations 570
Cbc0038I Pass  42: (3.78 seconds) suminf.    0.42857 (6) obj. -448.163 iterations 563
Cbc0038I Pass  43: (3.78 seconds) suminf.    0.42857 (6) obj. -448.163 iterations 282
Cbc0038I Pass  44: (3.81 seconds) suminf.    2.83048 (11) obj. -447.079 iterations 894
Cbc0038I Pass  45: (3.81 seconds) suminf.    1.84079 (17) obj. -447.079 iterations 160
Cbc0038I Pass  46: (3.83 seconds) suminf.    1.71429 (6) obj. -448.276 iterations 859
Cbc0038I Pass  47: (3.85 seconds) suminf.    0.95499 (7) obj. -447.079 iterations 590
Cbc0038I Pass  48: (3.86 seconds) suminf.    0.97987 (11) obj. -447.079 iterations 320
Cbc0038I Pass  49: (3.87 seconds) suminf.    0.95499 (7) obj. -447.079 iterations 353
Cbc0038I Pass  50: (3.88 seconds) suminf.    2.03653 (8) obj. -447.079 iterations 359
Cbc0038I Pass  51: (3.88 seconds) suminf.    2.03653 (8) obj. -447.079 iterations 7
Cbc0038I Pass  52: (3.89 seconds) suminf.    0.91465 (15) obj. -447.079 iterations 561
Cbc0038I Pass  53: (3.90 seconds) suminf.    0.82124 (11) obj. -447.079 iterations 352
Cbc0038I Pass  54: (3.92 seconds) suminf.    3.31553 (15) obj. -447.079 iterations 714
Cbc0038I Pass  55: (3.93 seconds) suminf.    3.31553 (15) obj. -447.079 iterations 440
Cbc0038I Pass  56: (3.94 seconds) suminf.    1.71429 (6) obj. -448.276 iterations 526
Cbc0038I Pass  57: (3.96 seconds) suminf.    2.82625 (12) obj. -447.079 iterations 775
Cbc0038I Pass  58: (3.97 seconds) suminf.    2.82625 (12) obj. -447.079 iterations 75
Cbc0038I Pass  59: (3.99 seconds) suminf.    1.22080 (7) obj. -447.079 iterations 773
Cbc0038I Pass  60: (4.01 seconds) suminf.    0.92089 (7) obj. -447.079 iterations 886
Cbc0038I Pass  61: (4.02 seconds) suminf.    1.28571 (6) obj. -447.64 iterations 840
Cbc0038I Pass  62: (4.04 seconds) suminf.    0.92089 (7) obj. -447.079 iterations 482
Cbc0038I Pass  63: (4.05 seconds) suminf.    0.82124 (11) obj. -447.079 iterations 473
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1286 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5499 rows 1361 columns, reduced to 7 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -445.54 to -447.344 (4.09 seconds)
Cbc0038I Round again with cutoff of -448.213
Cbc0038I Reduced cost fixing fixed 312 variables on major pass 6
Cbc0038I Pass  63: (4.10 seconds) suminf.    3.19367 (18) obj. -448.213 iterations 27
Cbc0038I Pass  64: (4.12 seconds) suminf.    5.35294 (13) obj. -449.517 iterations 883
Cbc0038I Pass  65: (4.13 seconds) suminf.    5.35294 (13) obj. -449.517 iterations 159
Cbc0038I Pass  66: (4.14 seconds) suminf.    5.35294 (13) obj. -449.517 iterations 278
Cbc0038I Pass  67: (4.15 seconds) suminf.    5.35294 (13) obj. -449.517 iterations 289
Cbc0038I Pass  68: (4.17 seconds) suminf.    3.83393 (14) obj. -448.213 iterations 425
Cbc0038I Pass  69: (4.18 seconds) suminf.    5.35294 (13) obj. -449.517 iterations 298
Cbc0038I Pass  70: (4.20 seconds) suminf.    4.51199 (17) obj. -448.213 iterations 998
Cbc0038I Pass  71: (4.22 seconds) suminf.    2.29412 (13) obj. -449.464 iterations 709
Cbc0038I Pass  72: (4.23 seconds) suminf.    2.29412 (13) obj. -449.464 iterations 194
Cbc0038I Pass  73: (4.24 seconds) suminf.    5.27187 (18) obj. -448.213 iterations 870
Cbc0038I Pass  74: (4.24 seconds) suminf.    5.27187 (18) obj. -448.213 iterations 455
Cbc0038I Pass  75: (4.25 seconds) suminf.    4.56274 (18) obj. -448.213 iterations 456
Cbc0038I Pass  76: (4.26 seconds) suminf.    4.60177 (14) obj. -448.213 iterations 11
Cbc0038I Pass  77: (4.28 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 833
Cbc0038I Pass  78: (4.29 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 211
Cbc0038I Pass  79: (4.30 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 308
Cbc0038I Pass  80: (4.31 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 268
Cbc0038I Pass  81: (4.33 seconds) suminf.    4.60177 (14) obj. -448.213 iterations 711
Cbc0038I Pass  82: (4.34 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 614
Cbc0038I Pass  83: (4.35 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 257
Cbc0038I Pass  84: (4.37 seconds) suminf.    4.60177 (14) obj. -448.213 iterations 536
Cbc0038I Pass  85: (4.38 seconds) suminf.    4.58963 (14) obj. -448.213 iterations 321
Cbc0038I Pass  86: (4.39 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 372
Cbc0038I Pass  87: (4.41 seconds) suminf.    4.60177 (14) obj. -448.213 iterations 854
Cbc0038I Pass  88: (4.43 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 731
Cbc0038I Pass  89: (4.44 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 350
Cbc0038I Pass  90: (4.46 seconds) suminf.    4.58963 (14) obj. -448.213 iterations 480
Cbc0038I Pass  91: (4.47 seconds) suminf.    4.58824 (13) obj. -448.235 iterations 391
Cbc0038I Pass  92: (4.50 seconds) suminf.    4.60177 (14) obj. -448.213 iterations 1033
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1322 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5499 rows 1361 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (4.53 seconds)
Cbc0038I After 4.54 seconds - Feasibility pump exiting with objective of -447.344 - took 1.60 seconds
Cbc0012I Integer solution of -447.34355 found by feasibility pump after 0 iterations and 0 nodes (4.54 seconds)
Cbc0031I 3 added rows had average density of 16.666667
Cbc0013I At root node, 17 cuts changed objective from -449.51684 to -446.553 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 343.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -447.3435477460861, took 32 iterations and 0 nodes (4.67 seconds)
Cbc0035I Maximum depth 0, 301 variables fixed on reduced cost
Cuts at root node changed objective from -449.517 to -446.553
Probing was tried 4 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 4 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                447.34354775
Enumerated nodes:               0
Total iterations:               32
Time (CPU seconds):             4.68
Time (Wallclock seconds):       5.67

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.76   (Wallclock seconds):       8.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ca047dfaa5cd4a6bbe89c83adfcf5e11-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ca047dfaa5cd4a6bbe89c83adfcf5e11-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 493686 COLUMNS
At line 1977756 RHS
At line 2471438 BOUNDS
At line 2474062 ENDATA
Problem MODEL has 493681 rows, 2623 columns and 502919 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 365.412 - 0.66 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 324 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 3142 rows, 818 columns (818 integer (818 of which binary)) and 8516 elements
Cbc0038I Initial state - 29 integers unsatisfied sum - 12.3462
Cbc0038I Pass   1: (1.27 seconds) suminf.    0.00000 (0) obj. -345.587 iterations 674
Cbc0038I Solution found of -345.587
Cbc0038I Before mini branch and bound, 788 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3142 rows 818 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -345.587 to -356.862 (1.32 seconds)
Cbc0038I Round again with cutoff of -357.717
Cbc0038I Reduced cost fixing fixed 88 variables on major pass 2
Cbc0038I Pass   2: (1.34 seconds) suminf.    2.87580 (9) obj. -357.717 iterations 239
Cbc0038I Pass   3: (1.34 seconds) suminf.    1.17656 (6) obj. -357.717 iterations 214
Cbc0038I Pass   4: (1.35 seconds) suminf.    1.24138 (6) obj. -358.385 iterations 160
Cbc0038I Pass   5: (1.36 seconds) suminf.    6.00886 (19) obj. -357.717 iterations 315
Cbc0038I Pass   6: (1.36 seconds) suminf.    2.50000 (6) obj. -358.882 iterations 223
Cbc0038I Pass   7: (1.37 seconds) suminf.    1.68796 (10) obj. -357.717 iterations 452
Cbc0038I Pass   8: (1.37 seconds) suminf.    1.84615 (4) obj. -360.01 iterations 168
Cbc0038I Pass   9: (1.38 seconds) suminf.    1.84615 (4) obj. -360.01 iterations 6
Cbc0038I Pass  10: (1.38 seconds) suminf.    2.89656 (12) obj. -357.717 iterations 254
Cbc0038I Pass  11: (1.39 seconds) suminf.    1.84615 (4) obj. -360.01 iterations 227
Cbc0038I Pass  12: (1.39 seconds) suminf.    2.89656 (12) obj. -357.717 iterations 246
Cbc0038I Pass  13: (1.40 seconds) suminf.    4.08144 (12) obj. -357.717 iterations 347
Cbc0038I Pass  14: (1.40 seconds) suminf.    4.08144 (12) obj. -357.717 iterations 18
Cbc0038I Solution found of -360.626
Cbc0038I Before mini branch and bound, 754 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3142 rows 818 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -360.626 to -364.607 (1.42 seconds)
Cbc0038I Round again with cutoff of -364.768
Cbc0038I Reduced cost fixing fixed 170 variables on major pass 3
Cbc0038I Pass  15: (1.44 seconds) suminf.    6.73497 (22) obj. -364.768 iterations 720
Cbc0038I Pass  16: (1.44 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 132
Cbc0038I Pass  17: (1.44 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 10
Cbc0038I Pass  18: (1.45 seconds) suminf.   11.73779 (29) obj. -364.768 iterations 409
Cbc0038I Pass  19: (1.45 seconds) suminf.   11.73779 (29) obj. -364.768 iterations 128
Cbc0038I Pass  20: (1.46 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 23
Cbc0038I Pass  21: (1.46 seconds) suminf.    5.37931 (29) obj. -364.768 iterations 32
Cbc0038I Pass  22: (1.46 seconds) suminf.    5.94786 (24) obj. -364.768 iterations 36
Cbc0038I Pass  23: (1.46 seconds) suminf.    5.94786 (24) obj. -364.768 iterations 15
Cbc0038I Pass  24: (1.47 seconds) suminf.    5.94786 (24) obj. -364.768 iterations 11
Cbc0038I Pass  25: (1.47 seconds) suminf.    6.89061 (21) obj. -364.768 iterations 122
Cbc0038I Pass  26: (1.47 seconds) suminf.    6.56280 (21) obj. -364.768 iterations 109
Cbc0038I Pass  27: (1.47 seconds) suminf.    6.50008 (21) obj. -364.768 iterations 28
Cbc0038I Pass  28: (1.48 seconds) suminf.    6.89061 (21) obj. -364.768 iterations 247
Cbc0038I Pass  29: (1.48 seconds) suminf.    7.00892 (21) obj. -364.768 iterations 262
Cbc0038I Pass  30: (1.49 seconds) suminf.    6.56280 (21) obj. -364.768 iterations 306
Cbc0038I Pass  31: (1.49 seconds) suminf.    6.56280 (21) obj. -364.768 iterations 40
Cbc0038I Pass  32: (1.50 seconds) suminf.    5.46443 (37) obj. -364.768 iterations 49
Cbc0038I Pass  33: (1.50 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 17
Cbc0038I Pass  34: (1.50 seconds) suminf.    5.99707 (22) obj. -364.768 iterations 120
Cbc0038I Pass  35: (1.50 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 121
Cbc0038I Pass  36: (1.51 seconds) suminf.    5.82908 (36) obj. -364.768 iterations 261
Cbc0038I Pass  37: (1.51 seconds) suminf.    7.45426 (22) obj. -364.768 iterations 257
Cbc0038I Pass  38: (1.52 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 363
Cbc0038I Pass  39: (1.52 seconds) suminf.    5.37931 (29) obj. -364.768 iterations 31
Cbc0038I Pass  40: (1.53 seconds) suminf.    5.37931 (29) obj. -364.768 iterations 335
Cbc0038I Pass  41: (1.54 seconds) suminf.    5.17333 (37) obj. -364.768 iterations 355
Cbc0038I Pass  42: (1.54 seconds) suminf.    5.19232 (37) obj. -364.768 iterations 15
Cbc0038I Pass  43: (1.54 seconds) suminf.    6.11909 (30) obj. -364.768 iterations 335
Cbc0038I Pass  44: (1.55 seconds) suminf.    5.38428 (42) obj. -364.768 iterations 213
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 736 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3142 rows 818 columns, reduced to 39 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (1.57 seconds)
Cbc0038I After 1.57 seconds - Feasibility pump exiting with objective of -364.607 - took 0.28 seconds
Cbc0012I Integer solution of -364.60737 found by feasibility pump after 0 iterations and 0 nodes (1.57 seconds)
Cbc0038I Full problem 3142 rows 818 columns, reduced to 7 rows 6 columns
Cbc0031I 4 added rows had average density of 28.25
Cbc0013I At root node, 4 cuts changed objective from -365.41191 to -364.72248 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 72 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 204.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -364.607368683477, took 134 iterations and 0 nodes (1.68 seconds)
Cbc0032I Strong branching done 4 times (80 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 170 variables fixed on reduced cost
Cuts at root node changed objective from -365.412 to -364.6
Probing was tried 9 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 9 times and created 72 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                364.60736868
Enumerated nodes:               0
Total iterations:               134
Time (CPU seconds):             1.68
Time (Wallclock seconds):       2.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.42   (Wallclock seconds):       2.95

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5ea20297f24849f9aecdaaaa6d1cfdc5-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5ea20297f24849f9aecdaaaa6d1cfdc5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 701826 COLUMNS
At line 2810825 RHS
At line 3512647 BOUNDS
At line 3515684 ENDATA
Problem MODEL has 701821 rows, 3036 columns and 713063 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 424.387 - 0.83 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 249 strengthened rows, 274 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 263 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 80 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 3839 rows, 984 columns (984 integer (984 of which binary)) and 10837 elements
Cbc0038I Initial state - 49 integers unsatisfied sum - 19.1429
Cbc0038I Pass   1: (1.77 seconds) suminf.    0.00000 (0) obj. -400.736 iterations 814
Cbc0038I Solution found of -400.736
Cbc0038I Rounding solution of -411.701 is better than previous of -400.736

Cbc0038I Before mini branch and bound, 934 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3839 rows 984 columns, reduced to 19 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (1.83 seconds)
Cbc0038I Round again with cutoff of -412.97
Cbc0038I Reduced cost fixing fixed 80 variables on major pass 2
Cbc0038I Pass   2: (1.85 seconds) suminf.    2.38101 (5) obj. -412.97 iterations 112
Cbc0038I Pass   3: (1.86 seconds) suminf.    0.14630 (4) obj. -412.97 iterations 535
Cbc0038I Pass   4: (1.86 seconds) suminf.    0.14630 (4) obj. -412.97 iterations 0
Cbc0038I Pass   5: (1.87 seconds) suminf.    1.84615 (4) obj. -416.744 iterations 290
Cbc0038I Pass   6: (1.88 seconds) suminf.    0.81818 (17) obj. -416.482 iterations 302
Cbc0038I Pass   7: (1.90 seconds) suminf.    3.70588 (9) obj. -414.275 iterations 446
Cbc0038I Pass   8: (1.92 seconds) suminf.    2.54615 (10) obj. -412.97 iterations 699
Cbc0038I Pass   9: (1.93 seconds) suminf.    0.30769 (4) obj. -421.747 iterations 374
Cbc0038I Solution found of -419.078
Cbc0038I Before mini branch and bound, 898 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3839 rows 984 columns, reduced to 33 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (1.96 seconds)
Cbc0038I Round again with cutoff of -420.14
Cbc0038I Reduced cost fixing fixed 137 variables on major pass 3
Cbc0038I Pass  10: (2.01 seconds) suminf.    1.65684 (16) obj. -420.14 iterations 784
Cbc0038I Pass  11: (2.01 seconds) suminf.    1.56755 (18) obj. -420.14 iterations 61
Cbc0038I Pass  12: (2.04 seconds) suminf.    4.46824 (14) obj. -420.14 iterations 791
Cbc0038I Pass  13: (2.05 seconds) suminf.    2.07901 (7) obj. -420.14 iterations 535
Cbc0038I Pass  14: (2.06 seconds) suminf.    2.07901 (7) obj. -420.14 iterations 229
Cbc0038I Pass  15: (2.07 seconds) suminf.    2.40000 (6) obj. -423.03 iterations 594
Cbc0038I Pass  16: (2.08 seconds) suminf.    2.50000 (5) obj. -422.807 iterations 173
Cbc0038I Pass  17: (2.08 seconds) suminf.    2.40000 (6) obj. -423.03 iterations 159
Cbc0038I Pass  18: (2.09 seconds) suminf.    2.76923 (9) obj. -422.999 iterations 158
Cbc0038I Pass  19: (2.10 seconds) suminf.    2.50000 (5) obj. -422.807 iterations 376
Cbc0038I Pass  20: (2.12 seconds) suminf.    2.97045 (9) obj. -420.14 iterations 591
Cbc0038I Pass  21: (2.12 seconds) suminf.    2.91102 (16) obj. -420.14 iterations 101
Cbc0038I Pass  22: (2.14 seconds) suminf.    2.14286 (5) obj. -420.567 iterations 595
Cbc0038I Pass  23: (2.16 seconds) suminf.    2.01355 (6) obj. -420.14 iterations 786
Cbc0038I Pass  24: (2.17 seconds) suminf.    2.14286 (5) obj. -420.567 iterations 399
Cbc0038I Pass  25: (2.18 seconds) suminf.    6.37329 (18) obj. -420.14 iterations 260
Cbc0038I Pass  26: (2.18 seconds) suminf.    6.37329 (18) obj. -420.14 iterations 163
Cbc0038I Pass  27: (2.20 seconds) suminf.    2.91102 (16) obj. -420.14 iterations 569
Cbc0038I Pass  28: (2.21 seconds) suminf.    2.91102 (16) obj. -420.14 iterations 146
Cbc0038I Pass  29: (2.22 seconds) suminf.    2.14286 (5) obj. -420.567 iterations 618
Cbc0038I Pass  30: (2.24 seconds) suminf.    2.01355 (6) obj. -420.14 iterations 719
Cbc0038I Pass  31: (2.26 seconds) suminf.    2.14286 (5) obj. -420.567 iterations 397
Cbc0038I Pass  32: (2.26 seconds) suminf.    0.25000 (1) obj. -421.585 iterations 194
Cbc0038I Pass  33: (2.27 seconds) suminf.    0.11822 (1) obj. -420.14 iterations 333
Cbc0038I Pass  34: (2.28 seconds) suminf.    0.25000 (1) obj. -421.585 iterations 162
Cbc0038I Pass  35: (2.29 seconds) suminf.    2.38853 (8) obj. -420.14 iterations 219
Cbc0038I Pass  36: (2.30 seconds) suminf.    2.38853 (8) obj. -420.14 iterations 344
Cbc0038I Pass  37: (2.31 seconds) suminf.    2.38853 (8) obj. -420.14 iterations 306
Cbc0038I Pass  38: (2.32 seconds) suminf.    1.15993 (6) obj. -420.14 iterations 353
Cbc0038I Pass  39: (2.34 seconds) suminf.    0.22499 (12) obj. -420.14 iterations 608
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 854 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3839 rows 984 columns, reduced to 41 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -419.078 to -423.983 (2.37 seconds)
Cbc0038I Round again with cutoff of -424.105
Cbc0038I Reduced cost fixing fixed 192 variables on major pass 4
Cbc0038I Pass  39: (2.38 seconds) suminf.   14.15545 (44) obj. -424.105 iterations 99
Cbc0038I Pass  40: (2.39 seconds) suminf.   14.15545 (44) obj. -424.105 iterations 12
Cbc0038I Pass  41: (2.40 seconds) suminf.    8.66398 (52) obj. -424.105 iterations 804
Cbc0038I Pass  42: (2.41 seconds) suminf.    8.66398 (52) obj. -424.105 iterations 118
Cbc0038I Pass  43: (2.41 seconds) suminf.    8.75166 (44) obj. -424.105 iterations 10
Cbc0038I Pass  44: (2.42 seconds) suminf.    8.75166 (44) obj. -424.105 iterations 25
Cbc0038I Pass  45: (2.42 seconds) suminf.    8.76964 (44) obj. -424.105 iterations 37
Cbc0038I Pass  46: (2.44 seconds) suminf.    8.66398 (52) obj. -424.105 iterations 474
Cbc0038I Pass  47: (2.44 seconds) suminf.    8.66398 (52) obj. -424.105 iterations 12
Cbc0038I Pass  48: (2.44 seconds) suminf.    8.76964 (44) obj. -424.105 iterations 12
Cbc0038I Pass  49: (2.45 seconds) suminf.    8.72078 (45) obj. -424.105 iterations 27
Cbc0038I Pass  50: (2.45 seconds) suminf.    8.72078 (45) obj. -424.105 iterations 7
Cbc0038I Pass  51: (2.45 seconds) suminf.    8.85576 (49) obj. -424.105 iterations 15
Cbc0038I Pass  52: (2.46 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 33
Cbc0038I Pass  53: (2.46 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 9
Cbc0038I Pass  54: (2.46 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 0
Cbc0038I Pass  55: (2.46 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 8
Cbc0038I Pass  56: (2.46 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 11
Cbc0038I Pass  57: (2.47 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 2
Cbc0038I Pass  58: (2.47 seconds) suminf.   17.57747 (42) obj. -424.105 iterations 0
Cbc0038I Pass  59: (2.47 seconds) suminf.   18.09331 (38) obj. -424.105 iterations 95
Cbc0038I Pass  60: (2.48 seconds) suminf.   18.09331 (38) obj. -424.105 iterations 67
Cbc0038I Pass  61: (2.49 seconds) suminf.   18.40000 (38) obj. -424.267 iterations 554
Cbc0038I Pass  62: (2.49 seconds) suminf.   18.09331 (38) obj. -424.105 iterations 228
Cbc0038I Pass  63: (2.50 seconds) suminf.   18.29977 (49) obj. -424.105 iterations 347
Cbc0038I Pass  64: (2.51 seconds) suminf.   14.15545 (44) obj. -424.105 iterations 21
Cbc0038I Pass  65: (2.51 seconds) suminf.   14.15545 (44) obj. -424.105 iterations 5
Cbc0038I Pass  66: (2.51 seconds) suminf.    9.50763 (52) obj. -424.105 iterations 84
Cbc0038I Pass  67: (2.52 seconds) suminf.    9.50763 (52) obj. -424.105 iterations 4
Cbc0038I Pass  68: (2.52 seconds) suminf.    9.50763 (52) obj. -424.105 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 903 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3839 rows 984 columns, reduced to 35 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (2.54 seconds)
Cbc0038I After 2.54 seconds - Feasibility pump exiting with objective of -423.983 - took 0.75 seconds
Cbc0012I Integer solution of -423.98342 found by feasibility pump after 0 iterations and 0 nodes (2.54 seconds)
Cbc0038I Full problem 3839 rows 984 columns, reduced to 32 rows 15 columns
Cbc0031I 2 added rows had average density of 14
Cbc0013I At root node, 40 cuts changed objective from -424.3875 to -423.80242 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 87 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 250.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0001I Search completed - best objective -423.983418268288, took 44 iterations and 0 nodes (2.67 seconds)
Cbc0035I Maximum depth 0, 193 variables fixed on reduced cost
Cuts at root node changed objective from -424.387 to -423.802
Probing was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 4 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                423.98341827
Enumerated nodes:               0
Total iterations:               44
Time (CPU seconds):             2.66
Time (Wallclock seconds):       3.16

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.71   (Wallclock seconds):       4.35

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ebe008b465034c48a281cc37c27a854b-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ebe008b465034c48a281cc37c27a854b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1152906 COLUMNS
At line 4615948 RHS
At line 5768850 BOUNDS
At line 5772494 ENDATA
Problem MODEL has 1152901 rows, 3643 columns and 1166589 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 455.328 - 1.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 164 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 4979 rows, 1206 columns (1206 integer (1206 of which binary)) and 13614 elements
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.13043
Cbc0038I Pass   1: (2.31 seconds) suminf.    2.30769 (15) obj. -455.081 iterations 759
Cbc0038I Solution found of -369.105
Cbc0038I Rounding solution of -395.095 is better than previous of -369.105

Cbc0038I Before mini branch and bound, 1173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (2.43 seconds)
Cbc0038I Round again with cutoff of -401.118
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   2: (2.44 seconds) suminf.    2.30769 (15) obj. -455.081 iterations 0
Cbc0038I Pass   3: (2.46 seconds) suminf.    2.16150 (25) obj. -401.118 iterations 670
Cbc0038I Pass   4: (2.48 seconds) suminf.    5.73913 (12) obj. -425.618 iterations 362
Cbc0038I Pass   5: (2.49 seconds) suminf.    0.39243 (5) obj. -401.118 iterations 410
Cbc0038I Pass   6: (2.50 seconds) suminf.    0.25000 (1) obj. -401.944 iterations 316
Cbc0038I Pass   7: (2.52 seconds) suminf.    0.28068 (25) obj. -401.118 iterations 393
Cbc0038I Pass   8: (2.53 seconds) suminf.    0.78261 (12) obj. -404.668 iterations 301
Cbc0038I Pass   9: (2.55 seconds) suminf.    1.38037 (4) obj. -401.118 iterations 483
Cbc0038I Pass  10: (2.57 seconds) suminf.    0.25000 (1) obj. -402.818 iterations 381
Cbc0038I Solution found of -401.157
Cbc0038I Before mini branch and bound, 1111 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 49 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -401.157 to -452.413 (2.62 seconds)
Cbc0038I Round again with cutoff of -452.996
Cbc0038I Reduced cost fixing fixed 262 variables on major pass 3
Cbc0038I Pass  11: (2.63 seconds) suminf.    2.30769 (15) obj. -455.081 iterations 0
Cbc0038I Pass  12: (2.64 seconds) suminf.    3.50792 (19) obj. -452.996 iterations 473
Cbc0038I Pass  13: (2.65 seconds) suminf.    3.03956 (23) obj. -452.996 iterations 289
Cbc0038I Pass  14: (2.66 seconds) suminf.    1.79588 (24) obj. -452.996 iterations 406
Cbc0038I Pass  15: (2.67 seconds) suminf.    1.94118 (11) obj. -453.318 iterations 639
Cbc0038I Pass  16: (2.69 seconds) suminf.    2.07223 (14) obj. -452.996 iterations 541
Cbc0038I Pass  17: (2.70 seconds) suminf.    3.88294 (15) obj. -452.996 iterations 460
Cbc0038I Pass  18: (2.71 seconds) suminf.    3.87329 (24) obj. -452.996 iterations 378
Cbc0038I Pass  19: (2.73 seconds) suminf.    3.88235 (11) obj. -453.016 iterations 603
Cbc0038I Pass  20: (2.75 seconds) suminf.    3.92652 (14) obj. -452.996 iterations 834
Cbc0038I Pass  21: (2.76 seconds) suminf.    3.88494 (14) obj. -452.996 iterations 180
Cbc0038I Pass  22: (2.77 seconds) suminf.    3.89052 (14) obj. -452.996 iterations 224
Cbc0038I Pass  23: (2.78 seconds) suminf.    3.87329 (24) obj. -452.996 iterations 111
Cbc0038I Pass  24: (2.79 seconds) suminf.    3.88235 (11) obj. -453.016 iterations 626
Cbc0038I Pass  25: (2.81 seconds) suminf.    3.88494 (14) obj. -452.996 iterations 756
Cbc0038I Pass  26: (2.82 seconds) suminf.    3.87329 (24) obj. -452.996 iterations 181
Cbc0038I Pass  27: (2.83 seconds) suminf.    3.88235 (11) obj. -453.016 iterations 634
Cbc0038I Pass  28: (2.84 seconds) suminf.    1.90588 (12) obj. -452.996 iterations 337
Cbc0038I Pass  29: (2.85 seconds) suminf.    1.79588 (24) obj. -452.996 iterations 560
Cbc0038I Pass  30: (2.87 seconds) suminf.    1.94118 (11) obj. -453.318 iterations 615
Cbc0038I Pass  31: (2.89 seconds) suminf.    3.18153 (14) obj. -452.996 iterations 811
Cbc0038I Pass  32: (2.90 seconds) suminf.    1.79588 (24) obj. -452.996 iterations 248
Cbc0038I Pass  33: (2.92 seconds) suminf.    1.94118 (11) obj. -453.318 iterations 613
Cbc0038I Pass  34: (2.93 seconds) suminf.    1.99418 (15) obj. -452.996 iterations 630
Cbc0038I Pass  35: (2.94 seconds) suminf.    1.79588 (24) obj. -452.996 iterations 224
Cbc0038I Pass  36: (2.94 seconds) suminf.    1.81745 (19) obj. -452.996 iterations 158
Cbc0038I Pass  37: (2.96 seconds) suminf.    1.90730 (12) obj. -452.996 iterations 669
Cbc0038I Pass  38: (2.98 seconds) suminf.    1.79588 (24) obj. -452.996 iterations 733
Cbc0038I Pass  39: (3.00 seconds) suminf.    1.94118 (11) obj. -453.318 iterations 598
Cbc0038I Pass  40: (3.00 seconds) suminf.    1.96569 (18) obj. -452.996 iterations 282
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -452.413 to -453.499 (3.05 seconds)
Cbc0038I Round again with cutoff of -454.048
Cbc0038I Reduced cost fixing fixed 285 variables on major pass 4
Cbc0038I Pass  40: (3.06 seconds) suminf.    2.95652 (17) obj. -455.295 iterations 38
Cbc0038I Pass  41: (3.08 seconds) suminf.    4.22505 (17) obj. -454.048 iterations 816
Cbc0038I Pass  42: (3.08 seconds) suminf.    4.22505 (17) obj. -454.048 iterations 74
Cbc0038I Pass  43: (3.10 seconds) suminf.    3.19579 (17) obj. -454.048 iterations 879
Cbc0038I Pass  44: (3.11 seconds) suminf.    3.07678 (18) obj. -454.048 iterations 302
Cbc0038I Pass  45: (3.12 seconds) suminf.    2.95652 (17) obj. -454.516 iterations 216
Cbc0038I Pass  46: (3.14 seconds) suminf.    3.60572 (31) obj. -454.048 iterations 742
Cbc0038I Pass  47: (3.14 seconds) suminf.    1.41429 (17) obj. -454.048 iterations 10
Cbc0038I Pass  48: (3.15 seconds) suminf.    5.83525 (28) obj. -454.048 iterations 552
Cbc0038I Pass  49: (3.16 seconds) suminf.    5.49270 (17) obj. -454.048 iterations 5
Cbc0038I Pass  50: (3.17 seconds) suminf.    2.95652 (17) obj. -455.295 iterations 691
Cbc0038I Pass  51: (3.17 seconds) suminf.    2.95652 (17) obj. -455.295 iterations 4
Cbc0038I Pass  52: (3.19 seconds) suminf.    3.31407 (21) obj. -454.048 iterations 705
Cbc0038I Pass  53: (3.20 seconds) suminf.    2.96436 (20) obj. -454.048 iterations 667
Cbc0038I Pass  54: (3.22 seconds) suminf.    5.83525 (28) obj. -454.048 iterations 695
Cbc0038I Pass  55: (3.22 seconds) suminf.    5.49270 (17) obj. -454.048 iterations 7
Cbc0038I Pass  56: (3.24 seconds) suminf.    7.39130 (17) obj. -455.081 iterations 698
Cbc0038I Pass  57: (3.24 seconds) suminf.    1.60314 (8) obj. -454.048 iterations 206
Cbc0038I Solution found of -454.577
Cbc0038I Before mini branch and bound, 1139 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (3.28 seconds)
Cbc0038I Round again with cutoff of -454.802
Cbc0038I Reduced cost fixing fixed 304 variables on major pass 5
Cbc0038I Pass  58: (3.29 seconds) suminf.    2.95652 (17) obj. -455.295 iterations 0
Cbc0038I Pass  59: (3.31 seconds) suminf.    2.46550 (28) obj. -454.802 iterations 809
Cbc0038I Pass  60: (3.34 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 1173
Cbc0038I Pass  61: (3.36 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 731
Cbc0038I Pass  62: (3.37 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 703
Cbc0038I Pass  63: (3.39 seconds) suminf.    1.35638 (32) obj. -454.802 iterations 716
Cbc0038I Pass  64: (3.39 seconds) suminf.    1.35638 (32) obj. -454.802 iterations 5
Cbc0038I Pass  65: (3.41 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 712
Cbc0038I Pass  66: (3.42 seconds) suminf.    1.33394 (14) obj. -454.802 iterations 331
Cbc0038I Pass  67: (3.44 seconds) suminf.    1.35638 (32) obj. -454.802 iterations 901
Cbc0038I Pass  68: (3.46 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 606
Cbc0038I Pass  69: (3.47 seconds) suminf.    1.35638 (32) obj. -454.802 iterations 861
Cbc0038I Pass  70: (3.49 seconds) suminf.    2.33569 (15) obj. -454.802 iterations 612
Cbc0038I Pass  71: (3.51 seconds) suminf.    2.34766 (17) obj. -454.802 iterations 775
Cbc0038I Pass  72: (3.51 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 371
Cbc0038I Pass  73: (3.53 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 614
Cbc0038I Pass  74: (3.54 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 264
Cbc0038I Pass  75: (3.55 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 151
Cbc0038I Pass  76: (3.57 seconds) suminf.    2.46550 (28) obj. -454.802 iterations 893
Cbc0038I Pass  77: (3.59 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 1013
Cbc0038I Pass  78: (3.60 seconds) suminf.    1.33469 (17) obj. -454.802 iterations 324
Cbc0038I Pass  79: (3.61 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 745
Cbc0038I Pass  80: (3.63 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 705
Cbc0038I Pass  81: (3.66 seconds) suminf.    2.46550 (28) obj. -454.802 iterations 892
Cbc0038I Pass  82: (3.68 seconds) suminf.    1.35141 (35) obj. -454.802 iterations 677
Cbc0038I Pass  83: (3.69 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 605
Cbc0038I Pass  84: (3.70 seconds) suminf.    1.33469 (17) obj. -454.802 iterations 593
Cbc0038I Pass  85: (3.72 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 872
Cbc0038I Pass  86: (3.73 seconds) suminf.    1.33333 (14) obj. -454.806 iterations 570
Cbc0038I Pass  87: (3.75 seconds) suminf.    1.38201 (18) obj. -454.802 iterations 821
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1137 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (3.79 seconds)
Cbc0038I After 3.79 seconds - Feasibility pump exiting with objective of -454.577 - took 1.40 seconds
Cbc0012I Integer solution of -454.57692 found by feasibility pump after 0 iterations and 0 nodes (3.79 seconds)
Cbc0038I Full problem 4979 rows 1206 columns, reduced to 2 rows 2 columns
Cbc0031I 6 added rows had average density of 22.5
Cbc0013I At root node, 6 cuts changed objective from -455.32833 to -454.77938 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 81 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 349.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -454.57692 best solution, best possible -454.77938 (3.98 seconds)
Cbc0001I Search completed - best objective -454.5769223382652, took 135 iterations and 4 nodes (4.04 seconds)
Cbc0032I Strong branching done 42 times (406 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 308 variables fixed on reduced cost
Cuts at root node changed objective from -455.328 to -454.779
Probing was tried 13 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 12 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 8 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)

Result - Optimal solution found

Objective value:                454.57692234
Enumerated nodes:               4
Total iterations:               135
Time (CPU seconds):             4.08
Time (Wallclock seconds):       4.92

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.83   (Wallclock seconds):       6.88

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8f5f824225af437eaaf3d13572ef50af-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8f5f824225af437eaaf3d13572ef50af-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 287597 COLUMNS
At line 1152854 RHS
At line 1440447 BOUNDS
At line 1442655 ENDATA
Problem MODEL has 287592 rows, 2207 columns and 295063 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 328.764 - 0.47 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 252 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 2439 rows, 635 columns (635 integer (635 of which binary)) and 6476 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.39888e-14
Cbc0038I Solution found of -328.764
Cbc0038I Before mini branch and bound, 635 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.77 seconds)
Cbc0038I After 0.77 seconds - Feasibility pump exiting with objective of -328.764 - took 0.01 seconds
Cbc0012I Integer solution of -328.76377 found by feasibility pump after 0 iterations and 0 nodes (0.77 seconds)
Cbc0001I Search completed - best objective -328.7637712122601, took 0 iterations and 0 nodes (0.78 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -328.764 to -328.764
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                328.76377121
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.82
Time (Wallclock seconds):       0.95

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.25   (Wallclock seconds):       1.44

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd6f1c1c612a413d878666cf2a30ae25-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd6f1c1c612a413d878666cf2a30ae25-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1644237 COLUMNS
At line 6582122 RHS
At line 8226355 BOUNDS
At line 8230715 ENDATA
Problem MODEL has 1644232 rows, 4359 columns and 1659475 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 497.695 - 1.40 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 118 strengthened rows, 360 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 149 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 4980 rows, 1306 columns (1306 integer (1306 of which binary)) and 13838 elements
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.75
Cbc0038I Pass   1: (4.45 seconds) suminf.    1.00000 (2) obj. -494.182 iterations 857
Cbc0038I Pass   2: (4.46 seconds) suminf.    1.00000 (2) obj. -494.182 iterations 10
Cbc0038I Solution found of -483.682
Cbc0038I Rounding solution of -487.004 is better than previous of -483.682

Cbc0038I Before mini branch and bound, 1283 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4980 rows 1306 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -487.004 to -490.36 (4.64 seconds)
Cbc0038I Round again with cutoff of -491.094
Cbc0038I Reduced cost fixing fixed 208 variables on major pass 2
Cbc0038I Pass   3: (4.65 seconds) suminf.    1.00000 (2) obj. -494.182 iterations 0
Cbc0038I Pass   4: (4.65 seconds) suminf.    1.00000 (2) obj. -494.182 iterations 1
Cbc0038I Pass   5: (4.66 seconds) suminf.    0.65805 (3) obj. -491.094 iterations 476
Cbc0038I Pass   6: (4.67 seconds) suminf.    1.00000 (2) obj. -494.182 iterations 172
Cbc0038I Pass   7: (4.69 seconds) suminf.    3.22165 (14) obj. -491.094 iterations 472
Cbc0038I Pass   8: (4.70 seconds) suminf.    1.49399 (5) obj. -491.094 iterations 347
Cbc0038I Pass   9: (4.70 seconds) suminf.    1.18684 (4) obj. -491.094 iterations 88
Cbc0038I Pass  10: (4.71 seconds) suminf.    1.18684 (4) obj. -491.094 iterations 619
Cbc0038I Pass  11: (4.72 seconds) suminf.    1.28916 (4) obj. -491.094 iterations 92
Cbc0038I Pass  12: (4.73 seconds) suminf.    0.98706 (8) obj. -491.094 iterations 444
Cbc0038I Pass  13: (4.74 seconds) suminf.    0.80000 (2) obj. -493.261 iterations 326
Cbc0038I Pass  14: (4.75 seconds) suminf.    0.48915 (3) obj. -491.094 iterations 306
Cbc0038I Pass  15: (4.75 seconds) suminf.    0.80000 (2) obj. -493.261 iterations 169
Cbc0038I Pass  16: (4.76 seconds) suminf.    4.32775 (10) obj. -491.094 iterations 381
Cbc0038I Pass  17: (4.78 seconds) suminf.    0.11867 (3) obj. -491.094 iterations 559
Cbc0038I Pass  18: (4.78 seconds) suminf.    0.20000 (1) obj. -491.937 iterations 131
Cbc0038I Pass  19: (4.80 seconds) suminf.    1.80000 (6) obj. -491.094 iterations 774
Cbc0038I Pass  20: (4.81 seconds) suminf.    1.72142 (5) obj. -491.094 iterations 646
Cbc0038I Pass  21: (4.82 seconds) suminf.    0.43598 (3) obj. -491.094 iterations 342
Cbc0038I Pass  22: (4.82 seconds) suminf.    0.43598 (3) obj. -491.094 iterations 1
Cbc0038I Pass  23: (4.83 seconds) suminf.    0.80000 (2) obj. -493.631 iterations 192
Cbc0038I Pass  24: (4.84 seconds) suminf.    1.01422 (5) obj. -491.094 iterations 700
Cbc0038I Pass  25: (4.86 seconds) suminf.    0.90211 (8) obj. -491.094 iterations 460
Cbc0038I Pass  26: (4.86 seconds) suminf.    0.80000 (2) obj. -493.631 iterations 342
Cbc0038I Pass  27: (4.87 seconds) suminf.    1.96137 (7) obj. -491.094 iterations 365
Cbc0038I Pass  28: (4.88 seconds) suminf.    1.32068 (8) obj. -491.094 iterations 288
Cbc0038I Pass  29: (4.89 seconds) suminf.    0.80000 (2) obj. -493.561 iterations 337
Cbc0038I Pass  30: (4.89 seconds) suminf.    0.80000 (2) obj. -493.561 iterations 8
Cbc0038I Pass  31: (4.90 seconds) suminf.    0.84610 (3) obj. -491.094 iterations 317
Cbc0038I Pass  32: (4.91 seconds) suminf.    0.80000 (2) obj. -493.561 iterations 169
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4980 rows 1306 columns, reduced to 29 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -490.36 to -494.366 (4.98 seconds)
Cbc0038I Round again with cutoff of -495.032
Cbc0038I Reduced cost fixing fixed 285 variables on major pass 3
Cbc0038I Pass  32: (4.99 seconds) suminf.    1.20000 (3) obj. -496.214 iterations 19
Cbc0038I Pass  33: (5.00 seconds) suminf.    1.20000 (3) obj. -496.214 iterations 11
Cbc0038I Pass  34: (5.01 seconds) suminf.    0.84618 (3) obj. -495.032 iterations 341
Cbc0038I Pass  35: (5.01 seconds) suminf.    0.80000 (2) obj. -495.316 iterations 169
Cbc0038I Pass  36: (5.02 seconds) suminf.    1.10460 (17) obj. -495.032 iterations 192
Cbc0038I Pass  37: (5.02 seconds) suminf.    0.80000 (2) obj. -495.316 iterations 176
Cbc0038I Pass  38: (5.04 seconds) suminf.    0.97487 (6) obj. -495.032 iterations 734
Cbc0038I Pass  39: (5.05 seconds) suminf.    1.00194 (8) obj. -495.032 iterations 495
Cbc0038I Pass  40: (5.06 seconds) suminf.    2.17171 (16) obj. -495.032 iterations 332
Cbc0038I Pass  41: (5.08 seconds) suminf.    0.40000 (2) obj. -495.059 iterations 814
Cbc0038I Pass  42: (5.09 seconds) suminf.    0.40838 (3) obj. -495.032 iterations 214
Cbc0038I Pass  43: (5.10 seconds) suminf.    0.41300 (4) obj. -495.032 iterations 480
Cbc0038I Pass  44: (5.11 seconds) suminf.    0.40000 (2) obj. -495.059 iterations 411
Cbc0038I Pass  45: (5.12 seconds) suminf.    0.40838 (3) obj. -495.032 iterations 195
Cbc0038I Pass  46: (5.13 seconds) suminf.    0.41315 (5) obj. -495.032 iterations 873
Cbc0038I Pass  47: (5.14 seconds) suminf.    3.66658 (10) obj. -495.032 iterations 195
Cbc0038I Pass  48: (5.16 seconds) suminf.    0.40838 (3) obj. -495.032 iterations 860
Cbc0038I Pass  49: (5.18 seconds) suminf.    2.00000 (8) obj. -495.032 iterations 853
Cbc0038I Pass  50: (5.20 seconds) suminf.    0.83018 (3) obj. -495.032 iterations 882
Cbc0038I Pass  51: (5.20 seconds) suminf.    0.80000 (2) obj. -495.129 iterations 168
Cbc0038I Pass  52: (5.22 seconds) suminf.    0.84734 (5) obj. -495.032 iterations 755
Cbc0038I Pass  53: (5.24 seconds) suminf.    0.80000 (2) obj. -495.129 iterations 735
Cbc0038I Pass  54: (5.25 seconds) suminf.    0.41315 (5) obj. -495.032 iterations 735
Cbc0038I Pass  55: (5.27 seconds) suminf.    0.40000 (2) obj. -495.059 iterations 684
Cbc0038I Pass  56: (5.27 seconds) suminf.    0.40838 (3) obj. -495.032 iterations 224
Cbc0038I Pass  57: (5.29 seconds) suminf.    4.50029 (16) obj. -495.032 iterations 855
Cbc0038I Pass  58: (5.30 seconds) suminf.    4.50029 (16) obj. -495.032 iterations 19
Cbc0038I Pass  59: (5.31 seconds) suminf.    1.20000 (3) obj. -496.214 iterations 735
Cbc0038I Pass  60: (5.31 seconds) suminf.    1.20000 (3) obj. -496.214 iterations 6
Cbc0038I Pass  61: (5.32 seconds) suminf.    0.84618 (3) obj. -495.032 iterations 248
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4980 rows 1306 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (5.38 seconds)
Cbc0038I After 5.38 seconds - Feasibility pump exiting with objective of -494.366 - took 0.83 seconds
Cbc0012I Integer solution of -494.36563 found by feasibility pump after 0 iterations and 0 nodes (5.38 seconds)
Cbc0038I Full problem 4980 rows 1306 columns, reduced to 6 rows 7 columns
Cbc0031I 1 added rows had average density of 6
Cbc0013I At root node, 1 cuts changed objective from -497.69516 to -496.24029 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -494.36563 best solution, best possible -496.24029 (5.52 seconds)
Cbc0012I Integer solution of -496.02431 found by DiveCoefficient after 6 iterations and 2 nodes (5.58 seconds)
Cbc0001I Search completed - best objective -496.024310415789, took 21 iterations and 6 nodes (5.60 seconds)
Cbc0032I Strong branching done 50 times (101 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 346 variables fixed on reduced cost
Cuts at root node changed objective from -497.695 to -496.24
Probing was tried 5 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)

Result - Optimal solution found

Objective value:                496.02431042
Enumerated nodes:               6
Total iterations:               21
Time (CPU seconds):             4.69
Time (Wallclock seconds):       7.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       7.29   (Wallclock seconds):       10.33

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ad25a87446e54077bbd0a3f12c1c702f-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ad25a87446e54077bbd0a3f12c1c702f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 987666 COLUMNS
At line 3954496 RHS
At line 4942158 BOUNDS
At line 4945302 ENDATA
Problem MODEL has 987661 rows, 3143 columns and 998927 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 365.906 - 0.87 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 110 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 4004 rows, 1057 columns (1057 integer (1055 of which binary)) and 10963 elements
Cbc0038I Initial state - 26 integers unsatisfied sum - 13
Cbc0038I Pass   1: (1.84 seconds) suminf.    0.00000 (0) obj. -364.937 iterations 812
Cbc0038I Solution found of -364.937
Cbc0038I Cleaned solution of -364.937
Cbc0038I Before mini branch and bound, 1029 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4004 rows 1057 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (1.96 seconds)
Cbc0038I Round again with cutoff of -365.034
Cbc0038I Reduced cost fixing fixed 274 variables on major pass 2
Cbc0038I Pass   2: (2.00 seconds) suminf.    1.30665 (25) obj. -365.034 iterations 716
Cbc0038I Pass   3: (2.00 seconds) suminf.    0.68766 (5) obj. -365.034 iterations 21
Cbc0038I Pass   4: (2.02 seconds) suminf.    2.77554 (7) obj. -365.034 iterations 1053
Cbc0038I Pass   5: (2.03 seconds) suminf.    2.77554 (7) obj. -365.034 iterations 37
Cbc0038I Solution found of -365.565
Cbc0038I Cleaned solution of -365.565
Cbc0038I Before mini branch and bound, 1020 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4004 rows 1057 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (2.07 seconds)
Cbc0038I Round again with cutoff of -365.633
Cbc0038I Reduced cost fixing fixed 305 variables on major pass 3
Cbc0038I Pass   6: (2.08 seconds) suminf.   10.52878 (29) obj. -365.633 iterations 124
Cbc0038I Pass   7: (2.08 seconds) suminf.   10.52878 (29) obj. -365.633 iterations 4
Cbc0038I Pass   8: (2.08 seconds) suminf.   11.77758 (28) obj. -365.633 iterations 27
Cbc0038I Pass   9: (2.09 seconds) suminf.   10.52878 (29) obj. -365.633 iterations 16
Cbc0038I Pass  10: (2.09 seconds) suminf.   11.91850 (28) obj. -365.633 iterations 40
Cbc0038I Pass  11: (2.09 seconds) suminf.   11.88970 (29) obj. -365.633 iterations 33
Cbc0038I Pass  12: (2.11 seconds) suminf.   12.88421 (28) obj. -365.633 iterations 645
Cbc0038I Pass  13: (2.11 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 65
Cbc0038I Pass  14: (2.11 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 39
Cbc0038I Pass  15: (2.12 seconds) suminf.   11.20639 (23) obj. -365.633 iterations 566
Cbc0038I Pass  16: (2.13 seconds) suminf.   11.14627 (27) obj. -365.633 iterations 579
Cbc0038I Pass  17: (2.14 seconds) suminf.   12.88421 (28) obj. -365.633 iterations 293
Cbc0038I Pass  18: (2.14 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 60
Cbc0038I Pass  19: (2.14 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 39
Cbc0038I Pass  20: (2.15 seconds) suminf.   11.18647 (23) obj. -365.633 iterations 34
Cbc0038I Pass  21: (2.15 seconds) suminf.   11.14627 (27) obj. -365.633 iterations 27
Cbc0038I Pass  22: (2.16 seconds) suminf.   12.88421 (28) obj. -365.633 iterations 283
Cbc0038I Pass  23: (2.16 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 27
Cbc0038I Pass  24: (2.16 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 3
Cbc0038I Pass  25: (2.17 seconds) suminf.   11.28235 (26) obj. -365.633 iterations 136
Cbc0038I Pass  26: (2.17 seconds) suminf.   11.54043 (24) obj. -365.633 iterations 37
Cbc0038I Pass  27: (2.17 seconds) suminf.   11.66479 (29) obj. -365.633 iterations 109
Cbc0038I Pass  28: (2.18 seconds) suminf.   11.42919 (24) obj. -365.633 iterations 146
Cbc0038I Pass  29: (2.18 seconds) suminf.   11.42919 (24) obj. -365.633 iterations 6
Cbc0038I Pass  30: (2.18 seconds) suminf.   11.14627 (27) obj. -365.633 iterations 34
Cbc0038I Pass  31: (2.19 seconds) suminf.   11.14627 (27) obj. -365.633 iterations 13
Cbc0038I Pass  32: (2.20 seconds) suminf.   11.42919 (24) obj. -365.633 iterations 685
Cbc0038I Pass  33: (2.20 seconds) suminf.   12.12561 (32) obj. -365.633 iterations 17
Cbc0038I Pass  34: (2.21 seconds) suminf.   11.20639 (23) obj. -365.633 iterations 168
Cbc0038I Pass  35: (2.22 seconds) suminf.   15.72713 (45) obj. -365.633 iterations 619
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 983 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4004 rows 1057 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (2.25 seconds)
Cbc0038I After 2.25 seconds - Feasibility pump exiting with objective of -365.565 - took 0.35 seconds
Cbc0012I Integer solution of -365.56516 found by feasibility pump after 0 iterations and 0 nodes (2.25 seconds)
Cbc0038I Full problem 4004 rows 1057 columns, reduced to 8 rows 7 columns
Cbc0031I 1 added rows had average density of 4
Cbc0013I At root node, 7 cuts changed objective from -365.90559 to -365.56516 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.3 elements, 2 column cuts (2 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -365.565160301329, took 0 iterations and 0 nodes (2.32 seconds)
Cbc0035I Maximum depth 0, 299 variables fixed on reduced cost
Cuts at root node changed objective from -365.906 to -365.565
Probing was tried 1 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                365.56516030
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.45
Time (Wallclock seconds):       2.98

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.93   (Wallclock seconds):       4.81

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/af2c91c8b1ce4a368182331fdae0fd5e-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/af2c91c8b1ce4a368182331fdae0fd5e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1121834 COLUMNS
At line 4491691 RHS
At line 5613521 BOUNDS
At line 5617232 ENDATA
Problem MODEL has 1121829 rows, 3710 columns and 1136237 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 422.273 - 1.09 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 164 strengthened rows, 162 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 149 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 5258 rows, 1228 columns (1228 integer (1224 of which binary)) and 14608 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.33333
Cbc0038I Pass   1: (2.63 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 816
Cbc0038I Solution found of -410.333
Cbc0038I Cleaned solution of -410.333
Cbc0038I Rounding solution of -419.129 is better than previous of -410.333

Cbc0038I Before mini branch and bound, 1218 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (2.78 seconds)
Cbc0038I Round again with cutoff of -419.443
Cbc0038I Reduced cost fixing fixed 223 variables on major pass 2
Cbc0038I Pass   2: (2.79 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 0
Cbc0038I Pass   3: (2.80 seconds) suminf.    0.37124 (1) obj. -419.443 iterations 190
Cbc0038I Solution found of -419.443
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 5259 rows 1228 columns, reduced to 2 rows 4 columns
Cbc0038I Cleaned solution of -420.299
Cbc0038I Before mini branch and bound, 1217 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (2.88 seconds)
Cbc0038I Round again with cutoff of -420.694
Cbc0038I Reduced cost fixing fixed 251 variables on major pass 3
Cbc0038I Pass   4: (2.89 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 0
Cbc0038I Pass   5: (2.91 seconds) suminf.    0.43412 (3) obj. -420.694 iterations 884
Cbc0038I Pass   6: (2.93 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 744
Cbc0038I Pass   7: (2.94 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 211
Cbc0038I Pass   8: (2.94 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 195
Cbc0038I Pass   9: (2.95 seconds) suminf.    1.86809 (9) obj. -420.694 iterations 264
Cbc0038I Pass  10: (2.96 seconds) suminf.    1.93085 (9) obj. -420.694 iterations 338
Cbc0038I Pass  11: (2.97 seconds) suminf.    0.49318 (3) obj. -420.694 iterations 347
Cbc0038I Pass  12: (2.98 seconds) suminf.    0.40077 (1) obj. -420.694 iterations 261
Cbc0038I Solution found of -420.694
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 5259 rows 1228 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -421.353
Cbc0038I Before mini branch and bound, 1205 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (3.05 seconds)
Cbc0038I Round again with cutoff of -421.629
Cbc0038I Reduced cost fixing fixed 268 variables on major pass 4
Cbc0038I Pass  13: (3.06 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 0
Cbc0038I Pass  14: (3.08 seconds) suminf.    1.10687 (3) obj. -421.629 iterations 903
Cbc0038I Pass  15: (3.10 seconds) suminf.    0.80000 (2) obj. -422.097 iterations 753
Cbc0038I Pass  16: (3.11 seconds) suminf.    0.00000 (0) obj. -422.226 iterations 213
Cbc0038I Solution found of -422.226
Cbc0038I Cleaned solution of -422.226
Cbc0038I Before mini branch and bound, 1214 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (3.15 seconds)
Cbc0038I Round again with cutoff of -422.24
Cbc0038I Reduced cost fixing fixed 284 variables on major pass 5
Cbc0038I Pass  17: (3.16 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 52
Cbc0038I Pass  18: (3.18 seconds) suminf.    1.35794 (12) obj. -422.24 iterations 662
Cbc0038I Pass  19: (3.19 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 473
Cbc0038I Pass  20: (3.20 seconds) suminf.    1.34213 (9) obj. -422.24 iterations 319
Cbc0038I Pass  21: (3.22 seconds) suminf.    1.37877 (10) obj. -422.24 iterations 661
Cbc0038I Pass  22: (3.24 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 651
Cbc0038I Pass  23: (3.24 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 385
Cbc0038I Pass  24: (3.25 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 212
Cbc0038I Pass  25: (3.26 seconds) suminf.    1.35794 (12) obj. -422.24 iterations 493
Cbc0038I Pass  26: (3.27 seconds) suminf.    1.34351 (9) obj. -422.24 iterations 411
Cbc0038I Pass  27: (3.28 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 288
Cbc0038I Pass  28: (3.28 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 266
Cbc0038I Pass  29: (3.29 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 320
Cbc0038I Pass  30: (3.29 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 315
Cbc0038I Pass  31: (3.30 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 315
Cbc0038I Pass  32: (3.30 seconds) suminf.    1.35365 (12) obj. -422.24 iterations 325
Cbc0038I Pass  33: (3.31 seconds) suminf.    1.34351 (9) obj. -422.24 iterations 333
Cbc0038I Pass  34: (3.32 seconds) suminf.    1.34213 (9) obj. -422.24 iterations 345
Cbc0038I Pass  35: (3.33 seconds) suminf.    1.37877 (10) obj. -422.24 iterations 379
Cbc0038I Pass  36: (3.34 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 359
Cbc0038I Pass  37: (3.34 seconds) suminf.    1.35477 (18) obj. -422.24 iterations 392
Cbc0038I Pass  38: (3.35 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 297
Cbc0038I Pass  39: (3.36 seconds) suminf.    1.35794 (12) obj. -422.24 iterations 358
Cbc0038I Pass  40: (3.37 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 340
Cbc0038I Pass  41: (3.37 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 327
Cbc0038I Pass  42: (3.38 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 278
Cbc0038I Pass  43: (3.38 seconds) suminf.    1.34213 (9) obj. -422.24 iterations 287
Cbc0038I Pass  44: (3.39 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 284
Cbc0038I Pass  45: (3.40 seconds) suminf.    1.37877 (10) obj. -422.24 iterations 659
Cbc0038I Pass  46: (3.41 seconds) suminf.    1.33333 (8) obj. -422.273 iterations 507
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1205 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 10 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (3.44 seconds)
Cbc0038I After 3.44 seconds - Feasibility pump exiting with objective of -422.226 - took 0.73 seconds
Cbc0012I Integer solution of -422.22562 found by feasibility pump after 0 iterations and 0 nodes (3.44 seconds)
Cbc0038I Full problem 5258 rows 1228 columns, reduced to 1 rows 2 columns
Cbc0031I 4 added rows had average density of 12.25
Cbc0013I At root node, 9 cuts changed objective from -422.27325 to -420.12254 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -422.2256159065752, took 0 iterations and 0 nodes (3.54 seconds)
Cbc0035I Maximum depth 0, 279 variables fixed on reduced cost
Cuts at root node changed objective from -422.273 to -420.123
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                422.22561591
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             3.44
Time (Wallclock seconds):       4.46

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.17   (Wallclock seconds):       6.45

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f8005208acb24bcebd249ebc1dba4d5d-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f8005208acb24bcebd249ebc1dba4d5d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 978732 COLUMNS
At line 3919119 RHS
At line 4897847 BOUNDS
At line 4901470 ENDATA
Problem MODEL has 978727 rows, 3622 columns and 992141 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 501.326 - 1.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 95 strengthened rows, 332 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 87 strengthened rows, 0 substitutions
Cgl0004I processed model has 4726 rows, 1145 columns (1145 integer (1145 of which binary)) and 12944 elements
Cbc0038I Initial state - 57 integers unsatisfied sum - 18.3333
Cbc0038I Pass   1: (2.09 seconds) suminf.    0.00000 (0) obj. -456.126 iterations 1031
Cbc0038I Solution found of -456.126
Cbc0038I Before mini branch and bound, 1087 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4726 rows 1145 columns, reduced to 26 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -456.126 to -489.486 (2.21 seconds)
Cbc0038I Round again with cutoff of -490.67
Cbc0038I Reduced cost fixing fixed 123 variables on major pass 2
Cbc0038I Pass   2: (2.27 seconds) suminf.    2.53109 (11) obj. -490.67 iterations 754
Cbc0038I Pass   3: (2.28 seconds) suminf.    1.47422 (8) obj. -490.67 iterations 392
Cbc0038I Pass   4: (2.30 seconds) suminf.    0.54545 (6) obj. -495.664 iterations 807
Cbc0038I Pass   5: (2.33 seconds) suminf.    1.47422 (8) obj. -490.67 iterations 1096
Cbc0038I Pass   6: (2.35 seconds) suminf.    5.58427 (17) obj. -490.67 iterations 501
Cbc0038I Pass   7: (2.36 seconds) suminf.    2.38691 (8) obj. -490.67 iterations 401
Cbc0038I Pass   8: (2.37 seconds) suminf.    2.38691 (8) obj. -490.67 iterations 15
Cbc0038I Pass   9: (2.39 seconds) suminf.    2.72727 (6) obj. -491.435 iterations 666
Cbc0038I Pass  10: (2.41 seconds) suminf.    4.19556 (11) obj. -490.67 iterations 757
Cbc0038I Pass  11: (2.41 seconds) suminf.    3.52816 (10) obj. -490.67 iterations 77
Cbc0038I Pass  12: (2.42 seconds) suminf.    3.52816 (10) obj. -490.67 iterations 91
Cbc0038I Pass  13: (2.43 seconds) suminf.    0.80000 (8) obj. -493.151 iterations 673
Cbc0038I Pass  14: (2.44 seconds) suminf.    0.64286 (9) obj. -491.753 iterations 67
Cbc0038I Pass  15: (2.45 seconds) suminf.    1.17161 (11) obj. -490.67 iterations 413
Cbc0038I Pass  16: (2.47 seconds) suminf.    0.64286 (9) obj. -491.753 iterations 512
Cbc0038I Pass  17: (2.48 seconds) suminf.    1.53286 (11) obj. -490.67 iterations 436
Cbc0038I Solution found of -493.347
Cbc0038I Before mini branch and bound, 1045 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4726 rows 1145 columns, reduced to 67 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -493.347 to -493.996 (2.52 seconds)
Cbc0038I Round again with cutoff of -495.462
Cbc0038I Reduced cost fixing fixed 191 variables on major pass 3
Cbc0038I Pass  18: (2.54 seconds) suminf.    5.31336 (44) obj. -495.462 iterations 359
Cbc0038I Pass  19: (2.54 seconds) suminf.    4.09364 (64) obj. -495.462 iterations 54
Cbc0038I Pass  20: (2.55 seconds) suminf.    8.87959 (41) obj. -495.462 iterations 73
Cbc0038I Pass  21: (2.57 seconds) suminf.    0.71952 (11) obj. -495.462 iterations 592
Cbc0038I Pass  22: (2.58 seconds) suminf.    0.54545 (6) obj. -495.664 iterations 353
Cbc0038I Pass  23: (2.59 seconds) suminf.    0.65701 (12) obj. -495.462 iterations 435
Cbc0038I Pass  24: (2.61 seconds) suminf.    3.22238 (16) obj. -495.462 iterations 698
Cbc0038I Pass  25: (2.62 seconds) suminf.    0.80211 (19) obj. -495.462 iterations 340
Cbc0038I Pass  26: (2.63 seconds) suminf.    0.66403 (10) obj. -495.462 iterations 469
Cbc0038I Pass  27: (2.65 seconds) suminf.    1.74719 (8) obj. -495.462 iterations 643
Cbc0038I Pass  28: (2.66 seconds) suminf.    0.66403 (10) obj. -495.462 iterations 339
Cbc0038I Pass  29: (2.67 seconds) suminf.    0.66403 (10) obj. -495.462 iterations 417
Cbc0038I Pass  30: (2.68 seconds) suminf.    2.32270 (14) obj. -495.462 iterations 224
Cbc0038I Pass  31: (2.69 seconds) suminf.    2.18182 (6) obj. -495.869 iterations 626
Cbc0038I Pass  32: (2.70 seconds) suminf.    2.40649 (12) obj. -495.462 iterations 467
Cbc0038I Pass  33: (2.72 seconds) suminf.    4.81970 (57) obj. -495.462 iterations 801
Cbc0038I Pass  34: (2.74 seconds) suminf.    2.40649 (12) obj. -495.462 iterations 822
Cbc0038I Pass  35: (2.75 seconds) suminf.    2.18182 (6) obj. -495.869 iterations 395
Cbc0038I Pass  36: (2.77 seconds) suminf.    4.92792 (61) obj. -495.462 iterations 808
Cbc0038I Pass  37: (2.78 seconds) suminf.    4.81970 (57) obj. -495.462 iterations 18
Cbc0038I Pass  38: (2.80 seconds) suminf.    1.33333 (6) obj. -495.472 iterations 712
Cbc0038I Pass  39: (2.81 seconds) suminf.    1.33333 (14) obj. -495.462 iterations 259
Cbc0038I Pass  40: (2.84 seconds) suminf.    5.60152 (20) obj. -495.462 iterations 1408
Cbc0038I Pass  41: (2.85 seconds) suminf.    2.18182 (6) obj. -495.869 iterations 326
Cbc0038I Pass  42: (2.87 seconds) suminf.    2.33826 (11) obj. -495.462 iterations 645
Cbc0038I Pass  43: (2.88 seconds) suminf.    2.18182 (6) obj. -495.869 iterations 627
Cbc0038I Pass  44: (2.90 seconds) suminf.    2.40649 (12) obj. -495.462 iterations 491
Cbc0038I Pass  45: (2.91 seconds) suminf.    2.33826 (11) obj. -495.462 iterations 650
Cbc0038I Pass  46: (2.93 seconds) suminf.    2.44822 (18) obj. -495.462 iterations 579
Cbc0038I Pass  47: (2.95 seconds) suminf.    4.26569 (14) obj. -495.462 iterations 749
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 978 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4726 rows 1145 columns, reduced to 108 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -493.996 to -494.726 (2.99 seconds)
Cbc0038I Round again with cutoff of -497.221
Cbc0038I Reduced cost fixing fixed 218 variables on major pass 4
Cbc0038I Pass  47: (2.99 seconds) suminf.    9.92798 (44) obj. -497.221 iterations 0
Cbc0038I Pass  48: (3.00 seconds) suminf.    8.81612 (56) obj. -497.221 iterations 21
Cbc0038I Pass  49: (3.00 seconds) suminf.    7.68547 (53) obj. -497.221 iterations 17
Cbc0038I Pass  50: (3.00 seconds) suminf.    7.66972 (61) obj. -497.221 iterations 28
Cbc0038I Pass  51: (3.01 seconds) suminf.    8.81612 (56) obj. -497.221 iterations 19
Cbc0038I Pass  52: (3.01 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 23
Cbc0038I Pass  53: (3.02 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 20
Cbc0038I Pass  54: (3.02 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 15
Cbc0038I Pass  55: (3.02 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 12
Cbc0038I Pass  56: (3.03 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 28
Cbc0038I Pass  57: (3.03 seconds) suminf.    7.33150 (53) obj. -497.221 iterations 31
Cbc0038I Pass  58: (3.04 seconds) suminf.   13.86606 (47) obj. -497.221 iterations 203
Cbc0038I Pass  59: (3.04 seconds) suminf.   11.31337 (47) obj. -497.221 iterations 160
Cbc0038I Pass  60: (3.05 seconds) suminf.   11.31337 (47) obj. -497.221 iterations 34
Cbc0038I Pass  61: (3.05 seconds) suminf.   12.66298 (51) obj. -497.221 iterations 131
Cbc0038I Pass  62: (3.06 seconds) suminf.   11.56238 (53) obj. -497.221 iterations 17
Cbc0038I Pass  63: (3.06 seconds) suminf.    7.89911 (53) obj. -497.221 iterations 9
Cbc0038I Pass  64: (3.06 seconds) suminf.    7.89911 (53) obj. -497.221 iterations 0
Cbc0038I Pass  65: (3.07 seconds) suminf.    8.89427 (53) obj. -497.221 iterations 18
Cbc0038I Pass  66: (3.07 seconds) suminf.    8.89427 (53) obj. -497.221 iterations 12
Cbc0038I Pass  67: (3.07 seconds) suminf.    8.89427 (53) obj. -497.221 iterations 15
Cbc0038I Pass  68: (3.08 seconds) suminf.    7.68547 (53) obj. -497.221 iterations 16
Cbc0038I Pass  69: (3.08 seconds) suminf.    7.66972 (61) obj. -497.221 iterations 23
Cbc0038I Pass  70: (3.08 seconds) suminf.    9.42413 (50) obj. -497.221 iterations 24
Cbc0038I Pass  71: (3.09 seconds) suminf.    9.42413 (50) obj. -497.221 iterations 12
Cbc0038I Pass  72: (3.09 seconds) suminf.    8.91916 (47) obj. -497.221 iterations 15
Cbc0038I Pass  73: (3.09 seconds) suminf.    8.91916 (47) obj. -497.221 iterations 4
Cbc0038I Pass  74: (3.10 seconds) suminf.    9.04722 (48) obj. -497.221 iterations 27
Cbc0038I Pass  75: (3.10 seconds) suminf.    7.68547 (53) obj. -497.221 iterations 19
Cbc0038I Pass  76: (3.10 seconds) suminf.    7.66972 (61) obj. -497.221 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1062 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4726 rows 1145 columns, reduced to 63 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (3.13 seconds)
Cbc0038I After 3.14 seconds - Feasibility pump exiting with objective of -494.726 - took 1.00 seconds
Cbc0012I Integer solution of -494.72583 found by feasibility pump after 0 iterations and 0 nodes (3.14 seconds)
Cbc0038I Full problem 4726 rows 1145 columns, reduced to 26 rows 15 columns
Cbc0031I 6 added rows had average density of 51.166667
Cbc0013I At root node, 6 cuts changed objective from -501.3256 to -496.56638 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 133 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -494.72583 best solution, best possible -496.55365 (3.33 seconds)
Cbc0004I Integer solution of -495.19825 found after 374 iterations and 9 nodes (3.58 seconds)
Cbc0001I Search completed - best objective -495.1982545033981, took 381 iterations and 10 nodes (3.58 seconds)
Cbc0032I Strong branching done 72 times (828 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 245 variables fixed on reduced cost
Cuts at root node changed objective from -501.326 to -496.554
Probing was tried 18 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 18 times and created 133 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)

Result - Optimal solution found

Objective value:                495.19825450
Enumerated nodes:               10
Total iterations:               381
Time (CPU seconds):             3.60
Time (Wallclock seconds):       4.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.13   (Wallclock seconds):       6.17

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/52efd816f3e34886a7f11fc19649f731-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/52efd816f3e34886a7f11fc19649f731-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 405826 COLUMNS
At line 1625935 RHS
At line 2031757 BOUNDS
At line 2034014 ENDATA
Problem MODEL has 405821 rows, 2256 columns and 413116 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 352.379 - 0.50 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 114 substitutions
Cgl0004I processed model has 2372 rows, 665 columns (665 integer (665 of which binary)) and 6371 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.27273
Cbc0038I Pass   1: suminf.    1.25000 (10) obj. -350.974 iterations 358
Cbc0038I Solution found of -298.374
Cbc0038I Rounding solution of -300.374 is better than previous of -298.374

Cbc0038I Before mini branch and bound, 648 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2372 rows 665 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -300.374 to -324.891 (0.97 seconds)
Cbc0038I Round again with cutoff of -327.64
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.25000 (10) obj. -350.974 iterations 0
Cbc0038I Pass   3: suminf.    2.48189 (7) obj. -327.64 iterations 584
Cbc0038I Pass   4: suminf.    2.33096 (13) obj. -327.64 iterations 250
Cbc0038I Pass   5: suminf.    4.23222 (17) obj. -327.64 iterations 250
Cbc0038I Pass   6: suminf.    1.93017 (7) obj. -327.64 iterations 325
Cbc0038I Pass   7: suminf.    1.09091 (4) obj. -332.637 iterations 133
Cbc0038I Pass   8: suminf.    1.09091 (4) obj. -332.637 iterations 2
Cbc0038I Pass   9: suminf.    1.21088 (3) obj. -327.64 iterations 145
Cbc0038I Pass  10: suminf.    1.21088 (3) obj. -327.64 iterations 107
Cbc0038I Pass  11: suminf.    1.11174 (3) obj. -327.64 iterations 95
Cbc0038I Pass  12: suminf.    0.72727 (4) obj. -330.353 iterations 105
Cbc0038I Pass  13: suminf.    1.94684 (7) obj. -327.64 iterations 325
Cbc0038I Pass  14: suminf.    4.94037 (11) obj. -327.64 iterations 214
Cbc0038I Solution found of -331.506
Cbc0038I Before mini branch and bound, 608 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2372 rows 665 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -331.506 to -345.069 (1.05 seconds)
Cbc0038I Round again with cutoff of -346.531
Cbc0038I Reduced cost fixing fixed 89 variables on major pass 3
Cbc0038I Pass  15: suminf.    1.25000 (10) obj. -350.974 iterations 0
Cbc0038I Pass  16: suminf.    6.74779 (14) obj. -346.531 iterations 363
Cbc0038I Pass  17: suminf.    1.25000 (10) obj. -350.974 iterations 234
Cbc0038I Pass  18: suminf.    2.06093 (17) obj. -346.531 iterations 207
Cbc0038I Pass  19: suminf.    1.61630 (9) obj. -346.531 iterations 374
Cbc0038I Pass  20: suminf.    1.25000 (10) obj. -350.974 iterations 355
Cbc0038I Pass  21: suminf.    1.25000 (10) obj. -350.974 iterations 0
Cbc0038I Pass  22: suminf.    6.74779 (14) obj. -346.531 iterations 326
Cbc0038I Pass  23: suminf.    1.25000 (10) obj. -350.974 iterations 208
Cbc0038I Pass  24: suminf.    3.18182 (7) obj. -349.464 iterations 119
Cbc0038I Pass  25: suminf.    1.36491 (4) obj. -346.531 iterations 246
Cbc0038I Pass  26: suminf.    1.42857 (4) obj. -347.106 iterations 131
Cbc0038I Pass  27: suminf.    1.13238 (8) obj. -346.531 iterations 283
Cbc0038I Pass  28: suminf.    0.33513 (3) obj. -346.531 iterations 197
Cbc0038I Pass  29: suminf.    1.81818 (4) obj. -349.102 iterations 121
Cbc0038I Pass  30: suminf.    4.16926 (20) obj. -346.531 iterations 199
Cbc0038I Pass  31: suminf.    1.81818 (4) obj. -349.102 iterations 156
Cbc0038I Pass  32: suminf.    1.36491 (4) obj. -346.531 iterations 163
Cbc0038I Pass  33: suminf.    1.42857 (4) obj. -347.106 iterations 118
Cbc0038I Pass  34: suminf.    2.11642 (6) obj. -346.531 iterations 232
Cbc0038I Pass  35: suminf.    1.42857 (4) obj. -348.135 iterations 185
Cbc0038I Pass  36: suminf.    1.60606 (4) obj. -346.531 iterations 148
Cbc0038I Pass  37: suminf.    2.43449 (8) obj. -346.531 iterations 241
Cbc0038I Solution found of -351.223
Cbc0038I Before mini branch and bound, 578 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2372 rows 665 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (1.16 seconds)
Cbc0038I Round again with cutoff of -351.57
Cbc0038I Reduced cost fixing fixed 174 variables on major pass 4
Cbc0038I Pass  38: suminf.    1.27273 (7) obj. -352.379 iterations 1
Cbc0038I Pass  39: suminf.    0.74642 (4) obj. -351.57 iterations 205
Cbc0038I Pass  40: suminf.    0.72727 (4) obj. -351.727 iterations 103
Cbc0038I Pass  41: suminf.    0.72727 (4) obj. -351.727 iterations 89
Cbc0038I Pass  42: suminf.    0.72727 (4) obj. -351.727 iterations 93
Cbc0038I Pass  43: suminf.    0.72727 (4) obj. -351.727 iterations 102
Cbc0038I Pass  44: suminf.    1.27273 (7) obj. -352.379 iterations 174
Cbc0038I Pass  45: suminf.    1.27273 (7) obj. -352.379 iterations 149
Cbc0038I Pass  46: suminf.    1.27273 (7) obj. -352.379 iterations 158
Cbc0038I Pass  47: suminf.    1.27273 (7) obj. -352.379 iterations 160
Cbc0038I Pass  48: suminf.    1.44132 (7) obj. -351.57 iterations 240
Cbc0038I Pass  49: suminf.    1.27273 (7) obj. -352.379 iterations 168
Cbc0038I Pass  50: suminf.    1.27273 (7) obj. -352.379 iterations 124
Cbc0038I Pass  51: suminf.    1.27273 (7) obj. -352.379 iterations 142
Cbc0038I Pass  52: suminf.    2.17391 (12) obj. -351.57 iterations 265
Cbc0038I Pass  53: suminf.    6.39864 (13) obj. -351.57 iterations 259
Cbc0038I Pass  54: suminf.    6.39864 (13) obj. -351.57 iterations 293
Cbc0038I Pass  55: suminf.    1.27273 (7) obj. -352.379 iterations 326
Cbc0038I Pass  56: suminf.    0.74642 (4) obj. -351.57 iterations 138
Cbc0038I Pass  57: suminf.    0.74642 (4) obj. -351.57 iterations 148
Cbc0038I Pass  58: suminf.    0.72727 (4) obj. -351.727 iterations 196
Cbc0038I Pass  59: suminf.    1.27273 (7) obj. -352.379 iterations 160
Cbc0038I Pass  60: suminf.    1.27273 (7) obj. -352.379 iterations 163
Cbc0038I Pass  61: suminf.    4.51027 (11) obj. -351.57 iterations 409
Cbc0038I Pass  62: suminf.    0.86393 (15) obj. -351.57 iterations 12
Cbc0038I Pass  63: suminf.    0.86393 (15) obj. -351.57 iterations 3
Cbc0038I Pass  64: suminf.    1.67525 (19) obj. -351.57 iterations 2
Cbc0038I Pass  65: suminf.    0.86393 (15) obj. -351.57 iterations 2
Cbc0038I Pass  66: suminf.    0.88220 (22) obj. -351.57 iterations 2
Cbc0038I Pass  67: suminf.    0.86393 (15) obj. -351.57 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 621 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2372 rows 665 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (1.24 seconds)
Cbc0038I After 1.24 seconds - Feasibility pump exiting with objective of -351.223 - took 0.30 seconds
Cbc0012I Integer solution of -351.22345 found by feasibility pump after 0 iterations and 0 nodes (1.25 seconds)
Cbc0031I 1 added rows had average density of 7
Cbc0013I At root node, 3 cuts changed objective from -352.37947 to -349.79599 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 27 column cuts (27 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -351.2234520186141, took 173 iterations and 0 nodes (1.29 seconds)
Cbc0035I Maximum depth 0, 169 variables fixed on reduced cost
Cuts at root node changed objective from -352.379 to -349.796
Probing was tried 1 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                351.22345202
Enumerated nodes:               0
Total iterations:               173
Time (CPU seconds):             1.29
Time (Wallclock seconds):       1.54

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.89   (Wallclock seconds):       2.24

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/70d07e63e3674d9db8263276897d62ba-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/70d07e63e3674d9db8263276897d62ba-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 157812 COLUMNS
At line 633119 RHS
At line 790927 BOUNDS
At line 792620 ENDATA
Problem MODEL has 157807 rows, 1692 columns and 162550 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 316.57 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 166 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 1188 rows, 368 columns (368 integer (368 of which binary)) and 3133 elements
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.86364
Cbc0038I Pass   1: suminf.    2.86364 (9) obj. -316.57 iterations 214
Cbc0038I Solution found of -273.247
Cbc0038I Rounding solution of -279.873 is better than previous of -273.247

Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of -283.543
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.86364 (9) obj. -316.57 iterations 0
Cbc0038I Pass   3: suminf.    0.24082 (1) obj. -283.543 iterations 199
Cbc0038I Pass   4: suminf.    0.21053 (1) obj. -306.999 iterations 42
Cbc0038I Pass   5: suminf.    3.23077 (7) obj. -287.037 iterations 116
Cbc0038I Pass   6: suminf.    2.57743 (13) obj. -283.543 iterations 129
Cbc0038I Pass   7: suminf.    0.57143 (4) obj. -299.733 iterations 68
Cbc0038I Solution found of -288.542
Cbc0038I Rounding solution of -295.168 is better than previous of -288.542

Cbc0038I Before mini branch and bound, 341 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1188 rows 368 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -295.168 to -297.346 (0.20 seconds)
Cbc0038I Round again with cutoff of -301.191
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass   8: suminf.    2.86364 (9) obj. -316.57 iterations 0
Cbc0038I Pass   9: suminf.    0.34639 (1) obj. -301.191 iterations 217
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -306.999 iterations 40
Cbc0038I Pass  11: suminf.    1.57143 (11) obj. -302.71 iterations 105
Cbc0038I Pass  12: suminf.    0.21053 (1) obj. -306.999 iterations 85
Cbc0038I Pass  13: suminf.    0.21053 (1) obj. -304.021 iterations 99
Cbc0038I Pass  14: suminf.    0.14433 (1) obj. -301.191 iterations 114
Cbc0038I Pass  15: suminf.    0.21053 (1) obj. -304.021 iterations 30
Cbc0038I Pass  16: suminf.    0.85714 (3) obj. -301.934 iterations 80
Cbc0038I Pass  17: suminf.    2.83669 (16) obj. -301.191 iterations 131
Cbc0038I Pass  18: suminf.    1.42973 (18) obj. -301.191 iterations 155
Cbc0038I Pass  19: suminf.    0.74628 (8) obj. -301.191 iterations 126
Cbc0038I Pass  20: suminf.    1.00000 (6) obj. -305.665 iterations 171
Cbc0038I Pass  21: suminf.    7.04140 (17) obj. -301.191 iterations 117
Cbc0038I Pass  22: suminf.    2.08931 (7) obj. -301.191 iterations 427
Cbc0038I Pass  23: suminf.    2.75000 (6) obj. -303.609 iterations 155
Cbc0038I Pass  24: suminf.    2.75000 (6) obj. -303.609 iterations 1
Cbc0038I Pass  25: suminf.    5.43838 (30) obj. -301.191 iterations 71
Cbc0038I Pass  26: suminf.    2.75000 (6) obj. -303.609 iterations 65
Cbc0038I Pass  27: suminf.    6.62783 (24) obj. -301.191 iterations 89
Cbc0038I Pass  28: suminf.    4.05405 (14) obj. -301.191 iterations 73
Cbc0038I Pass  29: suminf.    4.05405 (14) obj. -301.191 iterations 207
Cbc0038I Solution found of -316.515
Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1188 rows 368 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of -316.532
Cbc0038I Reduced cost fixing fixed 88 variables on major pass 4
Cbc0038I Pass  30: suminf.    2.86364 (9) obj. -316.57 iterations 0
Cbc0038I Pass  31: suminf.    2.91474 (14) obj. -316.532 iterations 206
Cbc0038I Pass  32: suminf.    2.86902 (9) obj. -316.532 iterations 134
Cbc0038I Pass  33: suminf.    1.77778 (8) obj. -316.558 iterations 119
Cbc0038I Pass  34: suminf.    1.70758 (18) obj. -316.532 iterations 224
Cbc0038I Pass  35: suminf.    3.20205 (19) obj. -316.532 iterations 357
Cbc0038I Pass  36: suminf.    2.90575 (14) obj. -316.532 iterations 174
Cbc0038I Pass  37: suminf.    1.77778 (8) obj. -316.558 iterations 120
Cbc0038I Pass  38: suminf.    1.70758 (18) obj. -316.532 iterations 312
Cbc0038I Pass  39: suminf.    1.77778 (8) obj. -316.558 iterations 247
Cbc0038I Pass  40: suminf.    1.75908 (13) obj. -316.532 iterations 111
Cbc0038I Pass  41: suminf.    1.71417 (15) obj. -316.532 iterations 168
Cbc0038I Pass  42: suminf.    1.75504 (18) obj. -316.532 iterations 104
Cbc0038I Pass  43: suminf.    1.77096 (10) obj. -316.532 iterations 193
Cbc0038I Pass  44: suminf.    1.71417 (15) obj. -316.532 iterations 54
Cbc0038I Pass  45: suminf.    1.71417 (15) obj. -316.532 iterations 3
Cbc0038I Pass  46: suminf.    1.75908 (13) obj. -316.532 iterations 153
Cbc0038I Pass  47: suminf.    1.70758 (18) obj. -316.532 iterations 152
Cbc0038I Pass  48: suminf.    1.71417 (15) obj. -316.532 iterations 17
Cbc0038I Pass  49: suminf.    1.77096 (10) obj. -316.532 iterations 203
Cbc0038I Pass  50: suminf.    1.70758 (18) obj. -316.532 iterations 205
Cbc0038I Pass  51: suminf.    1.77778 (8) obj. -316.558 iterations 178
Cbc0038I Pass  52: suminf.    1.77096 (10) obj. -316.532 iterations 119
Cbc0038I Pass  53: suminf.    1.77778 (8) obj. -316.558 iterations 105
Cbc0038I Pass  54: suminf.    1.77096 (10) obj. -316.532 iterations 113
Cbc0038I Pass  55: suminf.    1.77096 (10) obj. -316.532 iterations 108
Cbc0038I Pass  56: suminf.    1.70758 (18) obj. -316.532 iterations 150
Cbc0038I Pass  57: suminf.    1.70758 (18) obj. -316.532 iterations 3
Cbc0038I Pass  58: suminf.    1.77778 (8) obj. -316.558 iterations 235
Cbc0038I Pass  59: suminf.    2.86364 (9) obj. -316.57 iterations 93
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 320 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1188 rows 368 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -316.515 - took 0.16 seconds
Cbc0012I Integer solution of -316.51539 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 1188 rows 368 columns, reduced to 1 rows 3 columns
Cbc0031I 1 added rows had average density of 7
Cbc0013I At root node, 91 cuts changed objective from -316.56966 to -316.51539 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -316.515385630264, took 0 iterations and 0 nodes (0.35 seconds)
Cbc0035I Maximum depth 0, 87 variables fixed on reduced cost
Cuts at root node changed objective from -316.57 to -316.515
Probing was tried 1 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                316.51538563
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.41
Time (Wallclock seconds):       0.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.72

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/39b7082b59774c22aaf5267caeea640a-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/39b7082b59774c22aaf5267caeea640a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 388758 COLUMNS
At line 1557830 RHS
At line 1946584 BOUNDS
At line 1949066 ENDATA
Problem MODEL has 388753 rows, 2481 columns and 397145 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 333.265 - 0.57 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 218 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 2816 rows, 732 columns (732 integer (732 of which binary)) and 7506 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 0.588235
Cbc0038I Solution found of -330.267
Cbc0038I Before mini branch and bound, 722 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2816 rows 732 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.00 seconds)
Cbc0038I Round again with cutoff of -330.567
Cbc0038I Reduced cost fixing fixed 112 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03102 (3) obj. -330.567 iterations 626
Cbc0038I Pass   2: suminf.    0.13636 (3) obj. -331.585 iterations 95
Cbc0038I Pass   3: suminf.    0.60000 (3) obj. -332.947 iterations 141
Cbc0038I Pass   4: suminf.    2.60000 (13) obj. -331.175 iterations 176
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -330.962 iterations 107
Cbc0038I Solution found of -330.962
Cbc0038I Before mini branch and bound, 701 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2816 rows 732 columns, reduced to 27 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -330.962 to -330.962 (1.06 seconds)
Cbc0038I Round again with cutoff of -331.423
Cbc0038I Reduced cost fixing fixed 125 variables on major pass 3
Cbc0038I Pass   6: suminf.    0.11960 (3) obj. -331.423 iterations 0
Cbc0038I Pass   7: suminf.    0.13636 (3) obj. -331.585 iterations 100
Cbc0038I Pass   8: suminf.    1.02114 (5) obj. -331.423 iterations 487
Cbc0038I Pass   9: suminf.    1.02114 (5) obj. -331.423 iterations 215
Cbc0038I Pass  10: suminf.    1.02114 (5) obj. -331.423 iterations 9
Cbc0038I Pass  11: suminf.    1.02114 (5) obj. -331.423 iterations 8
Cbc0038I Pass  12: suminf.    1.02114 (5) obj. -331.423 iterations 11
Cbc0038I Pass  13: suminf.    2.21215 (16) obj. -331.423 iterations 35
Cbc0038I Pass  14: suminf.    1.83141 (8) obj. -331.423 iterations 273
Cbc0038I Pass  15: suminf.    0.30000 (6) obj. -332.839 iterations 214
Cbc0038I Pass  16: suminf.    0.11960 (3) obj. -331.423 iterations 117
Cbc0038I Pass  17: suminf.    0.13636 (3) obj. -331.585 iterations 82
Cbc0038I Pass  18: suminf.    2.13299 (18) obj. -331.423 iterations 329
Cbc0038I Pass  19: suminf.    1.54886 (18) obj. -331.423 iterations 174
Cbc0038I Pass  20: suminf.    0.13636 (3) obj. -331.585 iterations 279
Cbc0038I Pass  21: suminf.    0.19185 (5) obj. -331.423 iterations 237
Cbc0038I Pass  22: suminf.    0.99183 (7) obj. -331.423 iterations 270
Cbc0038I Pass  23: suminf.    0.55556 (5) obj. -332.014 iterations 236
Cbc0038I Pass  24: suminf.    0.60000 (3) obj. -332.947 iterations 303
Cbc0038I Pass  25: suminf.    0.60000 (3) obj. -332.947 iterations 204
Cbc0038I Pass  26: suminf.    0.37500 (3) obj. -332.131 iterations 215
Cbc0038I Pass  27: suminf.    1.13671 (14) obj. -331.423 iterations 205
Cbc0038I Pass  28: suminf.    2.57204 (16) obj. -331.423 iterations 378
Cbc0038I Pass  29: suminf.    1.02114 (5) obj. -331.423 iterations 233
Cbc0038I Pass  30: suminf.    1.02114 (5) obj. -331.423 iterations 424
Cbc0038I Pass  31: suminf.    1.02114 (5) obj. -331.423 iterations 12
Cbc0038I Pass  32: suminf.    1.02114 (5) obj. -331.423 iterations 9
Cbc0038I Pass  33: suminf.    0.11960 (3) obj. -331.423 iterations 595
Cbc0038I Pass  34: suminf.    0.13636 (3) obj. -331.585 iterations 79
Cbc0038I Pass  35: suminf.    0.18741 (21) obj. -331.423 iterations 215
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 659 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2816 rows 732 columns, reduced to 41 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -330.962 to -331.557 (1.20 seconds)
Cbc0038I Round again with cutoff of -332.069
Cbc0038I Reduced cost fixing fixed 131 variables on major pass 4
Cbc0038I Pass  35: suminf.    0.19726 (15) obj. -332.069 iterations 27
Cbc0038I Pass  36: suminf.    0.30000 (6) obj. -332.839 iterations 135
Cbc0038I Pass  37: suminf.    0.41612 (5) obj. -332.069 iterations 170
Cbc0038I Pass  38: suminf.    0.44218 (4) obj. -332.069 iterations 258
Cbc0038I Pass  39: suminf.    0.41612 (5) obj. -332.069 iterations 248
Cbc0038I Pass  40: suminf.    1.28026 (12) obj. -332.069 iterations 265
Cbc0038I Pass  41: suminf.    2.99239 (6) obj. -332.069 iterations 398
Cbc0038I Pass  42: suminf.    2.99239 (6) obj. -332.069 iterations 9
Cbc0038I Pass  43: suminf.    3.06749 (16) obj. -332.069 iterations 14
Cbc0038I Pass  44: suminf.    2.99239 (6) obj. -332.069 iterations 294
Cbc0038I Pass  45: suminf.    2.99239 (6) obj. -332.069 iterations 312
Cbc0038I Pass  46: suminf.    2.99239 (6) obj. -332.069 iterations 9
Cbc0038I Pass  47: suminf.    2.99239 (6) obj. -332.069 iterations 18
Cbc0038I Pass  48: suminf.    3.07637 (14) obj. -332.069 iterations 20
Cbc0038I Pass  49: suminf.    1.31879 (8) obj. -332.069 iterations 286
Cbc0038I Pass  50: suminf.    0.41612 (5) obj. -332.069 iterations 246
Cbc0038I Pass  51: suminf.    0.37500 (3) obj. -332.131 iterations 193
Cbc0038I Pass  52: suminf.    0.58845 (15) obj. -332.069 iterations 241
Cbc0038I Pass  53: suminf.    2.80059 (10) obj. -332.069 iterations 412
Cbc0038I Pass  54: suminf.    0.35735 (11) obj. -332.069 iterations 268
Cbc0038I Pass  55: suminf.    0.29121 (31) obj. -332.069 iterations 299
Cbc0038I Pass  56: suminf.    0.26915 (8) obj. -332.069 iterations 239
Cbc0038I Pass  57: suminf.    0.34615 (9) obj. -332.317 iterations 240
Cbc0038I Pass  58: suminf.    0.28779 (33) obj. -332.069 iterations 260
Cbc0038I Pass  59: suminf.    0.77058 (19) obj. -332.069 iterations 276
Cbc0038I Pass  60: suminf.    0.34699 (12) obj. -332.069 iterations 384
Cbc0038I Pass  61: suminf.    0.33003 (9) obj. -332.069 iterations 245
Cbc0038I Pass  62: suminf.    0.37371 (18) obj. -332.069 iterations 265
Cbc0038I Pass  63: suminf.    2.29050 (17) obj. -332.069 iterations 361
Cbc0038I Pass  64: suminf.    0.41612 (5) obj. -332.069 iterations 249
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 602 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2816 rows 732 columns, reduced to 41 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (1.36 seconds)
Cbc0038I After 1.36 seconds - Feasibility pump exiting with objective of -331.557 - took 0.37 seconds
Cbc0012I Integer solution of -331.55669 found by feasibility pump after 0 iterations and 0 nodes (1.36 seconds)
Cbc0038I Full problem 2816 rows 732 columns, reduced to 2 rows 4 columns
Cbc0031I 2 added rows had average density of 18
Cbc0013I At root node, 2 cuts changed objective from -333.26507 to -332.32982 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 41 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 168.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -331.55669 best solution, best possible -332.14131 (1.48 seconds)
Cbc0001I Search completed - best objective -331.556690668285, took 378 iterations and 4 nodes (1.55 seconds)
Cbc0032I Strong branching done 36 times (368 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 139 variables fixed on reduced cost
Cuts at root node changed objective from -333.265 to -332.141
Probing was tried 20 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 20 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 8 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                331.55669067
Enumerated nodes:               4
Total iterations:               378
Time (CPU seconds):             1.56
Time (Wallclock seconds):       1.82

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.13   (Wallclock seconds):       2.49

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/24537dcba0794bab9813d8fe1c0decf2-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/24537dcba0794bab9813d8fe1c0decf2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2297274 COLUMNS
At line 9195316 RHS
At line 11492586 BOUNDS
At line 11497870 ENDATA
Problem MODEL has 2297269 rows, 5283 columns and 2319565 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 496.301 - 2.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 626 strengthened rows, 300 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 579 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 163 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 75 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 8501 rows, 1880 columns (1880 integer (1879 of which binary)) and 24511 elements
Cbc0038I Initial state - 100 integers unsatisfied sum - 17.1154
Cbc0038I Pass   1: (5.79 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 1353
Cbc0038I Pass   2: (5.79 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 4
Cbc0038I Pass   3: (5.81 seconds) suminf.    0.00000 (0) obj. -417.489 iterations 291
Cbc0038I Solution found of -417.489
Cbc0038I Cleaned solution of -417.489
Cbc0038I Rounding solution of -422.133 is better than previous of -417.489

Cbc0038I Before mini branch and bound, 1775 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 51 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -422.133 to -481.773 (6.06 seconds)
Cbc0038I Round again with cutoff of -483.226
Cbc0038I Reduced cost fixing fixed 206 variables on major pass 2
Cbc0038I Pass   4: (6.07 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 0
Cbc0038I Pass   5: (6.08 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 2
Cbc0038I Pass   6: (6.14 seconds) suminf.    5.21179 (13) obj. -483.226 iterations 1396
Cbc0038I Pass   7: (6.15 seconds) suminf.    5.08011 (12) obj. -483.226 iterations 201
Cbc0038I Pass   8: (6.18 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 732
Cbc0038I Pass   9: (6.22 seconds) suminf.    1.33333 (8) obj. -485.287 iterations 761
Cbc0038I Pass  10: (6.24 seconds) suminf.    0.13117 (1) obj. -483.226 iterations 438
Cbc0038I Solution found of -483.226
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 8502 rows 1880 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -483.531
Cbc0038I Before mini branch and bound, 1753 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 54 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -483.531 to -484.095 (6.40 seconds)
Cbc0038I Round again with cutoff of -486.536
Cbc0038I Reduced cost fixing fixed 238 variables on major pass 3
Cbc0038I Pass  11: (6.42 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 0
Cbc0038I Pass  12: (6.42 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 9
Cbc0038I Pass  13: (6.48 seconds) suminf.    5.40751 (14) obj. -486.536 iterations 1316
Cbc0038I Pass  14: (6.53 seconds) suminf.    7.49680 (16) obj. -486.536 iterations 834
Cbc0038I Pass  15: (6.56 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 380
Cbc0038I Pass  16: (6.63 seconds) suminf.    5.64666 (15) obj. -486.536 iterations 1178
Cbc0038I Pass  17: (6.65 seconds) suminf.    5.03944 (12) obj. -486.536 iterations 370
Cbc0038I Pass  18: (6.68 seconds) suminf.    5.50000 (11) obj. -489.956 iterations 632
Cbc0038I Pass  19: (6.72 seconds) suminf.    6.33927 (18) obj. -486.536 iterations 734
Cbc0038I Pass  20: (6.75 seconds) suminf.    5.50000 (11) obj. -489.956 iterations 717
Cbc0038I Pass  21: (6.77 seconds) suminf.    4.37311 (21) obj. -486.536 iterations 385
Cbc0038I Pass  22: (6.79 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 363
Cbc0038I Pass  23: (6.80 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 5
Cbc0038I Pass  24: (6.88 seconds) suminf.    5.40751 (14) obj. -486.536 iterations 1091
Cbc0038I Pass  25: (6.93 seconds) suminf.    7.30061 (21) obj. -486.536 iterations 790
Cbc0038I Pass  26: (6.97 seconds) suminf.    5.52451 (12) obj. -486.536 iterations 780
Cbc0038I Pass  27: (7.00 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 677
Cbc0038I Pass  28: (7.02 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 335
Cbc0038I Pass  29: (7.04 seconds) suminf.    4.37555 (14) obj. -486.536 iterations 462
Cbc0038I Pass  30: (7.07 seconds) suminf.    2.05981 (12) obj. -486.536 iterations 487
Cbc0038I Pass  31: (7.14 seconds) suminf.    2.05981 (12) obj. -486.536 iterations 1127
Cbc0038I Pass  32: (7.17 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 1231
Cbc0038I Pass  33: (7.24 seconds) suminf.    5.40751 (14) obj. -486.536 iterations 1064
Cbc0038I Pass  34: (7.28 seconds) suminf.    5.87261 (20) obj. -486.536 iterations 780
Cbc0038I Pass  35: (7.30 seconds) suminf.    2.66667 (12) obj. -491.368 iterations 377
Cbc0038I Pass  36: (7.35 seconds) suminf.    6.15933 (14) obj. -486.536 iterations 749
Cbc0038I Pass  37: (7.38 seconds) suminf.    5.71156 (13) obj. -486.536 iterations 637
Cbc0038I Pass  38: (7.41 seconds) suminf.    5.52451 (12) obj. -486.536 iterations 468
Cbc0038I Pass  39: (7.44 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 680
Cbc0038I Pass  40: (7.45 seconds) suminf.    2.00000 (12) obj. -492.702 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1731 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 89 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -484.095 to -486.85 (7.70 seconds)
Cbc0038I Round again with cutoff of -489.685
Cbc0038I Reduced cost fixing fixed 298 variables on major pass 4
Cbc0038I Pass  40: (7.75 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 51
Cbc0038I Pass  41: (7.76 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 4
Cbc0038I Pass  42: (7.81 seconds) suminf.    3.75125 (9) obj. -489.685 iterations 950
Cbc0038I Pass  43: (7.86 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 846
Cbc0038I Pass  44: (7.90 seconds) suminf.    6.19222 (14) obj. -489.685 iterations 765
Cbc0038I Pass  45: (7.94 seconds) suminf.    3.75125 (9) obj. -489.685 iterations 656
Cbc0038I Pass  46: (7.96 seconds) suminf.    4.45619 (10) obj. -489.685 iterations 398
Cbc0038I Pass  47: (7.98 seconds) suminf.    4.45619 (10) obj. -489.685 iterations 256
Cbc0038I Pass  48: (8.01 seconds) suminf.    3.65292 (14) obj. -489.685 iterations 343
Cbc0038I Pass  49: (8.05 seconds) suminf.    3.65292 (14) obj. -489.685 iterations 184
Cbc0038I Pass  50: (8.06 seconds) suminf.    3.83596 (20) obj. -489.685 iterations 23
Cbc0038I Pass  51: (8.07 seconds) suminf.    3.65292 (14) obj. -489.685 iterations 23
Cbc0038I Pass  52: (8.11 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 1202
Cbc0038I Pass  53: (8.11 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 6
Cbc0038I Pass  54: (8.15 seconds) suminf.    3.75125 (9) obj. -489.685 iterations 877
Cbc0038I Pass  55: (8.18 seconds) suminf.    2.18182 (8) obj. -493.51 iterations 805
Cbc0038I Pass  56: (8.20 seconds) suminf.    2.90909 (8) obj. -492.446 iterations 402
Cbc0038I Pass  57: (8.21 seconds) suminf.    2.90909 (8) obj. -492.446 iterations 259
Cbc0038I Pass  58: (8.25 seconds) suminf.    3.87710 (9) obj. -489.685 iterations 854
Cbc0038I Pass  59: (8.29 seconds) suminf.    4.87725 (11) obj. -489.685 iterations 693
Cbc0038I Pass  60: (8.31 seconds) suminf.    3.87710 (9) obj. -489.685 iterations 358
Cbc0038I Pass  61: (8.33 seconds) suminf.    5.12945 (17) obj. -489.685 iterations 364
Cbc0038I Pass  62: (8.34 seconds) suminf.    3.87710 (9) obj. -489.685 iterations 273
Cbc0038I Pass  63: (8.36 seconds) suminf.    2.90909 (8) obj. -492.446 iterations 781
Cbc0038I Pass  64: (8.38 seconds) suminf.    3.05882 (13) obj. -493.992 iterations 245
Cbc0038I Pass  65: (8.39 seconds) suminf.    2.90909 (8) obj. -492.446 iterations 226
Cbc0038I Pass  66: (8.39 seconds) suminf.    3.36842 (16) obj. -492.783 iterations 229
Cbc0038I Pass  67: (8.42 seconds) suminf.    4.26347 (17) obj. -489.685 iterations 537
Cbc0038I Pass  68: (8.44 seconds) suminf.    3.75042 (9) obj. -489.685 iterations 419
Cbc0038I Pass  69: (8.48 seconds) suminf.    3.87710 (9) obj. -489.685 iterations 849
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1738 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 97 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -486.85 to -492.568 (8.58 seconds)
Cbc0038I Round again with cutoff of -493.688
Cbc0038I Reduced cost fixing fixed 372 variables on major pass 5
Cbc0038I Pass  69: (8.59 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 43
Cbc0038I Pass  70: (8.60 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 4
Cbc0038I Pass  71: (8.62 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 1224
Cbc0038I Pass  72: (8.63 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 43
Cbc0038I Pass  73: (8.64 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 33
Cbc0038I Pass  74: (8.65 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 269
Cbc0038I Pass  75: (8.67 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 292
Cbc0038I Pass  76: (8.67 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 22
Cbc0038I Pass  77: (8.68 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 25
Cbc0038I Pass  78: (8.69 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 26
Cbc0038I Pass  79: (8.69 seconds) suminf.    5.47471 (25) obj. -493.688 iterations 30
Cbc0038I Pass  80: (8.70 seconds) suminf.    5.47471 (25) obj. -493.688 iterations 49
Cbc0038I Pass  81: (8.71 seconds) suminf.    5.47471 (25) obj. -493.688 iterations 24
Cbc0038I Pass  82: (8.72 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 30
Cbc0038I Pass  83: (8.72 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 20
Cbc0038I Pass  84: (8.73 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 37
Cbc0038I Pass  85: (8.74 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 21
Cbc0038I Pass  86: (8.74 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 28
Cbc0038I Pass  87: (8.76 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 1015
Cbc0038I Pass  88: (8.78 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 1036
Cbc0038I Pass  89: (8.79 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 172
Cbc0038I Pass  90: (8.81 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 163
Cbc0038I Pass  91: (8.82 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 980
Cbc0038I Pass  92: (8.84 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 995
Cbc0038I Pass  93: (8.85 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 51
Cbc0038I Pass  94: (8.86 seconds) suminf.    5.47471 (25) obj. -493.688 iterations 88
Cbc0038I Pass  95: (8.87 seconds) suminf.    2.19900 (21) obj. -493.688 iterations 39
Cbc0038I Pass  96: (8.88 seconds) suminf.    2.34783 (43) obj. -493.688 iterations 15
Cbc0038I Pass  97: (8.88 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 23
Cbc0038I Pass  98: (8.89 seconds) suminf.    2.27900 (21) obj. -493.688 iterations 35
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1756 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 75 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (8.99 seconds)
Cbc0038I After 9.00 seconds - Feasibility pump exiting with objective of -492.568 - took 2.82 seconds
Cbc0012I Integer solution of -492.56771 found by feasibility pump after 0 iterations and 0 nodes (9.00 seconds)
Cbc0038I Full problem 8501 rows 1880 columns, reduced to 44 rows 21 columns
Cbc0031I 2 added rows had average density of 248
Cbc0013I At root node, 2 cuts changed objective from -496.30098 to -494.91206 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 474.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -492.56771 best solution, best possible -494.91206 (9.28 seconds)
Cbc0004I Integer solution of -492.59638 found after 846 iterations and 22 nodes (10.82 seconds)
Cbc0012I Integer solution of -493.44568 found by DiveCoefficient after 902 iterations and 26 nodes (11.13 seconds)
Cbc0001I Search completed - best objective -493.4456842296931, took 1231 iterations and 34 nodes (11.79 seconds)
Cbc0032I Strong branching done 358 times (5478 iterations), fathomed 12 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 572 variables fixed on reduced cost
Cuts at root node changed objective from -496.301 to -494.912
Probing was tried 30 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 2 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)

Result - Optimal solution found

Objective value:                493.44568423
Enumerated nodes:               34
Total iterations:               1231
Time (CPU seconds):             11.02
Time (Wallclock seconds):       14.24

Option for printingOptions changed from normal to all
Total time (CPU seconds):       14.49   (Wallclock seconds):       18.32

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f430f5b952484513b3eb9b606646917a-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f430f5b952484513b3eb9b606646917a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 552369 COLUMNS
At line 2212786 RHS
At line 2765151 BOUNDS
At line 2768075 ENDATA
Problem MODEL has 552364 rows, 2923 columns and 562669 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 386.342 - 0.70 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 137 strengthened rows, 220 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 3484 rows, 880 columns (880 integer (880 of which binary)) and 9495 elements
Cbc0038I Initial state - 32 integers unsatisfied sum - 14.2143
Cbc0038I Pass   1: (1.31 seconds) suminf.    1.40000 (14) obj. -385.057 iterations 600
Cbc0038I Pass   2: (1.31 seconds) suminf.    1.33333 (8) obj. -385.432 iterations 43
Cbc0038I Solution found of -345.551
Cbc0038I Rounding solution of -354.347 is better than previous of -345.551

Cbc0038I Before mini branch and bound, 831 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3484 rows 880 columns, reduced to 30 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -354.347 to -385.298 (1.38 seconds)
Cbc0038I Round again with cutoff of -385.402
Cbc0038I Reduced cost fixing fixed 178 variables on major pass 2
Cbc0038I Pass   3: (1.39 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 44
Cbc0038I Pass   4: (1.39 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 18
Cbc0038I Pass   5: (1.41 seconds) suminf.    4.19743 (27) obj. -385.402 iterations 767
Cbc0038I Pass   6: (1.42 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 471
Cbc0038I Pass   7: (1.42 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 247
Cbc0038I Pass   8: (1.42 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 150
Cbc0038I Pass   9: (1.44 seconds) suminf.    4.18896 (27) obj. -385.402 iterations 710
Cbc0038I Pass  10: (1.45 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 514
Cbc0038I Pass  11: (1.45 seconds) suminf.    2.72727 (10) obj. -385.847 iterations 287
Cbc0038I Pass  12: (1.45 seconds) suminf.    2.83867 (10) obj. -385.402 iterations 240
Cbc0038I Pass  13: (1.47 seconds) suminf.    5.26899 (15) obj. -385.402 iterations 717
Cbc0038I Pass  14: (1.47 seconds) suminf.    5.26899 (15) obj. -385.402 iterations 13
Cbc0038I Pass  15: (1.48 seconds) suminf.    2.72727 (10) obj. -385.847 iterations 531
Cbc0038I Pass  16: (1.49 seconds) suminf.    2.72855 (19) obj. -385.402 iterations 309
Cbc0038I Pass  17: (1.49 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 252
Cbc0038I Pass  18: (1.51 seconds) suminf.    4.19743 (27) obj. -385.402 iterations 653
Cbc0038I Pass  19: (1.51 seconds) suminf.    2.95326 (23) obj. -385.402 iterations 243
Cbc0038I Pass  20: (1.52 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 353
Cbc0038I Pass  21: (1.53 seconds) suminf.    4.18896 (27) obj. -385.402 iterations 661
Cbc0038I Pass  22: (1.54 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 508
Cbc0038I Pass  23: (1.54 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 239
Cbc0038I Pass  24: (1.55 seconds) suminf.    2.72727 (10) obj. -385.847 iterations 230
Cbc0038I Pass  25: (1.55 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 227
Cbc0038I Pass  26: (1.55 seconds) suminf.    2.34261 (20) obj. -385.402 iterations 281
Cbc0038I Pass  27: (1.56 seconds) suminf.    1.42857 (15) obj. -386.297 iterations 231
Cbc0038I Pass  28: (1.56 seconds) suminf.    2.14286 (15) obj. -386.064 iterations 207
Cbc0038I Pass  29: (1.57 seconds) suminf.    3.66880 (22) obj. -385.402 iterations 360
Cbc0038I Pass  30: (1.57 seconds) suminf.    2.65014 (15) obj. -385.402 iterations 232
Cbc0038I Pass  31: (1.58 seconds) suminf.    1.81818 (10) obj. -386.153 iterations 303
Cbc0038I Pass  32: (1.58 seconds) suminf.    1.81818 (10) obj. -386.153 iterations 210
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 799 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3484 rows 880 columns, reduced to 30 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (1.60 seconds)
Cbc0038I After 1.60 seconds - Feasibility pump exiting with objective of -385.298 - took 0.26 seconds
Cbc0012I Integer solution of -385.29782 found by feasibility pump after 0 iterations and 0 nodes (1.60 seconds)
Cbc0038I Full problem 3484 rows 880 columns, reduced to 10 rows 6 columns
Cbc0031I 3 added rows had average density of 10.333333
Cbc0013I At root node, 5 cuts changed objective from -386.34219 to -385.20451 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 201.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -385.2978201075309, took 0 iterations and 0 nodes (1.66 seconds)
Cbc0035I Maximum depth 0, 176 variables fixed on reduced cost
Cuts at root node changed objective from -386.342 to -385.205
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                385.29782011
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.68
Time (Wallclock seconds):       2.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.52   (Wallclock seconds):       2.99

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/561bce49091e4fa187ac69d489a0454d-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/561bce49091e4fa187ac69d489a0454d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 226372 COLUMNS
At line 907569 RHS
At line 1133937 BOUNDS
At line 1135772 ENDATA
Problem MODEL has 226367 rows, 1834 columns and 232404 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 320.763 - 0.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 308 substitutions
Cgl0004I processed model has 1936 rows, 534 columns (534 integer (533 of which binary)) and 5127 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    2.72727 (10) obj. -317.712 iterations 323
Cbc0038I Solution found of -261.165
Cbc0038I Cleaned solution of -261.165
Cbc0038I Rounding solution of -268.131 is better than previous of -261.165

Cbc0038I Before mini branch and bound, 508 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1936 rows 534 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
Cbc0038I Round again with cutoff of -273.394
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.72727 (10) obj. -317.712 iterations 0
Cbc0038I Pass   3: suminf.    0.49393 (4) obj. -273.394 iterations 360
Cbc0038I Pass   4: suminf.    0.63158 (4) obj. -297.059 iterations 152
Cbc0038I Pass   5: suminf.    3.80677 (46) obj. -273.394 iterations 211
Cbc0038I Pass   6: suminf.    0.11046 (4) obj. -273.394 iterations 320
Cbc0038I Pass   7: suminf.    1.07692 (4) obj. -276.259 iterations 142
Cbc0038I Pass   8: suminf.   11.36953 (32) obj. -273.394 iterations 164
Cbc0038I Pass   9: suminf.    3.61168 (15) obj. -273.394 iterations 193
Cbc0038I Pass  10: suminf.    1.26316 (4) obj. -293.325 iterations 132
Cbc0038I Solution found of -279.864
Cbc0038I Cleaned solution of -279.864
Cbc0038I Rounding solution of -286.83 is better than previous of -279.864

Cbc0038I Before mini branch and bound, 429 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1936 rows 534 columns, reduced to 165 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -286.83 to -314.432 (0.35 seconds)
Cbc0038I Round again with cutoff of -315.698
Cbc0038I Reduced cost fixing fixed 67 variables on major pass 3
Cbc0038I Pass  11: suminf.    2.72727 (10) obj. -317.712 iterations 0
Cbc0038I Pass  12: suminf.    3.82123 (11) obj. -315.698 iterations 286
Cbc0038I Pass  13: suminf.    4.11458 (26) obj. -315.698 iterations 93
Cbc0038I Pass  14: suminf.    4.11458 (26) obj. -315.698 iterations 198
Cbc0038I Pass  15: suminf.   10.35746 (27) obj. -315.698 iterations 156
Cbc0038I Pass  16: suminf.   10.26633 (28) obj. -315.698 iterations 128
Cbc0038I Pass  17: suminf.    7.89816 (16) obj. -315.698 iterations 282
Cbc0038I Pass  18: suminf.    7.81035 (22) obj. -315.698 iterations 278
Cbc0038I Pass  19: suminf.    5.93211 (27) obj. -315.698 iterations 188
Cbc0038I Pass  20: suminf.    5.93211 (27) obj. -315.698 iterations 2
Cbc0038I Pass  21: suminf.    4.11458 (26) obj. -315.698 iterations 240
Cbc0038I Pass  22: suminf.    4.11458 (26) obj. -315.698 iterations 282
Cbc0038I Pass  23: suminf.    4.11458 (26) obj. -315.698 iterations 294
Cbc0038I Pass  24: suminf.    6.08185 (20) obj. -315.698 iterations 312
Cbc0038I Pass  25: suminf.    0.45455 (10) obj. -319.171 iterations 116
Cbc0038I Pass  26: suminf.    1.89172 (11) obj. -315.698 iterations 207
Cbc0038I Pass  27: suminf.    0.66667 (2) obj. -319.931 iterations 251
Cbc0038I Pass  28: suminf.    0.43297 (1) obj. -315.698 iterations 203
Cbc0038I Solution found of -315.698
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1937 rows 534 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -319.025
Cbc0038I Before mini branch and bound, 478 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1936 rows 534 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I Round again with cutoff of -319.547
Cbc0038I Reduced cost fixing fixed 102 variables on major pass 4
Cbc0038I Pass  29: suminf.    3.00000 (16) obj. -320.763 iterations 8
Cbc0038I Pass  30: suminf.    4.13538 (17) obj. -319.547 iterations 348
Cbc0038I Pass  31: suminf.    3.64286 (17) obj. -320.28 iterations 255
Cbc0038I Pass  32: suminf.    4.50000 (16) obj. -320.011 iterations 155
Cbc0038I Pass  33: suminf.    4.50000 (16) obj. -320.011 iterations 112
Cbc0038I Pass  34: suminf.    5.17017 (17) obj. -319.547 iterations 152
Cbc0038I Pass  35: suminf.    5.17017 (17) obj. -319.547 iterations 133
Cbc0038I Pass  36: suminf.    4.50000 (16) obj. -320.011 iterations 183
Cbc0038I Pass  37: suminf.    4.48886 (18) obj. -319.547 iterations 179
Cbc0038I Pass  38: suminf.    4.50000 (16) obj. -320.011 iterations 144
Cbc0038I Pass  39: suminf.    6.68120 (17) obj. -319.547 iterations 476
Cbc0038I Pass  40: suminf.    6.50000 (16) obj. -319.868 iterations 146
Cbc0038I Pass  41: suminf.    7.18495 (17) obj. -319.547 iterations 304
Cbc0038I Pass  42: suminf.    7.01866 (17) obj. -319.547 iterations 192
Cbc0038I Pass  43: suminf.    6.88466 (17) obj. -319.547 iterations 209
Cbc0038I Pass  44: suminf.    5.00000 (16) obj. -320.621 iterations 248
Cbc0038I Pass  45: suminf.    6.23689 (17) obj. -319.547 iterations 306
Cbc0038I Pass  46: suminf.    5.60564 (17) obj. -319.547 iterations 140
Cbc0038I Pass  47: suminf.    7.73025 (21) obj. -319.547 iterations 172
Cbc0038I Pass  48: suminf.    4.50000 (16) obj. -320.011 iterations 136
Cbc0038I Pass  49: suminf.    5.17017 (17) obj. -319.547 iterations 296
Cbc0038I Pass  50: suminf.    4.83983 (18) obj. -319.547 iterations 213
Cbc0038I Pass  51: suminf.    5.24254 (17) obj. -319.547 iterations 106
Cbc0038I Pass  52: suminf.    5.17017 (17) obj. -319.547 iterations 234
Cbc0038I Pass  53: suminf.    3.00000 (16) obj. -320.763 iterations 238
Cbc0038I Pass  54: suminf.    3.00000 (16) obj. -320.763 iterations 113
Cbc0038I Pass  55: suminf.    4.13538 (17) obj. -319.547 iterations 298
Cbc0038I Pass  56: suminf.    3.00000 (16) obj. -320.763 iterations 261
Cbc0038I Pass  57: suminf.    4.13538 (17) obj. -319.547 iterations 204
Cbc0038I Pass  58: suminf.    4.48886 (18) obj. -319.547 iterations 259
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 507 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1936 rows 534 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.52 seconds)
Cbc0038I After 0.52 seconds - Feasibility pump exiting with objective of -319.025 - took 0.24 seconds
Cbc0012I Integer solution of -319.02523 found by feasibility pump after 0 iterations and 0 nodes (0.52 seconds)
Cbc0038I Full problem 1936 rows 534 columns, reduced to 1 rows 3 columns
Cbc0031I 6 added rows had average density of 11.333333
Cbc0013I At root node, 6 cuts changed objective from -320.76338 to -319.34047 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 39 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0016I Integer solution of -319.29417 found by strong branching after 108 iterations and 0 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -319.2941740294139, took 124 iterations and 0 nodes (0.62 seconds)
Cbc0032I Strong branching done 2 times (22 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 101 variables fixed on reduced cost
Cuts at root node changed objective from -320.763 to -319.199
Probing was tried 12 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 12 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 12 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 12 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                319.29417403
Enumerated nodes:               0
Total iterations:               124
Time (CPU seconds):             0.67
Time (Wallclock seconds):       0.76

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.13

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b145ae0891ed4d70a92a57af99613eca-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b145ae0891ed4d70a92a57af99613eca-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 364236 COLUMNS
At line 1459567 RHS
At line 1823799 BOUNDS
At line 1826100 ENDATA
Problem MODEL has 364231 rows, 2300 columns and 372106 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 316.283 - 0.52 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 262 substitutions
Cgl0004I processed model has 2694 rows, 726 columns (726 integer (726 of which binary)) and 7137 elements
Cbc0038I Initial state - 38 integers unsatisfied sum - 17.4167
Cbc0038I Pass   1: suminf.    0.76471 (26) obj. -314.951 iterations 518
Cbc0038I Pass   2: suminf.    0.50000 (7) obj. -314.873 iterations 67
Cbc0038I Solution found of -272.835
Cbc0038I Before mini branch and bound, 676 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2694 rows 726 columns, reduced to 25 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -272.835 to -307.327 (0.90 seconds)
Cbc0038I Round again with cutoff of -308.223
Cbc0038I Reduced cost fixing fixed 47 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.76471 (26) obj. -314.951 iterations 0
Cbc0038I Pass   4: suminf.    0.50000 (7) obj. -314.873 iterations 59
Cbc0038I Pass   5: suminf.    3.45861 (12) obj. -308.223 iterations 277
Cbc0038I Pass   6: suminf.    3.74015 (10) obj. -308.223 iterations 500
Cbc0038I Pass   7: suminf.    2.98281 (12) obj. -308.223 iterations 202
Cbc0038I Pass   8: suminf.    3.50000 (7) obj. -310.28 iterations 179
Cbc0038I Pass   9: suminf.    3.50000 (7) obj. -310.28 iterations 207
Cbc0038I Pass  10: suminf.    3.50000 (7) obj. -310.28 iterations 247
Cbc0038I Pass  11: suminf.    3.50000 (7) obj. -310.28 iterations 159
Cbc0038I Pass  12: suminf.    4.58333 (11) obj. -311.418 iterations 166
Cbc0038I Pass  13: suminf.    1.54963 (15) obj. -308.223 iterations 286
Cbc0038I Pass  14: suminf.    1.76471 (12) obj. -308.999 iterations 167
Cbc0038I Pass  15: suminf.    4.08608 (17) obj. -308.223 iterations 477
Cbc0038I Pass  16: suminf.    4.05536 (20) obj. -308.223 iterations 369
Cbc0038I Pass  17: suminf.    5.31070 (20) obj. -308.223 iterations 266
Cbc0038I Pass  18: suminf.    8.45748 (21) obj. -308.223 iterations 382
Cbc0038I Solution found of -309.683
Cbc0038I Before mini branch and bound, 589 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2694 rows 726 columns, reduced to 77 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -309.683 to -312.417 (1.00 seconds)
Cbc0038I Round again with cutoff of -313.19
Cbc0038I Reduced cost fixing fixed 79 variables on major pass 3
Cbc0038I Pass  19: suminf.    1.12000 (28) obj. -315.213 iterations 21
Cbc0038I Pass  20: suminf.    0.50000 (7) obj. -314.873 iterations 39
Cbc0038I Pass  21: suminf.    1.24862 (12) obj. -313.19 iterations 256
Cbc0038I Pass  22: suminf.    2.04505 (15) obj. -313.19 iterations 323
Cbc0038I Pass  23: suminf.    0.50000 (7) obj. -314.873 iterations 224
Cbc0038I Pass  24: suminf.    0.50000 (7) obj. -314.873 iterations 202
Cbc0038I Pass  25: suminf.    0.85714 (6) obj. -315.205 iterations 199
Cbc0038I Pass  26: suminf.    0.50000 (7) obj. -314.873 iterations 251
Cbc0038I Pass  27: suminf.    0.50000 (7) obj. -314.873 iterations 226
Cbc0038I Pass  28: suminf.    1.45244 (6) obj. -313.19 iterations 368
Cbc0038I Pass  29: suminf.    2.66122 (10) obj. -313.19 iterations 259
Cbc0038I Pass  30: suminf.    2.92902 (11) obj. -313.19 iterations 378
Cbc0038I Pass  31: suminf.    2.92902 (11) obj. -313.19 iterations 249
Cbc0038I Pass  32: suminf.    3.30884 (30) obj. -313.19 iterations 170
Cbc0038I Pass  33: suminf.    2.88000 (12) obj. -314.756 iterations 329
Cbc0038I Pass  34: suminf.    2.14552 (16) obj. -313.19 iterations 294
Cbc0038I Pass  35: suminf.    2.57143 (6) obj. -314.687 iterations 191
Cbc0038I Pass  36: suminf.    3.17036 (18) obj. -313.19 iterations 197
Cbc0038I Pass  37: suminf.    2.91087 (12) obj. -313.19 iterations 386
Cbc0038I Pass  38: suminf.    2.76644 (12) obj. -313.19 iterations 226
Cbc0038I Pass  39: suminf.    3.08215 (16) obj. -313.19 iterations 363
Cbc0038I Pass  40: suminf.    1.97641 (12) obj. -313.19 iterations 513
Cbc0038I Pass  41: suminf.    1.89980 (9) obj. -313.19 iterations 12
Cbc0038I Pass  42: suminf.    3.00000 (6) obj. -315.043 iterations 450
Cbc0038I Pass  43: suminf.    3.00000 (6) obj. -315.043 iterations 140
Cbc0038I Pass  44: suminf.    3.00000 (6) obj. -315.043 iterations 131
Cbc0038I Pass  45: suminf.    2.37857 (11) obj. -313.19 iterations 140
Cbc0038I Pass  46: suminf.    2.14552 (16) obj. -313.19 iterations 153
Cbc0038I Pass  47: suminf.    2.57143 (6) obj. -314.687 iterations 187
Cbc0038I Pass  48: suminf.    2.80322 (11) obj. -313.19 iterations 460
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 596 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2694 rows 726 columns, reduced to 56 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -312.417 to -314.516 (1.17 seconds)
Cbc0038I Round again with cutoff of -315.046
Cbc0038I Reduced cost fixing fixed 104 variables on major pass 4
Cbc0038I Pass  48: suminf.    2.00000 (32) obj. -315.257 iterations 35
Cbc0038I Pass  49: suminf.    0.85714 (6) obj. -315.205 iterations 24
Cbc0038I Pass  50: suminf.    3.03535 (40) obj. -315.046 iterations 630
Cbc0038I Pass  51: suminf.    3.03535 (40) obj. -315.046 iterations 2
Cbc0038I Pass  52: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  53: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  54: suminf.    3.03535 (40) obj. -315.046 iterations 2
Cbc0038I Pass  55: suminf.    0.85714 (6) obj. -315.205 iterations 688
Cbc0038I Pass  56: suminf.    3.03535 (40) obj. -315.046 iterations 652
Cbc0038I Pass  57: suminf.    3.03535 (40) obj. -315.046 iterations 2
Cbc0038I Pass  58: suminf.    3.03535 (40) obj. -315.046 iterations 3
Cbc0038I Pass  59: suminf.    3.03535 (40) obj. -315.046 iterations 4
Cbc0038I Pass  60: suminf.    3.03535 (40) obj. -315.046 iterations 3
Cbc0038I Pass  61: suminf.    3.03535 (40) obj. -315.046 iterations 3
Cbc0038I Pass  62: suminf.    4.13936 (36) obj. -315.046 iterations 3
Cbc0038I Pass  63: suminf.    4.13936 (36) obj. -315.046 iterations 3
Cbc0038I Pass  64: suminf.    4.13936 (36) obj. -315.046 iterations 2
Cbc0038I Pass  65: suminf.    3.03535 (40) obj. -315.046 iterations 6
Cbc0038I Pass  66: suminf.    3.03535 (40) obj. -315.046 iterations 3
Cbc0038I Pass  67: suminf.    3.03535 (40) obj. -315.046 iterations 3
Cbc0038I Pass  68: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  69: suminf.    3.03535 (40) obj. -315.046 iterations 2
Cbc0038I Pass  70: suminf.    3.03535 (40) obj. -315.046 iterations 4
Cbc0038I Pass  71: suminf.    3.04201 (39) obj. -315.046 iterations 5
Cbc0038I Pass  72: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  73: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  74: suminf.    3.03535 (40) obj. -315.046 iterations 0
Cbc0038I Pass  75: suminf.    3.03535 (40) obj. -315.046 iterations 2
Cbc0038I Pass  76: suminf.    3.03535 (40) obj. -315.046 iterations 1
Cbc0038I Pass  77: suminf.    4.13936 (36) obj. -315.046 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 677 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2694 rows 726 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (1.27 seconds)
Cbc0038I After 1.27 seconds - Feasibility pump exiting with objective of -314.516 - took 0.41 seconds
Cbc0012I Integer solution of -314.51633 found by feasibility pump after 0 iterations and 0 nodes (1.27 seconds)
Cbc0038I Full problem 2694 rows 726 columns, reduced to 14 rows 9 columns
Cbc0031I 5 added rows had average density of 27.6
Cbc0013I At root node, 5 cuts changed objective from -316.28341 to -314.99214 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 63 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 170.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -314.51633 best solution, best possible -314.99214 (1.40 seconds)
Cbc0001I Search completed - best objective -314.5163287649181, took 699 iterations and 6 nodes (1.61 seconds)
Cbc0032I Strong branching done 80 times (2663 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 111 variables fixed on reduced cost
Cuts at root node changed objective from -316.283 to -314.992
Probing was tried 17 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 17 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 9 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                314.51632876
Enumerated nodes:               6
Total iterations:               699
Time (CPU seconds):             1.67
Time (Wallclock seconds):       1.86

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.20   (Wallclock seconds):       2.47

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/75aad650b7074cf68a3dd1343d2c45df-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/75aad650b7074cf68a3dd1343d2c45df-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 647298 COLUMNS
At line 2592695 RHS
At line 3239989 BOUNDS
At line 3243056 ENDATA
Problem MODEL has 647293 rows, 3066 columns and 658137 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 428.713 - 0.79 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 118 strengthened rows, 206 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 71 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 3612 rows, 890 columns (890 integer (890 of which binary)) and 9920 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.2
Cbc0038I Pass   1: (1.70 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 544
Cbc0038I Solution found of -339.413
Cbc0038I Rounding solution of -349.379 is better than previous of -339.413

Cbc0038I Before mini branch and bound, 859 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3612 rows 890 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -349.379 to -373.787 (1.76 seconds)
Cbc0038I Round again with cutoff of -379.28
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: (1.76 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 0
Cbc0038I Pass   3: (1.79 seconds) suminf.    2.80642 (15) obj. -379.28 iterations 640
Cbc0038I Pass   4: (1.79 seconds) suminf.    0.29630 (4) obj. -385.742 iterations 242
Cbc0038I Solution found of -381.122
Cbc0038I Before mini branch and bound, 844 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3612 rows 890 columns, reduced to 39 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -381.122 to -389.432 (1.82 seconds)
Cbc0038I Round again with cutoff of -397.288
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass   5: (1.82 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 0
Cbc0038I Pass   6: (1.84 seconds) suminf.    4.70770 (44) obj. -397.288 iterations 558
Cbc0038I Pass   7: (1.85 seconds) suminf.    7.32558 (15) obj. -409.762 iterations 238
Cbc0038I Pass   8: (1.85 seconds) suminf.    7.32558 (15) obj. -409.762 iterations 31
Cbc0038I Pass   9: (1.85 seconds) suminf.    7.96552 (22) obj. -406.902 iterations 166
Cbc0038I Pass  10: (1.86 seconds) suminf.    7.32558 (15) obj. -409.762 iterations 144
Cbc0038I Pass  11: (1.86 seconds) suminf.    2.09302 (15) obj. -397.853 iterations 200
Cbc0038I Pass  12: (1.87 seconds) suminf.    2.09302 (15) obj. -397.853 iterations 153
Cbc0038I Pass  13: (1.88 seconds) suminf.    4.54483 (22) obj. -397.288 iterations 320
Cbc0038I Pass  14: (1.88 seconds) suminf.    0.75000 (4) obj. -408.217 iterations 238
Cbc0038I Pass  15: (1.89 seconds) suminf.    1.92493 (15) obj. -397.288 iterations 303
Cbc0038I Pass  16: (1.90 seconds) suminf.    2.80000 (8) obj. -397.387 iterations 286
Cbc0038I Pass  17: (1.91 seconds) suminf.    2.80000 (8) obj. -397.387 iterations 3
Cbc0038I Pass  18: (1.91 seconds) suminf.    2.80097 (18) obj. -397.288 iterations 204
Cbc0038I Pass  19: (1.92 seconds) suminf.    2.80000 (8) obj. -397.387 iterations 163
Cbc0038I Pass  20: (1.92 seconds) suminf.    2.80097 (18) obj. -397.288 iterations 206
Cbc0038I Pass  21: (1.94 seconds) suminf.    0.38571 (37) obj. -405.975 iterations 647
Cbc0038I Solution found of -403.238
Cbc0038I Before mini branch and bound, 767 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3612 rows 890 columns, reduced to 168 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -403.238 to -424.564 (1.97 seconds)
Cbc0038I Round again with cutoff of -425.809
Cbc0038I Reduced cost fixing fixed 149 variables on major pass 4
Cbc0038I Pass  22: (1.97 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 0
Cbc0038I Pass  23: (1.98 seconds) suminf.    4.39099 (20) obj. -425.809 iterations 187
Cbc0038I Pass  24: (1.99 seconds) suminf.    4.74805 (19) obj. -425.809 iterations 321
Cbc0038I Pass  25: (1.99 seconds) suminf.    3.91049 (25) obj. -425.809 iterations 337
Cbc0038I Pass  26: (2.00 seconds) suminf.    2.94457 (10) obj. -425.809 iterations 26
Cbc0038I Pass  27: (2.00 seconds) suminf.    2.94457 (10) obj. -425.809 iterations 21
Cbc0038I Pass  28: (2.01 seconds) suminf.    3.48328 (10) obj. -425.809 iterations 524
Cbc0038I Pass  29: (2.03 seconds) suminf.    2.90565 (18) obj. -425.809 iterations 716
Cbc0038I Pass  30: (2.04 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 554
Cbc0038I Pass  31: (2.04 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 13
Cbc0038I Pass  32: (2.06 seconds) suminf.    7.82329 (21) obj. -425.809 iterations 671
Cbc0038I Pass  33: (2.08 seconds) suminf.    1.35616 (14) obj. -425.809 iterations 788
Cbc0038I Pass  34: (2.08 seconds) suminf.    1.66667 (10) obj. -427.415 iterations 218
Cbc0038I Pass  35: (2.09 seconds) suminf.    1.97867 (17) obj. -425.809 iterations 427
Cbc0038I Pass  36: (2.10 seconds) suminf.    2.70560 (12) obj. -425.809 iterations 272
Cbc0038I Pass  37: (2.11 seconds) suminf.    2.02882 (22) obj. -425.809 iterations 406
Cbc0038I Pass  38: (2.12 seconds) suminf.    1.35616 (14) obj. -425.809 iterations 374
Cbc0038I Pass  39: (2.13 seconds) suminf.    2.55513 (18) obj. -425.809 iterations 134
Cbc0038I Pass  40: (2.13 seconds) suminf.    3.07178 (16) obj. -425.809 iterations 231
Cbc0038I Pass  41: (2.14 seconds) suminf.    2.95481 (17) obj. -425.809 iterations 36
Cbc0038I Pass  42: (2.14 seconds) suminf.    3.07178 (16) obj. -425.809 iterations 33
Cbc0038I Pass  43: (2.14 seconds) suminf.    3.07178 (16) obj. -425.809 iterations 17
Cbc0038I Pass  44: (2.15 seconds) suminf.    1.67964 (18) obj. -425.809 iterations 266
Cbc0038I Pass  45: (2.16 seconds) suminf.    1.70829 (17) obj. -425.809 iterations 262
Cbc0038I Pass  46: (2.17 seconds) suminf.    1.48966 (10) obj. -425.809 iterations 656
Cbc0038I Pass  47: (2.19 seconds) suminf.    1.35616 (14) obj. -425.809 iterations 531
Cbc0038I Pass  48: (2.19 seconds) suminf.    1.70829 (17) obj. -425.809 iterations 158
Cbc0038I Pass  49: (2.20 seconds) suminf.    1.87630 (19) obj. -425.809 iterations 171
Cbc0038I Pass  50: (2.21 seconds) suminf.    2.16911 (19) obj. -425.809 iterations 269
Cbc0038I Pass  51: (2.22 seconds) suminf.    2.61038 (17) obj. -425.809 iterations 518
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 760 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3612 rows 890 columns, reduced to 60 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -424.564 to -425.039 (2.24 seconds)
Cbc0038I Round again with cutoff of -426.68
Cbc0038I Reduced cost fixing fixed 162 variables on major pass 5
Cbc0038I Pass  51: (2.25 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 0
Cbc0038I Pass  52: (2.26 seconds) suminf.    6.56309 (20) obj. -426.68 iterations 516
Cbc0038I Pass  53: (2.27 seconds) suminf.    4.65727 (17) obj. -426.68 iterations 392
Cbc0038I Pass  54: (2.28 seconds) suminf.    2.43669 (13) obj. -426.68 iterations 220
Cbc0038I Pass  55: (2.29 seconds) suminf.    5.54596 (20) obj. -426.68 iterations 798
Cbc0038I Pass  56: (2.30 seconds) suminf.    2.62276 (10) obj. -426.68 iterations 349
Cbc0038I Pass  57: (2.31 seconds) suminf.    6.15398 (22) obj. -426.68 iterations 445
Cbc0038I Pass  58: (2.31 seconds) suminf.    6.15398 (22) obj. -426.68 iterations 13
Cbc0038I Pass  59: (2.33 seconds) suminf.    5.20000 (13) obj. -428.302 iterations 591
Cbc0038I Pass  60: (2.33 seconds) suminf.    3.64286 (17) obj. -428.072 iterations 24
Cbc0038I Pass  61: (2.34 seconds) suminf.    4.10221 (20) obj. -426.68 iterations 206
Cbc0038I Pass  62: (2.35 seconds) suminf.    3.58341 (29) obj. -426.68 iterations 509
Cbc0038I Pass  63: (2.35 seconds) suminf.    2.43669 (13) obj. -426.68 iterations 167
Cbc0038I Pass  64: (2.37 seconds) suminf.    5.54596 (20) obj. -426.68 iterations 769
Cbc0038I Pass  65: (2.38 seconds) suminf.    6.11681 (24) obj. -426.68 iterations 287
Cbc0038I Pass  66: (2.38 seconds) suminf.    5.54596 (20) obj. -426.68 iterations 281
Cbc0038I Pass  67: (2.39 seconds) suminf.    5.54596 (20) obj. -426.68 iterations 148
Cbc0038I Pass  68: (2.39 seconds) suminf.    4.63932 (17) obj. -426.68 iterations 266
Cbc0038I Pass  69: (2.40 seconds) suminf.    4.63932 (17) obj. -426.68 iterations 387
Cbc0038I Pass  70: (2.40 seconds) suminf.    4.63932 (17) obj. -426.68 iterations 67
Cbc0038I Pass  71: (2.42 seconds) suminf.    2.68404 (10) obj. -426.68 iterations 556
Cbc0038I Pass  72: (2.43 seconds) suminf.    2.43917 (17) obj. -426.68 iterations 369
Cbc0038I Pass  73: (2.43 seconds) suminf.    2.91410 (11) obj. -426.68 iterations 309
Cbc0038I Pass  74: (2.44 seconds) suminf.    3.07692 (10) obj. -427.706 iterations 339
Cbc0038I Pass  75: (2.46 seconds) suminf.    7.64635 (23) obj. -426.68 iterations 752
Cbc0038I Pass  76: (2.46 seconds) suminf.    5.93411 (16) obj. -426.68 iterations 20
Cbc0038I Pass  77: (2.46 seconds) suminf.    6.67581 (18) obj. -426.68 iterations 218
Cbc0038I Pass  78: (2.47 seconds) suminf.    2.02201 (18) obj. -426.68 iterations 292
Cbc0038I Pass  79: (2.49 seconds) suminf.    0.23967 (4) obj. -426.68 iterations 662
Cbc0038I Pass  80: (2.49 seconds) suminf.    0.25000 (4) obj. -426.8 iterations 131
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 782 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3612 rows 890 columns, reduced to 53 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (2.51 seconds)
Cbc0038I After 2.52 seconds - Feasibility pump exiting with objective of -425.039 - took 0.79 seconds
Cbc0012I Integer solution of -425.03895 found by feasibility pump after 0 iterations and 0 nodes (2.52 seconds)
Cbc0038I Full problem 3612 rows 890 columns, reduced to 2 rows 2 columns
Cbc0031I 4 added rows had average density of 39.5
Cbc0013I At root node, 4 cuts changed objective from -428.71259 to -426.73148 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 41 row cuts average 49.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -425.03895 best solution, best possible -426.73148 (2.70 seconds)
Cbc0016I Integer solution of -426.06228 found by strong branching after 865 iterations and 21 nodes (3.03 seconds)
Cbc0001I Search completed - best objective -426.062275677785, took 923 iterations and 24 nodes (3.04 seconds)
Cbc0032I Strong branching done 262 times (2167 iterations), fathomed 6 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 209 variables fixed on reduced cost
Cuts at root node changed objective from -428.713 to -426.731
Probing was tried 35 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 34 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 9 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                426.06227568
Enumerated nodes:               24
Total iterations:               923
Time (CPU seconds):             2.97
Time (Wallclock seconds):       3.48

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.99   (Wallclock seconds):       4.62

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ef9a3828046b4f44ba217998375a6dd8-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ef9a3828046b4f44ba217998375a6dd8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 624916 COLUMNS
At line 2503051 RHS
At line 3127963 BOUNDS
At line 3130910 ENDATA
Problem MODEL has 624911 rows, 2946 columns and 635655 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 387.183 - 0.76 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 292 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 3769 rows, 946 columns (946 integer (946 of which binary)) and 10121 elements
Cbc0038I Initial state - 28 integers unsatisfied sum - 12.087
Cbc0038I Solution found of -377.207
Cbc0038I Before mini branch and bound, 918 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 946 columns, reduced to 7 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (1.44 seconds)
Cbc0038I Round again with cutoff of -378.205
Cbc0038I Reduced cost fixing fixed 112 variables on major pass 2
Cbc0038I Pass   1: (1.46 seconds) suminf.    0.09747 (8) obj. -378.205 iterations 796
Cbc0038I Pass   2: (1.46 seconds) suminf.    0.09747 (8) obj. -378.205 iterations 9
Cbc0038I Pass   3: (1.46 seconds) suminf.    0.69565 (8) obj. -384.327 iterations 136
Cbc0038I Pass   4: (1.47 seconds) suminf.    3.98607 (13) obj. -378.205 iterations 338
Cbc0038I Pass   5: (1.48 seconds) suminf.    2.99703 (8) obj. -378.205 iterations 346
Cbc0038I Pass   6: (1.48 seconds) suminf.    3.47826 (8) obj. -383.13 iterations 141
Cbc0038I Pass   7: (1.49 seconds) suminf.    5.83333 (14) obj. -380.12 iterations 286
Cbc0038I Pass   8: (1.50 seconds) suminf.    5.83333 (14) obj. -380.12 iterations 315
Cbc0038I Pass   9: (1.50 seconds) suminf.    7.00894 (29) obj. -378.205 iterations 298
Cbc0038I Pass  10: (1.51 seconds) suminf.    1.90197 (11) obj. -378.205 iterations 503
Cbc0038I Pass  11: (1.52 seconds) suminf.    0.97844 (8) obj. -378.205 iterations 463
Cbc0038I Pass  12: (1.53 seconds) suminf.    1.39130 (8) obj. -382.43 iterations 132
Cbc0038I Pass  13: (1.53 seconds) suminf.    3.75076 (17) obj. -378.205 iterations 217
Cbc0038I Solution found of -382.286
Cbc0038I Before mini branch and bound, 862 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 946 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (1.56 seconds)
Cbc0038I Round again with cutoff of -383.265
Cbc0038I Reduced cost fixing fixed 163 variables on major pass 3
Cbc0038I Pass  14: (1.56 seconds) suminf.    0.59190 (8) obj. -383.265 iterations 0
Cbc0038I Pass  15: (1.57 seconds) suminf.    0.59190 (8) obj. -383.265 iterations 10
Cbc0038I Pass  16: (1.57 seconds) suminf.    0.69565 (8) obj. -384.327 iterations 134
Cbc0038I Pass  17: (1.58 seconds) suminf.    4.33466 (11) obj. -383.265 iterations 526
Cbc0038I Pass  18: (1.59 seconds) suminf.    3.92966 (8) obj. -383.265 iterations 577
Cbc0038I Pass  19: (1.59 seconds) suminf.    3.82609 (8) obj. -384.325 iterations 96
Cbc0038I Pass  20: (1.60 seconds) suminf.    6.07077 (23) obj. -383.265 iterations 564
Cbc0038I Pass  21: (1.61 seconds) suminf.    3.82609 (8) obj. -384.325 iterations 520
Cbc0038I Pass  22: (1.62 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 658
Cbc0038I Pass  23: (1.62 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 4
Cbc0038I Pass  24: (1.63 seconds) suminf.    2.04835 (14) obj. -383.265 iterations 8
Cbc0038I Pass  25: (1.63 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 17
Cbc0038I Pass  26: (1.63 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 12
Cbc0038I Pass  27: (1.64 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 9
Cbc0038I Pass  28: (1.64 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 9
Cbc0038I Pass  29: (1.64 seconds) suminf.    1.45626 (28) obj. -383.265 iterations 12
Cbc0038I Pass  30: (1.65 seconds) suminf.    2.04835 (14) obj. -383.265 iterations 39
Cbc0038I Pass  31: (1.66 seconds) suminf.    3.82609 (8) obj. -384.325 iterations 550
Cbc0038I Pass  32: (1.67 seconds) suminf.    5.04204 (20) obj. -383.265 iterations 724
Cbc0038I Pass  33: (1.68 seconds) suminf.    2.71983 (8) obj. -383.265 iterations 692
Cbc0038I Pass  34: (1.69 seconds) suminf.    2.78261 (8) obj. -383.907 iterations 81
Cbc0038I Pass  35: (1.69 seconds) suminf.    2.84529 (18) obj. -383.265 iterations 194
Cbc0038I Pass  36: (1.70 seconds) suminf.    3.16901 (13) obj. -383.265 iterations 646
Cbc0038I Pass  37: (1.71 seconds) suminf.    3.16901 (13) obj. -383.265 iterations 350
Cbc0038I Pass  38: (1.72 seconds) suminf.    2.81429 (12) obj. -383.265 iterations 419
Cbc0038I Pass  39: (1.73 seconds) suminf.    2.94993 (20) obj. -383.265 iterations 483
Cbc0038I Pass  40: (1.74 seconds) suminf.    5.09414 (15) obj. -383.265 iterations 449
Cbc0038I Pass  41: (1.74 seconds) suminf.    3.88821 (28) obj. -383.265 iterations 21
Cbc0038I Pass  42: (1.75 seconds) suminf.    3.93731 (18) obj. -383.265 iterations 513
Cbc0038I Pass  43: (1.76 seconds) suminf.    2.78261 (8) obj. -384.123 iterations 111
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 848 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 946 columns, reduced to 36 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -382.286 to -382.926 (1.78 seconds)
Cbc0038I Round again with cutoff of -384.44
Cbc0038I Reduced cost fixing fixed 178 variables on major pass 4
Cbc0038I Pass  43: (1.81 seconds) suminf.    1.14851 (28) obj. -384.44 iterations 679
Cbc0038I Pass  44: (1.81 seconds) suminf.    1.14851 (28) obj. -384.44 iterations 11
Cbc0038I Pass  45: (1.82 seconds) suminf.    1.14851 (28) obj. -384.44 iterations 18
Cbc0038I Pass  46: (1.82 seconds) suminf.    1.14851 (28) obj. -384.44 iterations 15
Cbc0038I Pass  47: (1.82 seconds) suminf.    1.14851 (28) obj. -384.44 iterations 11
Cbc0038I Pass  48: (1.82 seconds) suminf.    5.38835 (25) obj. -384.44 iterations 29
Cbc0038I Pass  49: (1.83 seconds) suminf.    5.38835 (25) obj. -384.44 iterations 25
Cbc0038I Pass  50: (1.83 seconds) suminf.   11.23707 (31) obj. -384.44 iterations 305
Cbc0038I Pass  51: (1.84 seconds) suminf.    3.86155 (18) obj. -384.44 iterations 34
Cbc0038I Pass  52: (1.84 seconds) suminf.    3.36993 (8) obj. -384.44 iterations 442
Cbc0038I Pass  53: (1.85 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 85
Cbc0038I Pass  54: (1.86 seconds) suminf.    3.96495 (21) obj. -384.44 iterations 627
Cbc0038I Pass  55: (1.87 seconds) suminf.    2.01942 (8) obj. -384.44 iterations 693
Cbc0038I Pass  56: (1.87 seconds) suminf.    2.08696 (8) obj. -385.132 iterations 88
Cbc0038I Pass  57: (1.88 seconds) suminf.    4.44866 (16) obj. -384.44 iterations 217
Cbc0038I Pass  58: (1.88 seconds) suminf.    5.58760 (28) obj. -384.44 iterations 287
Cbc0038I Pass  59: (1.89 seconds) suminf.   10.62736 (32) obj. -384.44 iterations 465
Cbc0038I Pass  60: (1.90 seconds) suminf.    9.90521 (31) obj. -384.44 iterations 255
Cbc0038I Pass  61: (1.91 seconds) suminf.    2.91583 (24) obj. -384.44 iterations 342
Cbc0038I Pass  62: (1.91 seconds) suminf.    2.48816 (25) obj. -384.44 iterations 10
Cbc0038I Pass  63: (1.92 seconds) suminf.    2.63226 (12) obj. -384.44 iterations 688
Cbc0038I Pass  64: (1.93 seconds) suminf.    2.43478 (8) obj. -385.13 iterations 90
Cbc0038I Pass  65: (1.93 seconds) suminf.    2.50213 (8) obj. -384.44 iterations 86
Cbc0038I Pass  66: (1.94 seconds) suminf.    3.30918 (14) obj. -384.44 iterations 261
Cbc0038I Pass  67: (1.94 seconds) suminf.    2.27829 (12) obj. -384.44 iterations 407
Cbc0038I Pass  68: (1.95 seconds) suminf.    2.01942 (8) obj. -384.44 iterations 383
Cbc0038I Pass  69: (1.95 seconds) suminf.    2.08696 (8) obj. -385.132 iterations 76
Cbc0038I Pass  70: (1.96 seconds) suminf.    2.07497 (10) obj. -384.44 iterations 514
Cbc0038I Pass  71: (1.97 seconds) suminf.    1.93913 (14) obj. -384.44 iterations 330
Cbc0038I Solution found of -384.705
Cbc0038I Before mini branch and bound, 842 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 946 columns, reduced to 52 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (2.00 seconds)
Cbc0038I Round again with cutoff of -385.448
Cbc0038I Reduced cost fixing fixed 189 variables on major pass 5
Cbc0038I Pass  72: (2.00 seconds) suminf.    5.16789 (28) obj. -385.448 iterations 7
Cbc0038I Pass  73: (2.00 seconds) suminf.    5.16789 (28) obj. -385.448 iterations 6
Cbc0038I Pass  74: (2.01 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 637
Cbc0038I Pass  75: (2.02 seconds) suminf.    3.46840 (8) obj. -385.448 iterations 117
Cbc0038I Pass  76: (2.02 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 98
Cbc0038I Pass  77: (2.03 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 182
Cbc0038I Pass  78: (2.03 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 258
Cbc0038I Pass  79: (2.04 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 247
Cbc0038I Pass  80: (2.04 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 258
Cbc0038I Pass  81: (2.05 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 259
Cbc0038I Pass  82: (2.05 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 277
Cbc0038I Pass  83: (2.06 seconds) suminf.    3.48527 (9) obj. -385.448 iterations 329
Cbc0038I Pass  84: (2.06 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 283
Cbc0038I Pass  85: (2.08 seconds) suminf.    3.61098 (12) obj. -385.448 iterations 665
Cbc0038I Pass  86: (2.09 seconds) suminf.    3.52552 (12) obj. -385.448 iterations 613
Cbc0038I Pass  87: (2.09 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 261
Cbc0038I Pass  88: (2.10 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 240
Cbc0038I Pass  89: (2.10 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 260
Cbc0038I Pass  90: (2.11 seconds) suminf.    3.60996 (11) obj. -385.448 iterations 812
Cbc0038I Pass  91: (2.12 seconds) suminf.    4.10879 (12) obj. -385.448 iterations 131
Cbc0038I Pass  92: (2.13 seconds) suminf.    3.52552 (12) obj. -385.448 iterations 321
Cbc0038I Pass  93: (2.14 seconds) suminf.    1.28412 (19) obj. -385.448 iterations 688
Cbc0038I Pass  94: (2.14 seconds) suminf.    1.04348 (8) obj. -385.547 iterations 520
Cbc0038I Pass  95: (2.15 seconds) suminf.    1.05316 (8) obj. -385.448 iterations 116
Cbc0038I Pass  96: (2.15 seconds) suminf.    1.08180 (9) obj. -385.448 iterations 340
Cbc0038I Pass  97: (2.16 seconds) suminf.    1.04348 (8) obj. -385.547 iterations 331
Cbc0038I Pass  98: (2.16 seconds) suminf.    1.04348 (8) obj. -385.547 iterations 252
Cbc0038I Pass  99: (2.16 seconds) suminf.    3.47328 (13) obj. -385.448 iterations 301
Cbc0038I Pass 100: (2.18 seconds) suminf.    3.60996 (11) obj. -385.448 iterations 807
Cbc0038I Pass 101: (2.19 seconds) suminf.    3.47826 (8) obj. -385.549 iterations 539
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 890 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 946 columns, reduced to 25 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (2.21 seconds)
Cbc0038I After 2.21 seconds - Feasibility pump exiting with objective of -384.705 - took 0.80 seconds
Cbc0012I Integer solution of -384.70467 found by feasibility pump after 0 iterations and 0 nodes (2.21 seconds)
Cbc0038I Full problem 3769 rows 946 columns, reduced to 9 rows 7 columns
Cbc0031I 8 added rows had average density of 23.875
Cbc0013I At root node, 18 cuts changed objective from -387.18296 to -384.70467 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 4.2 elements, 7 column cuts (7 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 37 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0001I Search completed - best objective -384.7046705522919, took 87 iterations and 0 nodes (2.32 seconds)
Cbc0035I Maximum depth 0, 193 variables fixed on reduced cost
Cuts at root node changed objective from -387.183 to -384.705
Probing was tried 9 times and created 61 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 9 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 9 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                384.70467055
Enumerated nodes:               0
Total iterations:               87
Time (CPU seconds):             2.40
Time (Wallclock seconds):       2.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.38   (Wallclock seconds):       3.90

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3c71ae1e01b64139abcb56c1b65dc1c7-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3c71ae1e01b64139abcb56c1b65dc1c7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1015686 COLUMNS
At line 4066858 RHS
At line 5082540 BOUNDS
At line 5086034 ENDATA
Problem MODEL has 1015681 rows, 3493 columns and 1029391 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 413.636 - 1.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 174 strengthened rows, 286 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 225 strengthened rows, 0 substitutions
Cgl0004I processed model has 4984 rows, 1164 columns (1164 integer (1164 of which binary)) and 13970 elements
Cbc0038I Initial state - 52 integers unsatisfied sum - 14.6667
Cbc0038I Pass   1: (2.27 seconds) suminf.    0.00000 (0) obj. -377.626 iterations 998
Cbc0038I Solution found of -377.626
Cbc0038I Rounding solution of -391.744 is better than previous of -377.626

Cbc0038I Before mini branch and bound, 1112 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4984 rows 1164 columns, reduced to 17 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (2.38 seconds)
Cbc0038I Round again with cutoff of -393.933
Cbc0038I Reduced cost fixing fixed 61 variables on major pass 2
Cbc0038I Pass   2: (2.41 seconds) suminf.    1.70607 (5) obj. -393.933 iterations 331
Cbc0038I Pass   3: (2.42 seconds) suminf.    0.43216 (6) obj. -393.933 iterations 227
Cbc0038I Pass   4: (2.42 seconds) suminf.    0.43216 (6) obj. -393.933 iterations 0
Cbc0038I Pass   5: (2.44 seconds) suminf.    2.60870 (6) obj. -407.362 iterations 346
Cbc0038I Pass   6: (2.46 seconds) suminf.    2.86957 (6) obj. -405.692 iterations 513
Cbc0038I Pass   7: (2.48 seconds) suminf.    0.83956 (6) obj. -393.933 iterations 501
Cbc0038I Pass   8: (2.48 seconds) suminf.    0.83956 (6) obj. -393.933 iterations 0
Cbc0038I Pass   9: (2.50 seconds) suminf.    2.86957 (6) obj. -405.692 iterations 282
Cbc0038I Pass  10: (2.52 seconds) suminf.   10.51325 (27) obj. -393.933 iterations 461
Cbc0038I Pass  11: (2.54 seconds) suminf.    5.31818 (13) obj. -401.163 iterations 298
Cbc0038I Pass  12: (2.56 seconds) suminf.    0.83956 (6) obj. -393.933 iterations 416
Cbc0038I Pass  13: (2.56 seconds) suminf.    0.83956 (6) obj. -393.933 iterations 0
Cbc0038I Pass  14: (2.57 seconds) suminf.    2.34783 (6) obj. -399.745 iterations 267
Cbc0038I Pass  15: (2.59 seconds) suminf.    4.53481 (13) obj. -393.933 iterations 341
Cbc0038I Pass  16: (2.61 seconds) suminf.    4.53481 (13) obj. -393.933 iterations 519
Cbc0038I Pass  17: (2.63 seconds) suminf.    0.60000 (3) obj. -399.685 iterations 523
Cbc0038I Pass  18: (2.64 seconds) suminf.    0.60000 (3) obj. -399.685 iterations 9
Cbc0038I Pass  19: (2.65 seconds) suminf.    0.96441 (7) obj. -393.933 iterations 410
Cbc0038I Pass  20: (2.67 seconds) suminf.    1.04348 (6) obj. -394.839 iterations 405
Cbc0038I Pass  21: (2.70 seconds) suminf.    4.97913 (13) obj. -393.933 iterations 738
Cbc0038I Pass  22: (2.72 seconds) suminf.    1.66667 (5) obj. -394.666 iterations 574
Cbc0038I Pass  23: (2.76 seconds) suminf.    0.73805 (6) obj. -393.933 iterations 963
Cbc0038I Pass  24: (2.76 seconds) suminf.    0.73805 (6) obj. -393.933 iterations 0
Cbc0038I Pass  25: (2.78 seconds) suminf.    2.08696 (6) obj. -397.928 iterations 285
Cbc0038I Pass  26: (2.80 seconds) suminf.    2.61319 (6) obj. -393.933 iterations 619
Cbc0038I Pass  27: (2.81 seconds) suminf.    1.00000 (3) obj. -398.612 iterations 441
Cbc0038I Pass  28: (2.83 seconds) suminf.    0.12477 (1) obj. -393.933 iterations 325
Cbc0038I Pass  29: (2.84 seconds) suminf.    0.40000 (1) obj. -399.342 iterations 292
Cbc0038I Pass  30: (2.86 seconds) suminf.    1.32568 (8) obj. -393.933 iterations 402
Cbc0038I Pass  31: (2.88 seconds) suminf.    0.40000 (1) obj. -397.066 iterations 333
Cbc0038I Rounding solution of -392.513 is better than previous of -391.744

Cbc0038I Before mini branch and bound, 1026 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4984 rows 1164 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -392.513 to -408.072 (2.93 seconds)
Cbc0038I Round again with cutoff of -409.185
Cbc0038I Reduced cost fixing fixed 211 variables on major pass 3
Cbc0038I Pass  31: (2.95 seconds) suminf.    5.36495 (14) obj. -409.185 iterations 243
Cbc0038I Pass  32: (2.97 seconds) suminf.    1.20000 (3) obj. -410.714 iterations 506
Cbc0038I Pass  33: (2.98 seconds) suminf.    1.51868 (5) obj. -409.185 iterations 503
Cbc0038I Pass  34: (2.99 seconds) suminf.    1.20000 (3) obj. -410.714 iterations 252
Cbc0038I Pass  35: (3.00 seconds) suminf.    1.78457 (4) obj. -409.185 iterations 496
Cbc0038I Pass  36: (3.01 seconds) suminf.    1.95467 (10) obj. -409.185 iterations 363
Cbc0038I Pass  37: (3.03 seconds) suminf.    1.25000 (10) obj. -410.505 iterations 592
Cbc0038I Pass  38: (3.03 seconds) suminf.    0.60000 (3) obj. -410.255 iterations 174
Cbc0038I Pass  39: (3.05 seconds) suminf.    1.28915 (5) obj. -409.185 iterations 443
Cbc0038I Pass  40: (3.06 seconds) suminf.    1.09490 (5) obj. -409.185 iterations 526
Cbc0038I Pass  41: (3.07 seconds) suminf.    2.26849 (9) obj. -409.185 iterations 330
Cbc0038I Pass  42: (3.07 seconds) suminf.    2.26849 (9) obj. -409.185 iterations 59
Cbc0038I Pass  43: (3.08 seconds) suminf.    2.02742 (7) obj. -409.185 iterations 47
Cbc0038I Pass  44: (3.09 seconds) suminf.    1.63970 (10) obj. -409.185 iterations 369
Cbc0038I Pass  45: (3.10 seconds) suminf.    1.00914 (4) obj. -409.185 iterations 371
Cbc0038I Pass  46: (3.12 seconds) suminf.    2.25386 (18) obj. -409.185 iterations 564
Cbc0038I Pass  47: (3.13 seconds) suminf.    0.83685 (4) obj. -409.185 iterations 484
Cbc0038I Pass  48: (3.14 seconds) suminf.    0.60000 (3) obj. -409.787 iterations 296
Cbc0038I Pass  49: (3.15 seconds) suminf.    5.11915 (18) obj. -409.185 iterations 400
Cbc0038I Pass  50: (3.16 seconds) suminf.    1.20000 (3) obj. -410.714 iterations 326
Cbc0038I Pass  51: (3.18 seconds) suminf.    1.51868 (5) obj. -409.185 iterations 502
Cbc0038I Pass  52: (3.18 seconds) suminf.    1.20000 (3) obj. -410.714 iterations 225
Cbc0038I Pass  53: (3.20 seconds) suminf.    2.30609 (9) obj. -409.185 iterations 678
Cbc0038I Pass  54: (3.21 seconds) suminf.    0.60000 (3) obj. -410.255 iterations 719
Cbc0038I Pass  55: (3.23 seconds) suminf.    1.28915 (5) obj. -409.185 iterations 448
Cbc0038I Pass  56: (3.24 seconds) suminf.    1.49296 (9) obj. -409.185 iterations 469
Cbc0038I Pass  57: (3.25 seconds) suminf.    1.49296 (9) obj. -409.185 iterations 354
Cbc0038I Pass  58: (3.27 seconds) suminf.    5.48759 (25) obj. -409.185 iterations 823
Cbc0038I Pass  59: (3.29 seconds) suminf.    2.40000 (9) obj. -410.654 iterations 716
Cbc0038I Pass  60: (3.29 seconds) suminf.    2.40000 (9) obj. -410.654 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1021 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4984 rows 1164 columns, reduced to 41 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -408.072 to -409.59 (3.33 seconds)
Cbc0038I Round again with cutoff of -410.804
Cbc0038I Reduced cost fixing fixed 241 variables on major pass 4
Cbc0038I Pass  60: (3.35 seconds) suminf.    3.18116 (14) obj. -410.804 iterations 12
Cbc0038I Pass  61: (3.36 seconds) suminf.    1.33333 (4) obj. -411.689 iterations 425
Cbc0038I Pass  62: (3.38 seconds) suminf.    2.31935 (9) obj. -410.804 iterations 834
Cbc0038I Pass  63: (3.40 seconds) suminf.    1.33333 (4) obj. -411.689 iterations 570
Cbc0038I Pass  64: (3.41 seconds) suminf.    4.33660 (15) obj. -410.804 iterations 730
Cbc0038I Pass  65: (3.42 seconds) suminf.    4.33660 (15) obj. -410.804 iterations 65
Cbc0038I Pass  66: (3.44 seconds) suminf.    2.20621 (13) obj. -410.804 iterations 646
Cbc0038I Pass  67: (3.45 seconds) suminf.    5.98066 (16) obj. -410.804 iterations 653
Cbc0038I Pass  68: (3.47 seconds) suminf.    2.66667 (12) obj. -410.804 iterations 650
Cbc0038I Pass  69: (3.48 seconds) suminf.    1.81679 (11) obj. -410.804 iterations 429
Cbc0038I Pass  70: (3.50 seconds) suminf.    1.57717 (11) obj. -410.804 iterations 792
Cbc0038I Pass  71: (3.51 seconds) suminf.    0.66667 (12) obj. -410.804 iterations 712
Cbc0038I Pass  72: (3.53 seconds) suminf.    2.71929 (11) obj. -410.804 iterations 775
Cbc0038I Pass  73: (3.54 seconds) suminf.    2.71929 (11) obj. -410.804 iterations 50
Cbc0038I Pass  74: (3.58 seconds) suminf.    5.46223 (14) obj. -410.804 iterations 787
Cbc0038I Pass  75: (3.59 seconds) suminf.    3.00000 (9) obj. -411.873 iterations 629
Cbc0038I Pass  76: (3.59 seconds) suminf.    3.00000 (9) obj. -411.873 iterations 6
Cbc0038I Pass  77: (3.61 seconds) suminf.    3.68281 (21) obj. -410.804 iterations 674
Cbc0038I Pass  78: (3.63 seconds) suminf.    3.00000 (9) obj. -411.873 iterations 662
Cbc0038I Pass  79: (3.63 seconds) suminf.    4.31289 (35) obj. -410.804 iterations 207
Cbc0038I Pass  80: (3.64 seconds) suminf.    3.78558 (37) obj. -410.804 iterations 289
Cbc0038I Pass  81: (3.66 seconds) suminf.    4.76269 (24) obj. -410.804 iterations 425
Cbc0038I Pass  82: (3.67 seconds) suminf.    6.47959 (16) obj. -410.804 iterations 701
Cbc0038I Pass  83: (3.70 seconds) suminf.    2.03025 (13) obj. -410.804 iterations 1204
Cbc0038I Pass  84: (3.71 seconds) suminf.    2.03025 (13) obj. -410.804 iterations 52
Cbc0038I Pass  85: (3.75 seconds) suminf.    5.46223 (14) obj. -410.804 iterations 1447
Cbc0038I Pass  86: (3.76 seconds) suminf.    3.00000 (9) obj. -411.873 iterations 674
Cbc0038I Pass  87: (3.78 seconds) suminf.    2.03025 (13) obj. -410.804 iterations 722
Cbc0038I Pass  88: (3.79 seconds) suminf.    2.03025 (13) obj. -410.804 iterations 24
Cbc0038I Pass  89: (3.81 seconds) suminf.    4.18623 (14) obj. -410.804 iterations 704
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1023 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4984 rows 1164 columns, reduced to 81 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (3.85 seconds)
Cbc0038I After 3.86 seconds - Feasibility pump exiting with objective of -409.59 - took 1.51 seconds
Cbc0012I Integer solution of -409.59044 found by feasibility pump after 0 iterations and 0 nodes (3.86 seconds)
Cbc0038I Full problem 4984 rows 1164 columns, reduced to 17 rows 9 columns
Cbc0031I 6 added rows had average density of 61
Cbc0013I At root node, 6 cuts changed objective from -413.63565 to -410.97633 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 124 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -409.59044 best solution, best possible -410.97633 (4.08 seconds)
Cbc0001I Search completed - best objective -409.590438886885, took 1289 iterations and 20 nodes (4.74 seconds)
Cbc0032I Strong branching done 142 times (2765 iterations), fathomed 7 nodes and fixed 6 variables
Cbc0035I Maximum depth 4, 349 variables fixed on reduced cost
Cuts at root node changed objective from -413.636 to -410.976
Probing was tried 32 times and created 83 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 30 times and created 124 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Optimal solution found

Objective value:                409.59043889
Enumerated nodes:               20
Total iterations:               1289
Time (CPU seconds):             4.70
Time (Wallclock seconds):       5.48

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.24   (Wallclock seconds):       7.21

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ce58d1c5bc7b4b599e9dd0512467f479-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ce58d1c5bc7b4b599e9dd0512467f479-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1605912 COLUMNS
At line 6428749 RHS
At line 8034657 BOUNDS
At line 8038950 ENDATA
Problem MODEL has 1605907 rows, 4292 columns and 1623043 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 459.293 - 1.45 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 113 strengthened rows, 226 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 116 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 6470 rows, 1516 columns (1516 integer (1516 of which binary)) and 17835 elements
Cbc0038I Initial state - 26 integers unsatisfied sum - 13
Cbc0038I Pass   1: (3.84 seconds) suminf.    0.00000 (0) obj. -383.515 iterations 1543
Cbc0038I Solution found of -383.515
Cbc0038I Rounding solution of -392.481 is better than previous of -383.515

Cbc0038I Before mini branch and bound, 1487 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6470 rows 1516 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -392.481 to -447.57 (3.96 seconds)
Cbc0038I Round again with cutoff of -448.742
Cbc0038I Reduced cost fixing fixed 179 variables on major pass 2
Cbc0038I Pass   2: (4.06 seconds) suminf.    0.12005 (10) obj. -448.742 iterations 797
Cbc0038I Pass   3: (4.06 seconds) suminf.    0.12005 (10) obj. -448.742 iterations 36
Cbc0038I Pass   4: (4.07 seconds) suminf.    0.66667 (6) obj. -453.069 iterations 348
Cbc0038I Pass   5: (4.09 seconds) suminf.    5.18791 (18) obj. -448.742 iterations 344
Cbc0038I Pass   6: (4.10 seconds) suminf.    1.00000 (3) obj. -451.127 iterations 284
Cbc0038I Pass   7: (4.11 seconds) suminf.    0.44285 (10) obj. -448.742 iterations 382
Cbc0038I Pass   8: (4.12 seconds) suminf.    0.66667 (6) obj. -449.917 iterations 271
Cbc0038I Pass   9: (4.14 seconds) suminf.    1.69230 (9) obj. -448.742 iterations 615
Cbc0038I Pass  10: (4.16 seconds) suminf.    0.60000 (6) obj. -450.151 iterations 515
Cbc0038I Pass  11: (4.18 seconds) suminf.    1.73820 (6) obj. -448.742 iterations 463
Cbc0038I Pass  12: (4.20 seconds) suminf.    2.12368 (20) obj. -448.742 iterations 654
Cbc0038I Pass  13: (4.22 seconds) suminf.    1.76815 (11) obj. -448.742 iterations 476
Cbc0038I Pass  14: (4.24 seconds) suminf.    3.12371 (15) obj. -448.742 iterations 782
Cbc0038I Pass  15: (4.25 seconds) suminf.    3.12371 (15) obj. -448.742 iterations 8
Cbc0038I Pass  16: (4.26 seconds) suminf.    3.12371 (15) obj. -448.742 iterations 493
Cbc0038I Pass  17: (4.29 seconds) suminf.    3.14869 (11) obj. -448.742 iterations 958
Cbc0038I Pass  18: (4.31 seconds) suminf.    2.76770 (7) obj. -448.742 iterations 510
Cbc0038I Pass  19: (4.32 seconds) suminf.    2.76770 (7) obj. -448.742 iterations 60
Cbc0038I Pass  20: (4.33 seconds) suminf.    2.84788 (7) obj. -448.742 iterations 388
Cbc0038I Pass  21: (4.33 seconds) suminf.    2.84788 (7) obj. -448.742 iterations 67
Cbc0038I Pass  22: (4.35 seconds) suminf.    2.76770 (7) obj. -448.742 iterations 514
Cbc0038I Pass  23: (4.36 seconds) suminf.    3.28683 (8) obj. -448.742 iterations 530
Cbc0038I Pass  24: (4.39 seconds) suminf.    2.22222 (10) obj. -448.742 iterations 694
Cbc0038I Pass  25: (4.41 seconds) suminf.    5.11040 (12) obj. -448.742 iterations 773
Cbc0038I Pass  26: (4.44 seconds) suminf.    1.64044 (7) obj. -448.742 iterations 796
Cbc0038I Pass  27: (4.45 seconds) suminf.    1.75000 (7) obj. -449.739 iterations 278
Cbc0038I Pass  28: (4.47 seconds) suminf.    1.20789 (7) obj. -448.742 iterations 549
Cbc0038I Pass  29: (4.49 seconds) suminf.    1.20789 (7) obj. -448.742 iterations 677
Cbc0038I Pass  30: (4.53 seconds) suminf.    1.23594 (7) obj. -448.742 iterations 1232
Cbc0038I Pass  31: (4.54 seconds) suminf.    1.40000 (7) obj. -450.235 iterations 288
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1382 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6470 rows 1516 columns, reduced to 64 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -447.57 to -454.366 (4.64 seconds)
Cbc0038I Round again with cutoff of -455.351
Cbc0038I Reduced cost fixing fixed 290 variables on major pass 3
Cbc0038I Pass  31: (4.70 seconds) suminf.    4.11820 (32) obj. -455.351 iterations 1631
Cbc0038I Pass  32: (4.73 seconds) suminf.    1.09969 (17) obj. -455.351 iterations 1071
Cbc0038I Pass  33: (4.74 seconds) suminf.    1.11111 (5) obj. -455.392 iterations 489
Cbc0038I Pass  34: (4.75 seconds) suminf.    1.11870 (10) obj. -455.351 iterations 644
Cbc0038I Pass  35: (4.76 seconds) suminf.    1.11217 (8) obj. -455.351 iterations 269
Cbc0038I Pass  36: (4.78 seconds) suminf.    1.11111 (5) obj. -455.392 iterations 657
Cbc0038I Pass  37: (4.80 seconds) suminf.    1.36901 (7) obj. -455.351 iterations 1056
Cbc0038I Pass  38: (4.81 seconds) suminf.    1.13420 (31) obj. -455.351 iterations 161
Cbc0038I Pass  39: (4.82 seconds) suminf.    1.13420 (31) obj. -455.351 iterations 17
Cbc0038I Pass  40: (4.84 seconds) suminf.    4.16667 (25) obj. -457.36 iterations 920
Cbc0038I Pass  41: (4.85 seconds) suminf.    2.11765 (12) obj. -456.289 iterations 54
Cbc0038I Pass  42: (4.89 seconds) suminf.    7.04414 (16) obj. -455.351 iterations 785
Cbc0038I Pass  43: (4.90 seconds) suminf.    7.04414 (16) obj. -455.351 iterations 456
Cbc0038I Pass  44: (4.91 seconds) suminf.    5.56128 (16) obj. -455.351 iterations 9
Cbc0038I Pass  45: (4.91 seconds) suminf.    5.56128 (16) obj. -455.351 iterations 5
Cbc0038I Pass  46: (4.95 seconds) suminf.    1.41176 (12) obj. -457.09 iterations 1130
Cbc0038I Pass  47: (4.98 seconds) suminf.    5.56128 (16) obj. -455.351 iterations 809
Cbc0038I Pass  48: (4.99 seconds) suminf.    5.56128 (16) obj. -455.351 iterations 417
Cbc0038I Pass  49: (5.02 seconds) suminf.    2.75672 (15) obj. -455.351 iterations 940
Cbc0038I Pass  50: (5.03 seconds) suminf.    1.35697 (5) obj. -455.351 iterations 365
Cbc0038I Pass  51: (5.06 seconds) suminf.    1.60000 (4) obj. -457.077 iterations 1100
Cbc0038I Pass  52: (5.09 seconds) suminf.    1.35697 (5) obj. -455.351 iterations 1018
Cbc0038I Pass  53: (5.10 seconds) suminf.    1.35697 (5) obj. -455.351 iterations 187
Cbc0038I Pass  54: (5.11 seconds) suminf.    1.35697 (5) obj. -455.351 iterations 271
Cbc0038I Pass  55: (5.11 seconds) suminf.    1.35697 (5) obj. -455.351 iterations 38
Cbc0038I Pass  56: (5.12 seconds) suminf.    1.20994 (9) obj. -455.351 iterations 94
Cbc0038I Pass  57: (5.13 seconds) suminf.    1.20994 (9) obj. -455.351 iterations 221
Cbc0038I Pass  58: (5.15 seconds) suminf.    2.11765 (12) obj. -456.289 iterations 808
Cbc0038I Pass  59: (5.16 seconds) suminf.    2.11765 (12) obj. -456.289 iterations 3
Cbc0038I Pass  60: (5.18 seconds) suminf.    7.04414 (16) obj. -455.351 iterations 738
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1448 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6470 rows 1516 columns, reduced to 41 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (5.24 seconds)
Cbc0038I After 5.24 seconds - Feasibility pump exiting with objective of -454.366 - took 1.32 seconds
Cbc0012I Integer solution of -454.36564 found by feasibility pump after 0 iterations and 0 nodes (5.24 seconds)
Cbc0031I 1 added rows had average density of 19
Cbc0013I At root node, 1 cuts changed objective from -459.29263 to -457.8431 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 45 column cuts (45 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 18 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -454.36564 best solution, best possible -457.8431 (5.42 seconds)
Cbc0012I Integer solution of -455.99071 found by DiveCoefficient after 176 iterations and 4 nodes (5.76 seconds)
Cbc0001I Search completed - best objective -455.990709351036, took 538 iterations and 12 nodes (5.87 seconds)
Cbc0032I Strong branching done 90 times (1121 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 358 variables fixed on reduced cost
Cuts at root node changed objective from -459.293 to -457.843
Probing was tried 10 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)

Result - Optimal solution found

Objective value:                455.99070935
Enumerated nodes:               12
Total iterations:               538
Time (CPU seconds):             5.62
Time (Wallclock seconds):       7.25

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.12   (Wallclock seconds):       10.31

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/16e8f6fa5a77466ab7a209e6aa627d31-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/16e8f6fa5a77466ab7a209e6aa627d31-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 745626 COLUMNS
At line 2986173 RHS
At line 3731795 BOUNDS
At line 3734974 ENDATA
Problem MODEL has 745621 rows, 3178 columns and 757686 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 379.781 - 0.93 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 135 strengthened rows, 294 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 4305 rows, 1031 columns (1031 integer (1031 of which binary)) and 11828 elements
Cbc0038I Initial state - 72 integers unsatisfied sum - 27.4655
Cbc0038I Pass   1: (1.90 seconds) suminf.    0.00000 (0) obj. -329.108 iterations 835
Cbc0038I Solution found of -329.108
Cbc0038I Before mini branch and bound, 957 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4305 rows 1031 columns, reduced to 30 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -329.108 to -372.89 (2.00 seconds)
Cbc0038I Round again with cutoff of -373.579
Cbc0038I Reduced cost fixing fixed 152 variables on major pass 2
Cbc0038I Pass   2: (2.05 seconds) suminf.    8.57076 (44) obj. -373.579 iterations 798
Cbc0038I Pass   3: (2.05 seconds) suminf.    8.57076 (44) obj. -373.579 iterations 8
Cbc0038I Pass   4: (2.06 seconds) suminf.    3.91324 (12) obj. -373.579 iterations 250
Cbc0038I Pass   5: (2.07 seconds) suminf.    1.12500 (9) obj. -374.784 iterations 498
Cbc0038I Pass   6: (2.09 seconds) suminf.    5.20885 (16) obj. -373.579 iterations 718
Cbc0038I Pass   7: (2.09 seconds) suminf.    5.20885 (16) obj. -373.579 iterations 36
Cbc0038I Pass   8: (2.10 seconds) suminf.    4.17314 (41) obj. -373.579 iterations 31
Cbc0038I Pass   9: (2.12 seconds) suminf.    4.17314 (41) obj. -373.579 iterations 22
Cbc0038I Pass  10: (2.13 seconds) suminf.    9.99594 (39) obj. -373.579 iterations 27
Cbc0038I Pass  11: (2.13 seconds) suminf.    6.12366 (16) obj. -373.579 iterations 4
Cbc0038I Pass  12: (2.14 seconds) suminf.    6.12366 (16) obj. -373.579 iterations 13
Cbc0038I Pass  13: (2.15 seconds) suminf.    1.12500 (9) obj. -374.784 iterations 576
Cbc0038I Pass  14: (2.16 seconds) suminf.    1.12500 (9) obj. -374.784 iterations 197
Cbc0038I Pass  15: (2.17 seconds) suminf.    5.20885 (16) obj. -373.579 iterations 714
Cbc0038I Pass  16: (2.18 seconds) suminf.    9.10786 (33) obj. -373.579 iterations 60
Cbc0038I Pass  17: (2.18 seconds) suminf.    5.20885 (16) obj. -373.579 iterations 44
Cbc0038I Pass  18: (2.20 seconds) suminf.    7.30694 (21) obj. -373.579 iterations 533
Cbc0038I Pass  19: (2.21 seconds) suminf.    7.30694 (21) obj. -373.579 iterations 529
Cbc0038I Pass  20: (2.22 seconds) suminf.    3.91324 (12) obj. -373.579 iterations 35
Cbc0038I Pass  21: (2.22 seconds) suminf.    3.52831 (16) obj. -373.579 iterations 100
Cbc0038I Pass  22: (2.25 seconds) suminf.    3.88492 (34) obj. -373.579 iterations 788
Cbc0038I Pass  23: (2.26 seconds) suminf.    3.42857 (8) obj. -373.685 iterations 289
Cbc0038I Pass  24: (2.27 seconds) suminf.    3.85450 (15) obj. -373.579 iterations 744
Cbc0038I Pass  25: (2.28 seconds) suminf.    1.58250 (11) obj. -373.579 iterations 57
Cbc0038I Pass  26: (2.28 seconds) suminf.    1.58250 (11) obj. -373.579 iterations 21
Cbc0038I Pass  27: (2.29 seconds) suminf.    5.20885 (16) obj. -373.579 iterations 71
Cbc0038I Pass  28: (2.31 seconds) suminf.    1.12500 (9) obj. -374.784 iterations 686
Cbc0038I Pass  29: (2.32 seconds) suminf.    1.79589 (23) obj. -373.579 iterations 401
Cbc0038I Pass  30: (2.33 seconds) suminf.    1.12500 (9) obj. -374.784 iterations 396
Cbc0038I Pass  31: (2.34 seconds) suminf.    1.65217 (19) obj. -374.255 iterations 187
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 856 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4305 rows 1031 columns, reduced to 118 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -372.89 to -374.216 (2.38 seconds)
Cbc0038I Round again with cutoff of -375.329
Cbc0038I Reduced cost fixing fixed 174 variables on major pass 3
Cbc0038I Pass  31: (2.38 seconds) suminf.   13.85079 (44) obj. -375.329 iterations 3
Cbc0038I Pass  32: (2.39 seconds) suminf.    3.23831 (41) obj. -375.329 iterations 9
Cbc0038I Pass  33: (2.39 seconds) suminf.    3.00673 (43) obj. -375.329 iterations 17
Cbc0038I Pass  34: (2.40 seconds) suminf.    0.83061 (23) obj. -375.329 iterations 418
Cbc0038I Pass  35: (2.41 seconds) suminf.    0.24909 (5) obj. -375.329 iterations 422
Cbc0038I Pass  36: (2.42 seconds) suminf.    0.31250 (5) obj. -375.95 iterations 111
Cbc0038I Pass  37: (2.43 seconds) suminf.    0.99139 (18) obj. -375.329 iterations 428
Cbc0038I Pass  38: (2.44 seconds) suminf.    0.60000 (15) obj. -375.329 iterations 428
Cbc0038I Pass  39: (2.46 seconds) suminf.    0.24909 (5) obj. -375.329 iterations 660
Cbc0038I Pass  40: (2.46 seconds) suminf.    0.31250 (5) obj. -375.95 iterations 112
Cbc0038I Pass  41: (2.47 seconds) suminf.    0.94662 (9) obj. -375.329 iterations 232
Cbc0038I Pass  42: (2.48 seconds) suminf.    0.86534 (8) obj. -375.329 iterations 298
Cbc0038I Pass  43: (2.48 seconds) suminf.    0.30000 (3) obj. -375.78 iterations 309
Cbc0038I Pass  44: (2.49 seconds) suminf.    0.28521 (7) obj. -375.329 iterations 348
Cbc0038I Pass  45: (2.50 seconds) suminf.    0.35000 (7) obj. -375.883 iterations 321
Cbc0038I Pass  46: (2.51 seconds) suminf.    0.76223 (14) obj. -375.329 iterations 306
Cbc0038I Pass  47: (2.52 seconds) suminf.    0.60000 (12) obj. -375.569 iterations 185
Cbc0038I Pass  48: (2.54 seconds) suminf.    2.05447 (17) obj. -375.329 iterations 713
Cbc0038I Pass  49: (2.54 seconds) suminf.    2.05447 (17) obj. -375.329 iterations 2
Cbc0038I Pass  50: (2.55 seconds) suminf.    2.17391 (10) obj. -375.452 iterations 657
Cbc0038I Pass  51: (2.57 seconds) suminf.    2.31598 (17) obj. -375.329 iterations 572
Cbc0038I Pass  52: (2.57 seconds) suminf.    2.59653 (22) obj. -375.329 iterations 172
Cbc0038I Pass  53: (2.58 seconds) suminf.    3.13026 (11) obj. -375.329 iterations 524
Cbc0038I Pass  54: (2.60 seconds) suminf.    2.95463 (15) obj. -375.329 iterations 644
Cbc0038I Pass  55: (2.60 seconds) suminf.    2.05447 (17) obj. -375.329 iterations 98
Cbc0038I Pass  56: (2.61 seconds) suminf.    4.23664 (33) obj. -375.329 iterations 92
Cbc0038I Pass  57: (2.62 seconds) suminf.    3.00000 (21) obj. -375.329 iterations 470
Cbc0038I Pass  58: (2.63 seconds) suminf.    4.62986 (19) obj. -375.329 iterations 373
Cbc0038I Pass  59: (2.64 seconds) suminf.    0.23582 (4) obj. -375.329 iterations 281
Cbc0038I Pass  60: (2.64 seconds) suminf.    0.25000 (4) obj. -375.487 iterations 76
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 842 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4305 rows 1031 columns, reduced to 133 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (2.67 seconds)
Cbc0038I After 2.68 seconds - Feasibility pump exiting with objective of -374.216 - took 0.69 seconds
Cbc0012I Integer solution of -374.21601 found by feasibility pump after 0 iterations and 0 nodes (2.68 seconds)
Cbc0038I Full problem 4305 rows 1031 columns, reduced to 30 rows 15 columns
Cbc0031I 5 added rows had average density of 57.4
Cbc0013I At root node, 5 cuts changed objective from -379.78091 to -378.36846 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 86.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 71 row cuts average 73.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 254.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -374.21601 best solution, best possible -378.36846 (2.99 seconds)
Cbc0004I Integer solution of -376.88926 found after 235 iterations and 8 nodes (3.17 seconds)
Cbc0012I Integer solution of -377.52273 found by rounding after 366 iterations and 16 nodes (3.29 seconds)
Cbc0004I Integer solution of -378.30589 found after 461 iterations and 22 nodes (3.33 seconds)
Cbc0001I Search completed - best objective -378.3058865851751, took 461 iterations and 22 nodes (3.33 seconds)
Cbc0032I Strong branching done 206 times (2447 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 6, 336 variables fixed on reduced cost
Cuts at root node changed objective from -379.781 to -378.368
Probing was tried 27 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 9 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
ZeroHalf was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.121 seconds)

Result - Optimal solution found

Objective value:                378.30588659
Enumerated nodes:               22
Total iterations:               461
Time (CPU seconds):             3.22
Time (Wallclock seconds):       3.95

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.39   (Wallclock seconds):       5.45

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/188351a70b634e6f8daf0ad22271cac7-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/188351a70b634e6f8daf0ad22271cac7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 805398 COLUMNS
At line 3225349 RHS
At line 4030743 BOUNDS
At line 4033976 ENDATA
Problem MODEL has 805393 rows, 3232 columns and 817371 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 362.139 - 0.83 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 178 substitutions
Cgl0004I processed model has 4194 rows, 992 columns (992 integer (992 of which binary)) and 11408 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: (1.67 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 622
Cbc0038I Solution found of -306.106
Cbc0038I Rounding solution of -308.428 is better than previous of -306.106

Cbc0038I Before mini branch and bound, 974 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4194 rows 992 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -308.428 to -331.831 (1.75 seconds)
Cbc0038I Round again with cutoff of -334.862
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: (1.76 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 0
Cbc0038I Pass   3: (1.78 seconds) suminf.    0.52682 (42) obj. -334.862 iterations 714
Cbc0038I Pass   4: (1.78 seconds) suminf.    0.52682 (42) obj. -334.862 iterations 4
Cbc0038I Pass   5: (1.79 seconds) suminf.    5.13333 (11) obj. -351.07 iterations 357
Cbc0038I Pass   6: (1.80 seconds) suminf.    5.13333 (11) obj. -351.07 iterations 87
Cbc0038I Pass   7: (1.81 seconds) suminf.    3.60000 (12) obj. -348.668 iterations 251
Cbc0038I Pass   8: (1.81 seconds) suminf.    3.60000 (12) obj. -348.668 iterations 213
Cbc0038I Pass   9: (1.83 seconds) suminf.    3.10113 (19) obj. -334.862 iterations 615
Cbc0038I Pass  10: (1.84 seconds) suminf.    3.10113 (19) obj. -334.862 iterations 1
Cbc0038I Pass  11: (1.85 seconds) suminf.    4.03333 (11) obj. -351.2 iterations 327
Cbc0038I Pass  12: (1.86 seconds) suminf.    0.77016 (2) obj. -334.862 iterations 329
Cbc0038I Pass  13: (1.87 seconds) suminf.    0.16667 (2) obj. -342.014 iterations 227
Cbc0038I Pass  14: (1.88 seconds) suminf.    0.16667 (2) obj. -342.014 iterations 335
Cbc0038I Pass  15: (1.88 seconds) suminf.    0.16667 (2) obj. -342.014 iterations 278
Cbc0038I Pass  16: (1.89 seconds) suminf.    0.16667 (2) obj. -342.014 iterations 284
Cbc0038I Pass  17: (1.90 seconds) suminf.    1.00000 (2) obj. -339.973 iterations 380
Cbc0038I Pass  18: (1.91 seconds) suminf.    1.00000 (2) obj. -339.973 iterations 247
Cbc0038I Pass  19: (1.92 seconds) suminf.    0.56867 (2) obj. -334.862 iterations 316
Cbc0038I Pass  20: (1.93 seconds) suminf.    4.31034 (17) obj. -344.475 iterations 482
Cbc0038I Pass  21: (1.95 seconds) suminf.    0.56867 (2) obj. -334.862 iterations 657
Cbc0038I Pass  22: (1.97 seconds) suminf.    7.20513 (19) obj. -337.857 iterations 488
Cbc0038I Pass  23: (1.99 seconds) suminf.    4.68023 (97) obj. -334.862 iterations 503
Cbc0038I Pass  24: (1.99 seconds) suminf.    4.68023 (97) obj. -334.862 iterations 9
Cbc0038I Pass  25: (2.00 seconds) suminf.    0.63636 (7) obj. -346.623 iterations 233
Cbc0038I Pass  26: (2.00 seconds) suminf.    0.38095 (8) obj. -346.157 iterations 32
Cbc0038I Pass  27: (2.03 seconds) suminf.    2.84931 (19) obj. -334.862 iterations 795
Cbc0038I Pass  28: (2.03 seconds) suminf.    2.84931 (19) obj. -334.862 iterations 9
Cbc0038I Pass  29: (2.04 seconds) suminf.    0.63636 (7) obj. -346.623 iterations 294
Cbc0038I Pass  30: (2.06 seconds) suminf.    1.65786 (75) obj. -334.862 iterations 489
Cbc0038I Pass  31: (2.08 seconds) suminf.    0.96610 (20) obj. -334.862 iterations 720
Cbc0038I Rounding solution of -332.13 is better than previous of -331.831

Cbc0038I Before mini branch and bound, 837 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4194 rows 992 columns, reduced to 318 rows 97 columns
Cbc0038I Mini branch and bound improved solution from -332.13 to -358.758 (2.12 seconds)
Cbc0038I Round again with cutoff of -359.434
Cbc0038I Reduced cost fixing fixed 177 variables on major pass 3
Cbc0038I Pass  31: (2.13 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 0
Cbc0038I Pass  32: (2.14 seconds) suminf.    5.53769 (20) obj. -359.434 iterations 542
Cbc0038I Pass  33: (2.15 seconds) suminf.    5.53769 (20) obj. -359.434 iterations 444
Cbc0038I Pass  34: (2.15 seconds) suminf.    5.56850 (18) obj. -359.434 iterations 32
Cbc0038I Pass  35: (2.17 seconds) suminf.    3.73333 (8) obj. -359.806 iterations 589
Cbc0038I Pass  36: (2.18 seconds) suminf.    3.62075 (10) obj. -359.434 iterations 411
Cbc0038I Pass  37: (2.19 seconds) suminf.    3.73333 (8) obj. -359.806 iterations 294
Cbc0038I Pass  38: (2.20 seconds) suminf.    3.58708 (17) obj. -359.434 iterations 611
Cbc0038I Pass  39: (2.21 seconds) suminf.    2.95510 (10) obj. -359.434 iterations 439
Cbc0038I Pass  40: (2.22 seconds) suminf.    3.20000 (8) obj. -360.243 iterations 276
Cbc0038I Pass  41: (2.23 seconds) suminf.    3.27961 (16) obj. -359.434 iterations 410
Cbc0038I Pass  42: (2.24 seconds) suminf.    5.47468 (22) obj. -359.434 iterations 479
Cbc0038I Pass  43: (2.25 seconds) suminf.    4.29979 (13) obj. -359.434 iterations 90
Cbc0038I Pass  44: (2.26 seconds) suminf.    0.00000 (0) obj. -359.548 iterations 587
Cbc0038I Solution found of -359.548
Cbc0038I Before mini branch and bound, 932 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4194 rows 992 columns, reduced to 23 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (2.29 seconds)
Cbc0038I Round again with cutoff of -360.325
Cbc0038I Reduced cost fixing fixed 190 variables on major pass 4
Cbc0038I Pass  45: (2.30 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 0
Cbc0038I Pass  46: (2.31 seconds) suminf.    3.61189 (20) obj. -360.325 iterations 523
Cbc0038I Pass  47: (2.32 seconds) suminf.    8.90294 (23) obj. -360.325 iterations 437
Cbc0038I Pass  48: (2.33 seconds) suminf.    6.60522 (21) obj. -360.325 iterations 276
Cbc0038I Pass  49: (2.34 seconds) suminf.    5.21161 (16) obj. -360.325 iterations 423
Cbc0038I Pass  50: (2.34 seconds) suminf.    5.96185 (18) obj. -360.325 iterations 135
Cbc0038I Pass  51: (2.35 seconds) suminf.    6.60469 (21) obj. -360.325 iterations 392
Cbc0038I Pass  52: (2.36 seconds) suminf.    5.21161 (16) obj. -360.325 iterations 463
Cbc0038I Pass  53: (2.36 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 159
Cbc0038I Pass  54: (2.37 seconds) suminf.    3.61189 (20) obj. -360.325 iterations 339
Cbc0038I Pass  55: (2.38 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 336
Cbc0038I Pass  56: (2.38 seconds) suminf.    1.60000 (8) obj. -361.094 iterations 282
Cbc0038I Pass  57: (2.39 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 174
Cbc0038I Pass  58: (2.40 seconds) suminf.    1.89324 (13) obj. -360.325 iterations 409
Cbc0038I Pass  59: (2.40 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 329
Cbc0038I Pass  60: (2.41 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 246
Cbc0038I Pass  61: (2.41 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 238
Cbc0038I Pass  62: (2.42 seconds) suminf.    1.60000 (8) obj. -361.094 iterations 254
Cbc0038I Pass  63: (2.42 seconds) suminf.    2.05928 (10) obj. -360.325 iterations 368
Cbc0038I Pass  64: (2.43 seconds) suminf.    1.60000 (8) obj. -361.094 iterations 333
Cbc0038I Pass  65: (2.44 seconds) suminf.    1.25579 (10) obj. -360.325 iterations 367
Cbc0038I Pass  66: (2.44 seconds) suminf.    1.25579 (10) obj. -360.325 iterations 224
Cbc0038I Pass  67: (2.45 seconds) suminf.    2.95059 (19) obj. -360.325 iterations 252
Cbc0038I Pass  68: (2.45 seconds) suminf.    0.58824 (10) obj. -362.013 iterations 177
Cbc0038I Pass  69: (2.46 seconds) suminf.    3.61189 (20) obj. -360.325 iterations 413
Cbc0038I Pass  70: (2.47 seconds) suminf.    1.50250 (10) obj. -360.325 iterations 335
Cbc0038I Pass  71: (2.48 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 208
Cbc0038I Pass  72: (2.49 seconds) suminf.    1.89324 (13) obj. -360.325 iterations 379
Cbc0038I Pass  73: (2.50 seconds) suminf.    2.05056 (16) obj. -360.325 iterations 373
Cbc0038I Pass  74: (2.50 seconds) suminf.    1.17647 (10) obj. -360.841 iterations 297
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 938 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4194 rows 992 columns, reduced to 36 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (2.53 seconds)
Cbc0038I After 2.53 seconds - Feasibility pump exiting with objective of -359.548 - took 0.82 seconds
Cbc0012I Integer solution of -359.54803 found by feasibility pump after 0 iterations and 0 nodes (2.53 seconds)
Cbc0038I Full problem 4194 rows 992 columns, reduced to 4 rows 6 columns
Cbc0031I 3 added rows had average density of 42.333333
Cbc0013I At root node, 3 cuts changed objective from -362.13946 to -360.33343 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 55.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 44 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -359.54803 best solution, best possible -360.33343 (2.72 seconds)
Cbc0001I Search completed - best objective -359.5480257044852, took 975 iterations and 4 nodes (2.96 seconds)
Cbc0032I Strong branching done 50 times (1279 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 197 variables fixed on reduced cost
Cuts at root node changed objective from -362.139 to -360.333
Probing was tried 12 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 12 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 8 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                359.54802570
Enumerated nodes:               4
Total iterations:               975
Time (CPU seconds):             2.96
Time (Wallclock seconds):       3.44

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.16   (Wallclock seconds):       4.79

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/e907bfb843354a828232e3a79d6c1cc0-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/e907bfb843354a828232e3a79d6c1cc0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 884506 COLUMNS
At line 3541924 RHS
At line 4426426 BOUNDS
At line 4429766 ENDATA
Problem MODEL has 884501 rows, 3339 columns and 897323 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 375.313 - 0.96 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 162 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0004I processed model has 4661 rows, 1086 columns (1086 integer (1086 of which binary)) and 12768 elements
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.77778
Cbc0038I Pass   1: (1.92 seconds) suminf.    0.00000 (0) obj. -325.641 iterations 893
Cbc0038I Solution found of -325.641
Cbc0038I Rounding solution of -328.963 is better than previous of -325.641

Cbc0038I Before mini branch and bound, 1055 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.96 seconds)
Cbc0038I Round again with cutoff of -333.598
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: (2.00 seconds) suminf.    0.59876 (3) obj. -333.598 iterations 318
Cbc0038I Pass   3: (2.00 seconds) suminf.    0.59876 (3) obj. -333.598 iterations 22
Cbc0038I Pass   4: (2.01 seconds) suminf.    0.52941 (3) obj. -358.473 iterations 275
Cbc0038I Pass   5: (2.02 seconds) suminf.    0.52941 (3) obj. -357.707 iterations 357
Cbc0038I Pass   6: (2.03 seconds) suminf.    0.52941 (3) obj. -357.707 iterations 255
Cbc0038I Pass   7: (2.04 seconds) suminf.    0.65636 (3) obj. -333.598 iterations 281
Cbc0038I Pass   8: (2.07 seconds) suminf.    2.50000 (5) obj. -348.73 iterations 781
Cbc0038I Pass   9: (2.08 seconds) suminf.    0.88889 (2) obj. -356.502 iterations 307
Cbc0038I Solution found of -351.907
Cbc0038I Rounding solution of -355.229 is better than previous of -351.907

Cbc0038I Before mini branch and bound, 1040 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4661 rows 1086 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (2.16 seconds)
Cbc0038I Round again with cutoff of -359.245
Cbc0038I Reduced cost fixing fixed 66 variables on major pass 3
Cbc0038I Pass  10: (2.19 seconds) suminf.    1.05446 (17) obj. -359.245 iterations 358
Cbc0038I Pass  11: (2.21 seconds) suminf.    1.03462 (11) obj. -359.245 iterations 638
Cbc0038I Solution found of -374.491
Cbc0038I Before mini branch and bound, 1044 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4661 rows 1086 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.23 seconds)
Cbc0038I Round again with cutoff of -374.737
Cbc0038I Reduced cost fixing fixed 214 variables on major pass 4
Cbc0038I Pass  12: (2.26 seconds) suminf.    9.12423 (31) obj. -374.737 iterations 641
Cbc0038I Pass  13: (2.27 seconds) suminf.    5.26316 (20) obj. -374.962 iterations 650
Cbc0038I Pass  14: (2.28 seconds) suminf.    4.00000 (16) obj. -374.814 iterations 39
Cbc0038I Pass  15: (2.30 seconds) suminf.    5.66570 (24) obj. -374.737 iterations 921
Cbc0038I Pass  16: (2.31 seconds) suminf.    4.46177 (20) obj. -374.737 iterations 604
Cbc0038I Pass  17: (2.32 seconds) suminf.    4.60016 (17) obj. -374.737 iterations 20
Cbc0038I Pass  18: (2.32 seconds) suminf.    4.46177 (20) obj. -374.737 iterations 9
Cbc0038I Pass  19: (2.32 seconds) suminf.    2.14938 (46) obj. -374.737 iterations 19
Cbc0038I Pass  20: (2.33 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 6
Cbc0038I Pass  21: (2.33 seconds) suminf.    2.14938 (46) obj. -374.737 iterations 11
Cbc0038I Pass  22: (2.33 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 9
Cbc0038I Pass  23: (2.34 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 5
Cbc0038I Pass  24: (2.34 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 3
Cbc0038I Pass  25: (2.34 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 2
Cbc0038I Pass  26: (2.35 seconds) suminf.    2.14938 (46) obj. -374.737 iterations 4
Cbc0038I Pass  27: (2.35 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 6
Cbc0038I Pass  28: (2.35 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 5
Cbc0038I Pass  29: (2.36 seconds) suminf.    2.57294 (20) obj. -374.737 iterations 18
Cbc0038I Pass  30: (2.36 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 14
Cbc0038I Pass  31: (2.36 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 4
Cbc0038I Pass  32: (2.37 seconds) suminf.    2.57294 (20) obj. -374.737 iterations 14
Cbc0038I Pass  33: (2.37 seconds) suminf.    2.56959 (21) obj. -374.737 iterations 12
Cbc0038I Pass  34: (2.37 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 8
Cbc0038I Pass  35: (2.39 seconds) suminf.    4.00000 (16) obj. -374.814 iterations 559
Cbc0038I Pass  36: (2.40 seconds) suminf.    4.01732 (16) obj. -374.737 iterations 464
Cbc0038I Pass  37: (2.41 seconds) suminf.    4.00000 (16) obj. -374.814 iterations 396
Cbc0038I Pass  38: (2.43 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 554
Cbc0038I Pass  39: (2.43 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 8
Cbc0038I Pass  40: (2.43 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 3
Cbc0038I Pass  41: (2.44 seconds) suminf.    1.71755 (36) obj. -374.737 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1021 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4661 rows 1086 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (2.46 seconds)
Cbc0038I After 2.47 seconds - Feasibility pump exiting with objective of -374.491 - took 0.51 seconds
Cbc0012I Integer solution of -374.49064 found by feasibility pump after 0 iterations and 0 nodes (2.47 seconds)
Cbc0031I 5 added rows had average density of 53.2
Cbc0013I At root node, 5 cuts changed objective from -375.31255 to -374.65385 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 66 row cuts average 56.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 60 row cuts average 284.8 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -374.49064 best solution, best possible -374.65385 (2.77 seconds)
Cbc0001I Search completed - best objective -374.490642630176, took 300 iterations and 8 nodes (3.13 seconds)
Cbc0032I Strong branching done 88 times (856 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 230 variables fixed on reduced cost
Cuts at root node changed objective from -375.313 to -374.654
Probing was tried 22 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Gomory was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 22 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 22 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 7 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
ZeroHalf was tried 7 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.102 seconds)

Result - Optimal solution found

Objective value:                374.49064263
Enumerated nodes:               8
Total iterations:               300
Time (CPU seconds):             3.15
Time (Wallclock seconds):       3.76

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.48   (Wallclock seconds):       5.26

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/84447af9e78b46b9ac315862842efe51-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/84447af9e78b46b9ac315862842efe51-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 467383 COLUMNS
At line 1872532 RHS
At line 2339911 BOUNDS
At line 2342549 ENDATA
Problem MODEL has 467378 rows, 2637 columns and 476967 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 430.608 - 0.66 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 138 strengthened rows, 230 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 107 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 3305 rows, 816 columns (816 integer (816 of which binary)) and 9079 elements
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.14286
Cbc0038I Pass   1: (1.22 seconds) suminf.    6.15789 (13) obj. -427.079 iterations 518
Cbc0038I Solution found of -390.112
Cbc0038I Rounding solution of -393.434 is better than previous of -390.112

Cbc0038I Before mini branch and bound, 783 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3305 rows 816 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (1.27 seconds)
Cbc0038I Round again with cutoff of -397.152
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: (1.28 seconds) suminf.    6.15789 (13) obj. -427.079 iterations 0
Cbc0038I Pass   3: (1.29 seconds) suminf.    0.58925 (31) obj. -397.152 iterations 492
Cbc0038I Pass   4: (1.30 seconds) suminf.    3.52174 (9) obj. -415.047 iterations 284
Cbc0038I Pass   5: (1.31 seconds) suminf.    3.52174 (9) obj. -415.047 iterations 261
Cbc0038I Pass   6: (1.32 seconds) suminf.    3.52174 (9) obj. -415.047 iterations 464
Cbc0038I Pass   7: (1.33 seconds) suminf.    2.30424 (22) obj. -397.152 iterations 410
Cbc0038I Pass   8: (1.33 seconds) suminf.    1.84211 (5) obj. -398.957 iterations 206
Cbc0038I Pass   9: (1.34 seconds) suminf.    1.70489 (31) obj. -397.152 iterations 357
Cbc0038I Pass  10: (1.35 seconds) suminf.    2.84211 (9) obj. -402.17 iterations 225
Cbc0038I Pass  11: (1.36 seconds) suminf.    2.13158 (9) obj. -409.151 iterations 330
Cbc0038I Pass  12: (1.37 seconds) suminf.    0.58925 (31) obj. -397.152 iterations 375
Cbc0038I Pass  13: (1.38 seconds) suminf.    2.85149 (25) obj. -412.971 iterations 217
Cbc0038I Pass  14: (1.39 seconds) suminf.    2.58750 (29) obj. -411.578 iterations 342
Cbc0038I Pass  15: (1.40 seconds) suminf.    2.36842 (5) obj. -406.742 iterations 504
Cbc0038I Pass  16: (1.41 seconds) suminf.    2.46154 (8) obj. -419.172 iterations 388
Cbc0038I Pass  17: (1.41 seconds) suminf.    2.46154 (8) obj. -419.172 iterations 182
Cbc0038I Pass  18: (1.42 seconds) suminf.    0.00000 (0) obj. -415.437 iterations 146
Cbc0038I Solution found of -415.437
Cbc0038I Before mini branch and bound, 734 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3305 rows 816 columns, reduced to 78 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (1.44 seconds)
Cbc0038I Round again with cutoff of -418.471
Cbc0038I Reduced cost fixing fixed 56 variables on major pass 3
Cbc0038I Pass  19: (1.44 seconds) suminf.    6.15789 (13) obj. -427.079 iterations 0
Cbc0038I Pass  20: (1.45 seconds) suminf.    3.52089 (24) obj. -418.471 iterations 552
Cbc0038I Pass  21: (1.46 seconds) suminf.    4.36364 (16) obj. -420.849 iterations 287
Cbc0038I Pass  22: (1.47 seconds) suminf.    4.29927 (20) obj. -418.471 iterations 191
Cbc0038I Pass  23: (1.47 seconds) suminf.    3.94959 (20) obj. -418.471 iterations 332
Cbc0038I Pass  24: (1.48 seconds) suminf.    3.21279 (22) obj. -418.471 iterations 294
Cbc0038I Pass  25: (1.49 seconds) suminf.    3.09164 (24) obj. -418.471 iterations 264
Cbc0038I Pass  26: (1.49 seconds) suminf.    3.87879 (16) obj. -420.756 iterations 241
Cbc0038I Pass  27: (1.51 seconds) suminf.    3.65767 (19) obj. -418.471 iterations 522
Cbc0038I Pass  28: (1.52 seconds) suminf.    3.91724 (21) obj. -418.471 iterations 462
Cbc0038I Pass  29: (1.53 seconds) suminf.    0.38393 (22) obj. -418.471 iterations 474
Cbc0038I Pass  30: (1.54 seconds) suminf.    0.37059 (24) obj. -418.471 iterations 298
Cbc0038I Pass  31: (1.54 seconds) suminf.    0.48485 (16) obj. -418.828 iterations 231
Cbc0038I Pass  32: (1.55 seconds) suminf.    0.50247 (21) obj. -418.471 iterations 309
Cbc0038I Pass  33: (1.56 seconds) suminf.    0.50906 (12) obj. -418.471 iterations 529
Cbc0038I Pass  34: (1.57 seconds) suminf.    4.11571 (26) obj. -418.471 iterations 267
Cbc0038I Pass  35: (1.58 seconds) suminf.    3.92573 (22) obj. -418.471 iterations 437
Cbc0038I Pass  36: (1.59 seconds) suminf.    3.52089 (24) obj. -418.471 iterations 341
Cbc0038I Pass  37: (1.60 seconds) suminf.    4.36364 (16) obj. -420.849 iterations 239
Cbc0038I Pass  38: (1.60 seconds) suminf.    3.83900 (22) obj. -418.471 iterations 262
Cbc0038I Pass  39: (1.62 seconds) suminf.    7.83888 (22) obj. -418.471 iterations 501
Cbc0038I Pass  40: (1.63 seconds) suminf.    3.67724 (37) obj. -418.471 iterations 352
Cbc0038I Pass  41: (1.64 seconds) suminf.    5.67376 (26) obj. -418.471 iterations 326
Cbc0038I Pass  42: (1.64 seconds) suminf.    5.66535 (17) obj. -418.471 iterations 240
Cbc0038I Pass  43: (1.65 seconds) suminf.    5.29517 (17) obj. -418.471 iterations 160
Cbc0038I Solution found of -423.089
Cbc0038I Before mini branch and bound, 661 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3305 rows 816 columns, reduced to 54 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -423.089 to -424.339 (1.67 seconds)
Cbc0038I Round again with cutoff of -426.22
Cbc0038I Reduced cost fixing fixed 117 variables on major pass 4
Cbc0038I Pass  44: (1.67 seconds) suminf.    7.14286 (25) obj. -428.11 iterations 17
Cbc0038I Pass  45: (1.69 seconds) suminf.   10.63217 (32) obj. -426.22 iterations 502
Cbc0038I Pass  46: (1.70 seconds) suminf.    9.23077 (24) obj. -428.402 iterations 367
Cbc0038I Pass  47: (1.70 seconds) suminf.   11.29594 (39) obj. -426.22 iterations 430
Cbc0038I Pass  48: (1.71 seconds) suminf.   12.27378 (38) obj. -426.22 iterations 346
Cbc0038I Pass  49: (1.72 seconds) suminf.   12.16611 (44) obj. -426.22 iterations 20
Cbc0038I Pass  50: (1.73 seconds) suminf.   13.57143 (45) obj. -426.22 iterations 473
Cbc0038I Pass  51: (1.73 seconds) suminf.   13.57143 (45) obj. -426.22 iterations 1
Cbc0038I Pass  52: (1.74 seconds) suminf.   13.57143 (45) obj. -426.22 iterations 475
Cbc0038I Pass  53: (1.74 seconds) suminf.   13.57143 (45) obj. -426.22 iterations 15
Cbc0038I Pass  54: (1.75 seconds) suminf.   13.57143 (45) obj. -426.22 iterations 329
Cbc0038I Pass  55: (1.75 seconds) suminf.   16.08969 (44) obj. -426.22 iterations 337
Cbc0038I Pass  56: (1.76 seconds) suminf.   12.16611 (44) obj. -426.22 iterations 10
Cbc0038I Pass  57: (1.76 seconds) suminf.   12.16611 (44) obj. -426.22 iterations 0
Cbc0038I Pass  58: (1.76 seconds) suminf.   12.16611 (44) obj. -426.22 iterations 8
Cbc0038I Pass  59: (1.77 seconds) suminf.    5.71429 (20) obj. -429.211 iterations 439
Cbc0038I Pass  60: (1.78 seconds) suminf.    1.35782 (13) obj. -426.22 iterations 577
Cbc0038I Pass  61: (1.79 seconds) suminf.    1.35782 (13) obj. -426.22 iterations 1
Cbc0038I Pass  62: (1.79 seconds) suminf.    1.50000 (6) obj. -426.74 iterations 309
Cbc0038I Pass  63: (1.81 seconds) suminf.    2.11673 (18) obj. -426.22 iterations 700
Cbc0038I Pass  64: (1.81 seconds) suminf.    4.34134 (16) obj. -426.22 iterations 48
Cbc0038I Pass  65: (1.82 seconds) suminf.    6.00000 (12) obj. -426.467 iterations 587
Cbc0038I Pass  66: (1.83 seconds) suminf.    6.00000 (12) obj. -426.467 iterations 275
Cbc0038I Pass  67: (1.83 seconds) suminf.    5.98513 (37) obj. -426.22 iterations 148
Cbc0038I Pass  68: (1.85 seconds) suminf.    1.35782 (13) obj. -426.22 iterations 657
Cbc0038I Pass  69: (1.85 seconds) suminf.    1.40186 (20) obj. -426.22 iterations 161
Cbc0038I Pass  70: (1.86 seconds) suminf.    2.46103 (24) obj. -426.22 iterations 215
Cbc0038I Pass  71: (1.87 seconds) suminf.    1.88637 (13) obj. -426.22 iterations 326
Cbc0038I Pass  72: (1.88 seconds) suminf.    2.00000 (6) obj. -426.635 iterations 333
Cbc0038I Pass  73: (1.88 seconds) suminf.    2.00000 (6) obj. -426.635 iterations 172
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 687 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3305 rows 816 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (1.90 seconds)
Cbc0038I After 1.90 seconds - Feasibility pump exiting with objective of -424.339 - took 0.65 seconds
Cbc0012I Integer solution of -424.33907 found by feasibility pump after 0 iterations and 0 nodes (1.90 seconds)
Cbc0038I Full problem 3305 rows 816 columns, reduced to 2 rows 3 columns
Cbc0012I Integer solution of -425.82841 found by DiveCoefficient after 186 iterations and 0 nodes (2.01 seconds)
Cbc0031I 4 added rows had average density of 35
Cbc0013I At root node, 4 cuts changed objective from -430.60841 to -425.87994 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 54 row cuts average 48.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -425.82841 best solution, best possible -425.87994 (2.02 seconds)
Cbc0001I Search completed - best objective -425.8284075222811, took 316 iterations and 2 nodes (2.07 seconds)
Cbc0032I Strong branching done 26 times (280 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 116 variables fixed on reduced cost
Cuts at root node changed objective from -430.608 to -425.88
Probing was tried 11 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 11 times and created 73 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                425.82840752
Enumerated nodes:               2
Total iterations:               316
Time (CPU seconds):             2.07
Time (Wallclock seconds):       2.36

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.76   (Wallclock seconds):       3.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/0408bceaf7fd4505a5c84f487daf9502-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/0408bceaf7fd4505a5c84f487daf9502-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 625622 COLUMNS
At line 2505764 RHS
At line 3131382 BOUNDS
At line 3134190 ENDATA
Problem MODEL has 625617 rows, 2807 columns and 636175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 374.122 - 0.74 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 252 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 3852 rows, 946 columns (946 integer (946 of which binary)) and 10414 elements
Cbc0038I Initial state - 28 integers unsatisfied sum - 13.3913
Cbc0038I Pass   1: (1.36 seconds) suminf.    2.40000 (6) obj. -369.912 iterations 619
Cbc0038I Solution found of -355.642
Cbc0038I Rounding solution of -359.893 is better than previous of -355.642

Cbc0038I Before mini branch and bound, 909 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -359.893 to -364.729 (1.44 seconds)
Cbc0038I Round again with cutoff of -365.669
Cbc0038I Reduced cost fixing fixed 114 variables on major pass 2
Cbc0038I Pass   2: (1.44 seconds) suminf.    2.40000 (6) obj. -369.912 iterations 0
Cbc0038I Pass   3: (1.45 seconds) suminf.    1.19737 (19) obj. -365.669 iterations 315
Cbc0038I Pass   4: (1.46 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 212
Cbc0038I Pass   5: (1.46 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 18
Cbc0038I Pass   6: (1.46 seconds) suminf.    1.84615 (16) obj. -367.276 iterations 169
Cbc0038I Pass   7: (1.46 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 158
Cbc0038I Pass   8: (1.47 seconds) suminf.    2.76280 (6) obj. -365.669 iterations 321
Cbc0038I Pass   9: (1.48 seconds) suminf.    1.10674 (19) obj. -365.669 iterations 256
Cbc0038I Pass  10: (1.48 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 219
Cbc0038I Pass  11: (1.49 seconds) suminf.    0.82930 (4) obj. -365.669 iterations 416
Cbc0038I Pass  12: (1.50 seconds) suminf.    0.82930 (4) obj. -365.669 iterations 258
Cbc0038I Pass  13: (1.51 seconds) suminf.    1.20000 (3) obj. -368.766 iterations 482
Cbc0038I Pass  14: (1.51 seconds) suminf.    0.50881 (19) obj. -365.669 iterations 250
Cbc0038I Pass  15: (1.52 seconds) suminf.    1.20000 (3) obj. -368.766 iterations 200
Cbc0038I Pass  16: (1.52 seconds) suminf.    0.82930 (4) obj. -365.669 iterations 188
Cbc0038I Pass  17: (1.53 seconds) suminf.    0.82930 (4) obj. -365.669 iterations 430
Cbc0038I Pass  18: (1.54 seconds) suminf.    2.51368 (8) obj. -365.669 iterations 205
Cbc0038I Pass  19: (1.55 seconds) suminf.    1.19737 (19) obj. -365.669 iterations 351
Cbc0038I Pass  20: (1.55 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 244
Cbc0038I Pass  21: (1.56 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 20
Cbc0038I Pass  22: (1.56 seconds) suminf.    6.25289 (18) obj. -365.669 iterations 192
Cbc0038I Pass  23: (1.57 seconds) suminf.    6.03750 (22) obj. -365.669 iterations 257
Cbc0038I Pass  24: (1.57 seconds) suminf.    5.70184 (12) obj. -365.669 iterations 123
Cbc0038I Pass  25: (1.57 seconds) suminf.    1.23077 (16) obj. -366.618 iterations 45
Cbc0038I Pass  26: (1.57 seconds) suminf.    1.23077 (16) obj. -366.618 iterations 4
Cbc0038I Pass  27: (1.59 seconds) suminf.    7.43590 (24) obj. -365.669 iterations 523
Cbc0038I Pass  28: (1.60 seconds) suminf.    3.85180 (25) obj. -365.669 iterations 477
Cbc0038I Pass  29: (1.61 seconds) suminf.    2.83333 (17) obj. -367.397 iterations 213
Cbc0038I Pass  30: (1.62 seconds) suminf.    2.34203 (23) obj. -365.669 iterations 324
Cbc0038I Pass  31: (1.62 seconds) suminf.    2.83333 (17) obj. -367.397 iterations 200
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 854 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 55 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -364.729 to -364.744 (1.65 seconds)
Cbc0038I Round again with cutoff of -367.359
Cbc0038I Reduced cost fixing fixed 125 variables on major pass 3
Cbc0038I Pass  31: (1.66 seconds) suminf.    2.40000 (6) obj. -369.912 iterations 0
Cbc0038I Pass  32: (1.66 seconds) suminf.    1.57468 (19) obj. -367.359 iterations 310
Cbc0038I Pass  33: (1.67 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 227
Cbc0038I Pass  34: (1.67 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 20
Cbc0038I Pass  35: (1.68 seconds) suminf.    2.64322 (27) obj. -367.359 iterations 205
Cbc0038I Pass  36: (1.68 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 190
Cbc0038I Pass  37: (1.69 seconds) suminf.    2.59670 (11) obj. -367.359 iterations 233
Cbc0038I Pass  38: (1.69 seconds) suminf.    1.20000 (3) obj. -368.766 iterations 208
Cbc0038I Pass  39: (1.70 seconds) suminf.    0.88612 (19) obj. -367.359 iterations 296
Cbc0038I Pass  40: (1.70 seconds) suminf.    1.20000 (3) obj. -368.766 iterations 202
Cbc0038I Pass  41: (1.72 seconds) suminf.    1.16209 (7) obj. -367.359 iterations 517
Cbc0038I Pass  42: (1.72 seconds) suminf.    1.05487 (10) obj. -367.359 iterations 314
Cbc0038I Pass  43: (1.73 seconds) suminf.    2.75406 (16) obj. -367.359 iterations 352
Cbc0038I Pass  44: (1.74 seconds) suminf.    2.80157 (15) obj. -367.359 iterations 271
Cbc0038I Pass  45: (1.74 seconds) suminf.    4.39517 (23) obj. -367.359 iterations 334
Cbc0038I Pass  46: (1.76 seconds) suminf.    1.30816 (13) obj. -367.359 iterations 387
Cbc0038I Pass  47: (1.76 seconds) suminf.    1.09174 (14) obj. -367.359 iterations 243
Cbc0038I Pass  48: (1.77 seconds) suminf.    1.54627 (10) obj. -367.359 iterations 412
Cbc0038I Pass  49: (1.78 seconds) suminf.    1.22204 (24) obj. -367.359 iterations 265
Cbc0038I Pass  50: (1.79 seconds) suminf.    1.65892 (17) obj. -367.359 iterations 511
Cbc0038I Pass  51: (1.80 seconds) suminf.    1.57055 (21) obj. -367.359 iterations 369
Cbc0038I Pass  52: (1.81 seconds) suminf.    2.26572 (30) obj. -367.359 iterations 635
Cbc0038I Pass  53: (1.82 seconds) suminf.    1.57468 (19) obj. -367.359 iterations 22
Cbc0038I Pass  54: (1.82 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 233
Cbc0038I Pass  55: (1.83 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 16
Cbc0038I Pass  56: (1.84 seconds) suminf.    3.33846 (13) obj. -367.359 iterations 437
Cbc0038I Pass  57: (1.84 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 366
Cbc0038I Pass  58: (1.85 seconds) suminf.    2.03478 (13) obj. -367.359 iterations 244
Cbc0038I Pass  59: (1.85 seconds) suminf.    0.60000 (3) obj. -371.057 iterations 196
Cbc0038I Pass  60: (1.86 seconds) suminf.    2.85610 (11) obj. -367.359 iterations 486
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 778 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 142 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -364.744 to -369.983 (1.89 seconds)
Cbc0038I Round again with cutoff of -371.225
Cbc0038I Reduced cost fixing fixed 174 variables on major pass 4
Cbc0038I Pass  60: (1.90 seconds) suminf.    0.62301 (18) obj. -371.225 iterations 43
Cbc0038I Pass  61: (1.90 seconds) suminf.    0.62301 (18) obj. -371.225 iterations 13
Cbc0038I Pass  62: (1.91 seconds) suminf.    7.30700 (15) obj. -371.225 iterations 426
Cbc0038I Pass  63: (1.92 seconds) suminf.    7.17391 (15) obj. -372.372 iterations 341
Cbc0038I Pass  64: (1.93 seconds) suminf.    8.57418 (34) obj. -371.225 iterations 651
Cbc0038I Pass  65: (1.94 seconds) suminf.    6.85759 (15) obj. -371.225 iterations 207
Cbc0038I Pass  66: (1.94 seconds) suminf.    7.50000 (15) obj. -372.767 iterations 442
Cbc0038I Pass  67: (1.95 seconds) suminf.    0.62301 (18) obj. -371.225 iterations 32
Cbc0038I Pass  68: (1.95 seconds) suminf.    0.62301 (18) obj. -371.225 iterations 5
Cbc0038I Pass  69: (1.96 seconds) suminf.    7.30700 (15) obj. -371.225 iterations 381
Cbc0038I Pass  70: (1.96 seconds) suminf.    7.17391 (15) obj. -372.372 iterations 333
Cbc0038I Pass  71: (1.97 seconds) suminf.    7.74316 (16) obj. -371.225 iterations 345
Cbc0038I Pass  72: (1.97 seconds) suminf.    7.30700 (15) obj. -371.225 iterations 176
Cbc0038I Pass  73: (1.98 seconds) suminf.    5.10148 (19) obj. -371.225 iterations 336
Cbc0038I Pass  74: (1.99 seconds) suminf.    0.60000 (9) obj. -372.367 iterations 636
Cbc0038I Pass  75: (2.00 seconds) suminf.    2.22973 (11) obj. -371.225 iterations 405
Cbc0038I Pass  76: (2.01 seconds) suminf.    1.64761 (9) obj. -371.225 iterations 361
Cbc0038I Pass  77: (2.02 seconds) suminf.    1.64761 (9) obj. -371.225 iterations 244
Cbc0038I Pass  78: (2.03 seconds) suminf.    3.14959 (19) obj. -371.225 iterations 524
Cbc0038I Pass  79: (2.04 seconds) suminf.    1.55014 (10) obj. -371.225 iterations 506
Cbc0038I Pass  80: (2.04 seconds) suminf.    0.60000 (9) obj. -372.367 iterations 288
Cbc0038I Pass  81: (2.05 seconds) suminf.    3.21019 (21) obj. -371.225 iterations 439
Cbc0038I Pass  82: (2.06 seconds) suminf.    2.67658 (11) obj. -371.225 iterations 216
Cbc0038I Pass  83: (2.07 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 437
Cbc0038I Pass  84: (2.08 seconds) suminf.    1.39506 (7) obj. -371.225 iterations 494
Cbc0038I Pass  85: (2.08 seconds) suminf.    2.30263 (26) obj. -371.225 iterations 367
Cbc0038I Pass  86: (2.09 seconds) suminf.    6.40493 (16) obj. -371.225 iterations 501
Cbc0038I Pass  87: (2.10 seconds) suminf.    2.73504 (24) obj. -371.225 iterations 504
Cbc0038I Pass  88: (2.11 seconds) suminf.    1.18894 (10) obj. -371.225 iterations 272
Cbc0038I Pass  89: (2.11 seconds) suminf.    1.97865 (6) obj. -371.225 iterations 312
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 843 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -369.983 to -370.59 (2.14 seconds)
Cbc0038I Round again with cutoff of -372.094
Cbc0038I Reduced cost fixing fixed 189 variables on major pass 5
Cbc0038I Pass  89: (2.15 seconds) suminf.    7.17391 (15) obj. -372.372 iterations 84
Cbc0038I Pass  90: (2.15 seconds) suminf.    7.23913 (15) obj. -372.094 iterations 482
Cbc0038I Pass  91: (2.16 seconds) suminf.    7.17391 (15) obj. -372.372 iterations 323
Cbc0038I Pass  92: (2.17 seconds) suminf.    7.75758 (21) obj. -372.094 iterations 583
Cbc0038I Pass  93: (2.18 seconds) suminf.    8.06868 (22) obj. -372.094 iterations 296
Cbc0038I Pass  94: (2.19 seconds) suminf.    8.91922 (19) obj. -372.094 iterations 652
Cbc0038I Pass  95: (2.20 seconds) suminf.    6.79927 (26) obj. -372.094 iterations 451
Cbc0038I Pass  96: (2.21 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 582
Cbc0038I Pass  97: (2.21 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 17
Cbc0038I Pass  98: (2.22 seconds) suminf.    0.75000 (6) obj. -372.34 iterations 134
Cbc0038I Pass  99: (2.22 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 129
Cbc0038I Pass 100: (2.22 seconds) suminf.    0.89222 (7) obj. -372.094 iterations 157
Cbc0038I Pass 101: (2.23 seconds) suminf.    1.27407 (8) obj. -372.094 iterations 463
Cbc0038I Pass 102: (2.24 seconds) suminf.    0.96820 (8) obj. -372.094 iterations 496
Cbc0038I Pass 103: (2.25 seconds) suminf.    1.46142 (11) obj. -372.094 iterations 588
Cbc0038I Pass 104: (2.26 seconds) suminf.    1.64533 (12) obj. -372.094 iterations 207
Cbc0038I Pass 105: (2.27 seconds) suminf.    1.29766 (23) obj. -372.094 iterations 622
Cbc0038I Pass 106: (2.28 seconds) suminf.    1.19870 (14) obj. -372.094 iterations 356
Cbc0038I Pass 107: (2.29 seconds) suminf.    1.07776 (9) obj. -372.094 iterations 333
Cbc0038I Pass 108: (2.29 seconds) suminf.    2.45329 (10) obj. -372.094 iterations 496
Cbc0038I Pass 109: (2.30 seconds) suminf.    2.45329 (10) obj. -372.094 iterations 132
Cbc0038I Pass 110: (2.30 seconds) suminf.    6.79927 (26) obj. -372.094 iterations 166
Cbc0038I Pass 111: (2.31 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 582
Cbc0038I Pass 112: (2.33 seconds) suminf.    2.67025 (13) obj. -372.094 iterations 652
Cbc0038I Pass 113: (2.33 seconds) suminf.    2.67025 (13) obj. -372.094 iterations 18
Cbc0038I Pass 114: (2.34 seconds) suminf.    2.67025 (13) obj. -372.094 iterations 246
Cbc0038I Pass 115: (2.34 seconds) suminf.    2.45329 (10) obj. -372.094 iterations 257
Cbc0038I Pass 116: (2.35 seconds) suminf.    2.45329 (10) obj. -372.094 iterations 180
Cbc0038I Pass 117: (2.35 seconds) suminf.    1.85240 (8) obj. -372.094 iterations 177
Cbc0038I Pass 118: (2.36 seconds) suminf.    0.72727 (8) obj. -372.628 iterations 552
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 833 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 41 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -370.59 to -371.39 (2.39 seconds)
Cbc0038I Round again with cutoff of -372.905
Cbc0038I Reduced cost fixing fixed 198 variables on major pass 6
Cbc0038I Pass 118: (2.41 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 533
Cbc0038I Pass 119: (2.42 seconds) suminf.    7.06251 (18) obj. -372.905 iterations 139
Cbc0038I Pass 120: (2.42 seconds) suminf.    7.06251 (18) obj. -372.905 iterations 31
Cbc0038I Pass 121: (2.42 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 32
Cbc0038I Pass 122: (2.42 seconds) suminf.    4.70005 (26) obj. -372.905 iterations 42
Cbc0038I Pass 123: (2.43 seconds) suminf.    4.70005 (26) obj. -372.905 iterations 3
Cbc0038I Pass 124: (2.43 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 21
Cbc0038I Pass 125: (2.43 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 4
Cbc0038I Pass 126: (2.43 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 16
Cbc0038I Pass 127: (2.44 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 22
Cbc0038I Pass 128: (2.44 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 10
Cbc0038I Pass 129: (2.45 seconds) suminf.    8.57143 (18) obj. -373.731 iterations 591
Cbc0038I Pass 130: (2.46 seconds) suminf.    4.70005 (26) obj. -372.905 iterations 618
Cbc0038I Pass 131: (2.47 seconds) suminf.    4.70005 (26) obj. -372.905 iterations 19
Cbc0038I Pass 132: (2.48 seconds) suminf.    8.57143 (18) obj. -373.731 iterations 608
Cbc0038I Pass 133: (2.48 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 571
Cbc0038I Pass 134: (2.48 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 1
Cbc0038I Pass 135: (2.49 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 14
Cbc0038I Pass 136: (2.50 seconds) suminf.    8.18185 (20) obj. -372.905 iterations 604
Cbc0038I Pass 137: (2.50 seconds) suminf.    8.18185 (20) obj. -372.905 iterations 277
Cbc0038I Pass 138: (2.50 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 4
Cbc0038I Pass 139: (2.51 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 2
Cbc0038I Pass 140: (2.51 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 2
Cbc0038I Pass 141: (2.51 seconds) suminf.    4.73165 (25) obj. -372.905 iterations 2
Cbc0038I Pass 142: (2.51 seconds) suminf.    8.05761 (22) obj. -372.905 iterations 25
Cbc0038I Pass 143: (2.52 seconds) suminf.    7.06251 (18) obj. -372.905 iterations 47
Cbc0038I Pass 144: (2.52 seconds) suminf.    7.06251 (18) obj. -372.905 iterations 7
Cbc0038I Pass 145: (2.53 seconds) suminf.    8.68240 (22) obj. -372.905 iterations 567
Cbc0038I Pass 146: (2.54 seconds) suminf.    7.06251 (18) obj. -372.905 iterations 562
Cbc0038I Pass 147: (2.54 seconds) suminf.    7.98222 (24) obj. -372.905 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 894 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3852 rows 946 columns, reduced to 27 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (2.56 seconds)
Cbc0038I After 2.56 seconds - Feasibility pump exiting with objective of -371.39 - took 1.16 seconds
Cbc0012I Integer solution of -371.39003 found by feasibility pump after 0 iterations and 0 nodes (2.57 seconds)
Cbc0038I Full problem 3852 rows 946 columns, reduced to 16 rows 11 columns
Cbc0031I 4 added rows had average density of 47.5
Cbc0013I At root node, 4 cuts changed objective from -374.12153 to -372.14931 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 43 row cuts average 47.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 243.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -371.39003 best solution, best possible -372.14931 (2.70 seconds)
Cbc0001I Search completed - best objective -371.390032705867, took 725 iterations and 22 nodes (2.99 seconds)
Cbc0032I Strong branching done 206 times (1778 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 6, 248 variables fixed on reduced cost
Cuts at root node changed objective from -374.122 to -372.149
Probing was tried 36 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 36 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 36 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.075 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                371.39003271
Enumerated nodes:               22
Total iterations:               725
Time (CPU seconds):             3.04
Time (Wallclock seconds):       3.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.96   (Wallclock seconds):       4.39

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8e986d98bf6c46e487c7f562b02415ed-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8e986d98bf6c46e487c7f562b02415ed-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 257822 COLUMNS
At line 1033454 RHS
At line 1291272 BOUNDS
At line 1293162 ENDATA
Problem MODEL has 257817 rows, 1889 columns and 264173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 392.801 - 0.08 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 180 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 2073 rows, 549 columns (549 integer (549 of which binary)) and 5583 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 0.625
Cbc0038I Solution found of -389.28
Cbc0038I Before mini branch and bound, 539 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2073 rows 549 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of -389.632
Cbc0038I Reduced cost fixing fixed 88 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03092 (7) obj. -389.632 iterations 450
Cbc0038I Pass   2: suminf.    1.00000 (6) obj. -392.268 iterations 101
Cbc0038I Pass   3: suminf.    2.77704 (7) obj. -389.632 iterations 217
Cbc0038I Pass   4: suminf.    1.56802 (10) obj. -389.632 iterations 111
Cbc0038I Pass   5: suminf.    2.47352 (8) obj. -389.632 iterations 126
Cbc0038I Pass   6: suminf.    2.08333 (5) obj. -390.294 iterations 94
Cbc0038I Pass   7: suminf.    3.02751 (20) obj. -389.632 iterations 152
Cbc0038I Pass   8: suminf.    2.08333 (5) obj. -390.294 iterations 118
Cbc0038I Pass   9: suminf.    2.08333 (5) obj. -390.294 iterations 74
Cbc0038I Pass  10: suminf.    3.00793 (9) obj. -389.632 iterations 335
Cbc0038I Pass  11: suminf.    2.07348 (7) obj. -389.632 iterations 75
Cbc0038I Pass  12: suminf.    2.07348 (7) obj. -389.632 iterations 12
Cbc0038I Pass  13: suminf.    0.03092 (7) obj. -389.632 iterations 432
Cbc0038I Pass  14: suminf.    1.00000 (6) obj. -392.268 iterations 106
Cbc0038I Pass  15: suminf.    0.53333 (14) obj. -391.938 iterations 161
Cbc0038I Pass  16: suminf.    0.44444 (4) obj. -392.462 iterations 164
Cbc0038I Pass  17: suminf.    1.84311 (25) obj. -389.632 iterations 248
Cbc0038I Pass  18: suminf.    1.45202 (6) obj. -389.632 iterations 128
Cbc0038I Pass  19: suminf.    1.00000 (6) obj. -392.268 iterations 200
Cbc0038I Pass  20: suminf.    2.13012 (6) obj. -389.632 iterations 131
Cbc0038I Pass  21: suminf.    1.28701 (10) obj. -389.632 iterations 191
Cbc0038I Pass  22: suminf.    2.45240 (27) obj. -389.632 iterations 232
Cbc0038I Pass  23: suminf.    0.11858 (6) obj. -389.632 iterations 197
Cbc0038I Pass  24: suminf.    0.25000 (3) obj. -390.77 iterations 81
Cbc0038I Pass  25: suminf.    4.49681 (14) obj. -389.632 iterations 291
Cbc0038I Pass  26: suminf.    4.49681 (14) obj. -389.632 iterations 119
Cbc0038I Pass  27: suminf.    4.49681 (14) obj. -389.632 iterations 274
Cbc0038I Pass  28: suminf.    4.49681 (14) obj. -389.632 iterations 275
Cbc0038I Pass  29: suminf.    4.49681 (14) obj. -389.632 iterations 27
Cbc0038I Pass  30: suminf.    2.16064 (8) obj. -389.632 iterations 466
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 436 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2073 rows 549 columns, reduced to 37 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -389.28 - took 0.15 seconds
Cbc0012I Integer solution of -389.27992 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0031I 4 added rows had average density of 52.5
Cbc0013I At root node, 4 cuts changed objective from -392.80068 to -391.19778 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -389.27992 best solution, best possible -391.19778 (0.51 seconds)
Cbc0012I Integer solution of -389.77727 found by DiveCoefficient after 327 iterations and 4 nodes (0.57 seconds)
Cbc0001I Search completed - best objective -389.7772693426209, took 652 iterations and 14 nodes (0.67 seconds)
Cbc0032I Strong branching done 134 times (1698 iterations), fathomed 5 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 166 variables fixed on reduced cost
Cuts at root node changed objective from -392.801 to -391.198
Probing was tried 27 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 26 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 8 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                389.77726934
Enumerated nodes:               14
Total iterations:               652
Time (CPU seconds):             0.78
Time (Wallclock seconds):       0.83

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.24

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6ab38f32d1554390995af7081a8d990d-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6ab38f32d1554390995af7081a8d990d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 133321 COLUMNS
At line 535002 RHS
At line 668319 BOUNDS
At line 669875 ENDATA
Problem MODEL has 133316 rows, 1555 columns and 138107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 317.103 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 266 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 1313 rows, 380 columns (380 integer (380 of which binary)) and 3500 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.52632
Cbc0038I Solution found of -300.419
Cbc0038I Before mini branch and bound, 372 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1313 rows 380 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of -302.088
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.12881 (3) obj. -302.088 iterations 371
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -310.133 iterations 75
Cbc0038I Pass   3: suminf.    0.75000 (3) obj. -312.192 iterations 82
Cbc0038I Pass   4: suminf.    0.75000 (3) obj. -312.192 iterations 71
Cbc0038I Pass   5: suminf.    4.04762 (11) obj. -306.126 iterations 154
Cbc0038I Pass   6: suminf.    1.65344 (15) obj. -302.088 iterations 200
Cbc0038I Pass   7: suminf.    1.61121 (22) obj. -302.088 iterations 79
Cbc0038I Pass   8: suminf.    2.47619 (13) obj. -304.79 iterations 121
Cbc0038I Pass   9: suminf.    2.72957 (31) obj. -302.088 iterations 189
Cbc0038I Pass  10: suminf.    3.03825 (23) obj. -302.088 iterations 175
Cbc0038I Pass  11: suminf.    1.42781 (24) obj. -302.088 iterations 188
Cbc0038I Pass  12: suminf.    1.85714 (13) obj. -303.173 iterations 160
Cbc0038I Pass  13: suminf.    3.05349 (14) obj. -302.088 iterations 230
Cbc0038I Pass  14: suminf.    3.85714 (9) obj. -305.29 iterations 201
Cbc0038I Pass  15: suminf.    3.18182 (7) obj. -303.451 iterations 213
Cbc0038I Pass  16: suminf.    2.08286 (18) obj. -302.088 iterations 119
Cbc0038I Pass  17: suminf.    2.08286 (18) obj. -302.088 iterations 224
Cbc0038I Pass  18: suminf.    2.30769 (6) obj. -304.478 iterations 196
Cbc0038I Pass  19: suminf.    2.30769 (6) obj. -304.478 iterations 193
Cbc0038I Pass  20: suminf.    4.01886 (25) obj. -302.088 iterations 183
Cbc0038I Pass  21: suminf.    2.94910 (28) obj. -302.088 iterations 241
Cbc0038I Pass  22: suminf.    2.69506 (18) obj. -302.088 iterations 161
Cbc0038I Pass  23: suminf.    2.81733 (34) obj. -302.088 iterations 198
Cbc0038I Pass  24: suminf.    3.33333 (10) obj. -303.995 iterations 168
Cbc0038I Pass  25: suminf.    3.33333 (10) obj. -303.995 iterations 141
Cbc0038I Pass  26: suminf.    1.56693 (20) obj. -302.088 iterations 195
Cbc0038I Pass  27: suminf.    2.13825 (33) obj. -302.088 iterations 201
Cbc0038I Pass  28: suminf.    1.67496 (21) obj. -302.088 iterations 187
Cbc0038I Pass  29: suminf.    2.40615 (15) obj. -302.088 iterations 85
Cbc0038I Pass  30: suminf.    2.76650 (15) obj. -302.088 iterations 174
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 211 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1313 rows 380 columns, reduced to 265 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -300.419 to -309.743 (0.30 seconds)
Cbc0038I Round again with cutoff of -311.215
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.11062 (9) obj. -311.215 iterations 120
Cbc0038I Pass  31: suminf.    1.50000 (9) obj. -314.999 iterations 108
Cbc0038I Pass  32: suminf.    1.26040 (16) obj. -311.215 iterations 117
Cbc0038I Pass  33: suminf.    1.84021 (36) obj. -311.215 iterations 218
Cbc0038I Pass  34: suminf.    2.25000 (6) obj. -315.317 iterations 150
Cbc0038I Pass  35: suminf.    3.01895 (12) obj. -311.215 iterations 122
Cbc0038I Pass  36: suminf.    3.01895 (12) obj. -311.215 iterations 164
Cbc0038I Pass  37: suminf.    3.01895 (12) obj. -311.215 iterations 6
Cbc0038I Pass  38: suminf.    3.01895 (12) obj. -311.215 iterations 9
Cbc0038I Pass  39: suminf.    3.01895 (12) obj. -311.215 iterations 11
Cbc0038I Pass  40: suminf.    6.87373 (18) obj. -311.215 iterations 14
Cbc0038I Pass  41: suminf.    5.88555 (15) obj. -311.215 iterations 72
Cbc0038I Pass  42: suminf.    3.23591 (15) obj. -311.215 iterations 138
Cbc0038I Pass  43: suminf.    0.41379 (12) obj. -314.09 iterations 145
Cbc0038I Pass  44: suminf.    3.96875 (21) obj. -311.215 iterations 279
Cbc0038I Pass  45: suminf.    2.34091 (18) obj. -311.215 iterations 157
Cbc0038I Pass  46: suminf.    0.41379 (12) obj. -314.09 iterations 113
Cbc0038I Pass  47: suminf.    2.50933 (10) obj. -311.215 iterations 121
Cbc0038I Pass  48: suminf.    3.72687 (18) obj. -311.215 iterations 168
Cbc0038I Solution found of -313.82
Cbc0038I Before mini branch and bound, 265 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1313 rows 380 columns, reduced to 88 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I Round again with cutoff of -314.804
Cbc0038I Reduced cost fixing fixed 56 variables on major pass 4
Cbc0038I Pass  49: suminf.    1.88497 (13) obj. -314.804 iterations 131
Cbc0038I Pass  50: suminf.    2.52632 (8) obj. -317.103 iterations 111
Cbc0038I Pass  51: suminf.    2.58531 (15) obj. -314.804 iterations 116
Cbc0038I Pass  52: suminf.    2.29240 (15) obj. -314.804 iterations 201
Cbc0038I Pass  53: suminf.    2.29240 (15) obj. -314.804 iterations 58
Cbc0038I Pass  54: suminf.    2.29240 (15) obj. -314.804 iterations 90
Cbc0038I Pass  55: suminf.    2.39700 (11) obj. -314.804 iterations 122
Cbc0038I Pass  56: suminf.    2.61698 (14) obj. -314.804 iterations 21
Cbc0038I Pass  57: suminf.    6.58298 (19) obj. -314.804 iterations 346
Cbc0038I Pass  58: suminf.    6.58298 (19) obj. -314.804 iterations 55
Cbc0038I Pass  59: suminf.    6.58298 (19) obj. -314.804 iterations 6
Cbc0038I Pass  60: suminf.    6.58298 (19) obj. -314.804 iterations 2
Cbc0038I Pass  61: suminf.    2.17831 (8) obj. -314.804 iterations 266
Cbc0038I Pass  62: suminf.    1.88497 (13) obj. -314.804 iterations 124
Cbc0038I Pass  63: suminf.    2.52632 (8) obj. -317.103 iterations 96
Cbc0038I Pass  64: suminf.    2.52632 (8) obj. -317.103 iterations 61
Cbc0038I Pass  65: suminf.    2.52632 (8) obj. -317.103 iterations 106
Cbc0038I Pass  66: suminf.    2.52632 (8) obj. -317.103 iterations 121
Cbc0038I Pass  67: suminf.    2.52632 (8) obj. -317.103 iterations 101
Cbc0038I Pass  68: suminf.    2.26172 (14) obj. -314.804 iterations 113
Cbc0038I Pass  69: suminf.    2.52632 (8) obj. -317.103 iterations 119
Cbc0038I Pass  70: suminf.    2.14086 (13) obj. -314.804 iterations 123
Cbc0038I Pass  71: suminf.    2.88844 (22) obj. -314.804 iterations 174
Cbc0038I Pass  72: suminf.    4.15426 (26) obj. -314.804 iterations 181
Cbc0038I Pass  73: suminf.    2.05673 (12) obj. -314.804 iterations 205
Cbc0038I Pass  74: suminf.    2.39700 (11) obj. -314.804 iterations 213
Cbc0038I Pass  75: suminf.    2.17831 (8) obj. -314.804 iterations 217
Cbc0038I Pass  76: suminf.    2.21416 (15) obj. -314.804 iterations 132
Cbc0038I Pass  77: suminf.    2.31818 (13) obj. -314.998 iterations 140
Cbc0038I Pass  78: suminf.    2.52632 (8) obj. -317.103 iterations 128
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 291 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1313 rows 380 columns, reduced to 16 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting with objective of -313.82 - took 0.25 seconds
Cbc0012I Integer solution of -313.81953 found by feasibility pump after 0 iterations and 0 nodes (0.43 seconds)
Cbc0038I Full problem 1313 rows 380 columns, reduced to 0 rows 0 columns
Cbc0031I 4 added rows had average density of 32.5
Cbc0013I At root node, 4 cuts changed objective from -317.10266 to -314.30353 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 71 row cuts average 41.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 90.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective -313.8195312245221, took 206 iterations and 0 nodes (0.53 seconds)
Cbc0032I Strong branching done 4 times (125 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 57 variables fixed on reduced cost
Cuts at root node changed objective from -317.103 to -312.24
Probing was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 10 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                313.81953122
Enumerated nodes:               0
Total iterations:               206
Time (CPU seconds):             0.57
Time (Wallclock seconds):       0.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.83

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3d03d376419d4afe8bb9a1d12cdcd57e-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3d03d376419d4afe8bb9a1d12cdcd57e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 145634 COLUMNS
At line 584296 RHS
At line 729926 BOUNDS
At line 731510 ENDATA
Problem MODEL has 145629 rows, 1583 columns and 150473 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 333.649 - 0.05 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 220 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 1332 rows, 396 columns (396 integer (396 of which binary)) and 3531 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.33333
Cbc0038I Pass   1: suminf.    1.95652 (9) obj. -333.617 iterations 226
Cbc0038I Solution found of -279.359
Cbc0038I Before mini branch and bound, 377 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1332 rows 396 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -279.359 to -303.569 (0.19 seconds)
Cbc0038I Round again with cutoff of -306.577
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.95652 (9) obj. -333.617 iterations 0
Cbc0038I Pass   3: suminf.    2.15887 (30) obj. -306.577 iterations 247
Cbc0038I Pass   4: suminf.    2.82353 (6) obj. -310.669 iterations 117
Cbc0038I Pass   5: suminf.    2.82353 (6) obj. -310.669 iterations 11
Cbc0038I Pass   6: suminf.    2.82353 (6) obj. -310.669 iterations 71
Cbc0038I Pass   7: suminf.    2.82353 (6) obj. -310.669 iterations 59
Cbc0038I Pass   8: suminf.    3.52065 (15) obj. -306.577 iterations 70
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -318.575 iterations 151
Cbc0038I Solution found of -318.575
Cbc0038I Before mini branch and bound, 334 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1332 rows 396 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -321.59
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  10: suminf.    1.95652 (9) obj. -333.617 iterations 0
Cbc0038I Pass  11: suminf.    2.08413 (7) obj. -321.59 iterations 199
Cbc0038I Pass  12: suminf.    0.13404 (19) obj. -321.59 iterations 86
Cbc0038I Pass  13: suminf.    3.57368 (16) obj. -321.59 iterations 115
Cbc0038I Pass  14: suminf.    1.27989 (6) obj. -321.59 iterations 80
Cbc0038I Pass  15: suminf.    1.75000 (4) obj. -324.126 iterations 78
Cbc0038I Pass  16: suminf.    1.75000 (4) obj. -324.126 iterations 106
Cbc0038I Pass  17: suminf.    7.01144 (24) obj. -321.59 iterations 167
Cbc0038I Pass  18: suminf.    2.50000 (9) obj. -326.655 iterations 107
Cbc0038I Pass  19: suminf.    0.45731 (19) obj. -321.59 iterations 123
Cbc0038I Pass  20: suminf.    2.36111 (14) obj. -326.428 iterations 105
Cbc0038I Pass  21: suminf.    2.34783 (9) obj. -324.771 iterations 91
Cbc0038I Pass  22: suminf.    2.34783 (9) obj. -324.771 iterations 79
Cbc0038I Pass  23: suminf.    1.31606 (9) obj. -321.59 iterations 116
Cbc0038I Pass  24: suminf.    0.12578 (6) obj. -321.59 iterations 77
Cbc0038I Pass  25: suminf.    0.25000 (4) obj. -322.26 iterations 81
Cbc0038I Pass  26: suminf.    0.15719 (11) obj. -321.59 iterations 166
Cbc0038I Pass  27: suminf.    0.26586 (25) obj. -321.59 iterations 179
Cbc0038I Pass  28: suminf.    0.27778 (5) obj. -322.398 iterations 202
Cbc0038I Pass  29: suminf.    0.18389 (4) obj. -321.59 iterations 196
Cbc0038I Pass  30: suminf.    0.43439 (25) obj. -321.59 iterations 188
Cbc0038I Pass  31: suminf.    3.48700 (16) obj. -321.59 iterations 187
Cbc0038I Pass  32: suminf.    6.74702 (17) obj. -321.59 iterations 237
Cbc0038I Pass  33: suminf.    4.06657 (18) obj. -321.59 iterations 372
Cbc0038I Pass  34: suminf.    3.04739 (22) obj. -321.59 iterations 304
Cbc0038I Pass  35: suminf.    1.99711 (9) obj. -321.59 iterations 192
Cbc0038I Pass  36: suminf.    1.99711 (9) obj. -321.59 iterations 15
Cbc0038I Pass  37: suminf.    2.18750 (5) obj. -322.667 iterations 113
Cbc0038I Pass  38: suminf.    2.18750 (5) obj. -322.667 iterations 84
Cbc0038I Pass  39: suminf.    2.54292 (19) obj. -321.59 iterations 136
Cbc0038I Rounding solution of -319.901 is better than previous of -318.575

Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1332 rows 396 columns, reduced to 110 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -319.901 to -325.558 (0.29 seconds)
Cbc0038I Round again with cutoff of -327.985
Cbc0038I Reduced cost fixing fixed 46 variables on major pass 4
Cbc0038I Pass  39: suminf.    1.95652 (9) obj. -333.617 iterations 0
Cbc0038I Pass  40: suminf.    2.75838 (12) obj. -327.985 iterations 198
Cbc0038I Pass  41: suminf.    0.24654 (18) obj. -327.985 iterations 74
Cbc0038I Pass  42: suminf.    2.15385 (14) obj. -330.207 iterations 110
Cbc0038I Pass  43: suminf.    2.75623 (11) obj. -327.985 iterations 138
Cbc0038I Pass  44: suminf.    6.02901 (16) obj. -327.985 iterations 170
Cbc0038I Pass  45: suminf.    3.12545 (11) obj. -327.985 iterations 119
Cbc0038I Pass  46: suminf.    1.38675 (7) obj. -327.985 iterations 149
Cbc0038I Solution found of -328.707
Cbc0038I Before mini branch and bound, 326 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1332 rows 396 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -328.707 to -330.654 (0.32 seconds)
Cbc0038I Round again with cutoff of -331.552
Cbc0038I Reduced cost fixing fixed 69 variables on major pass 5
Cbc0038I Pass  47: suminf.    1.95652 (9) obj. -333.617 iterations 0
Cbc0038I Pass  48: suminf.    0.77496 (16) obj. -331.552 iterations 217
Cbc0038I Pass  49: suminf.    0.77496 (16) obj. -331.552 iterations 10
Cbc0038I Pass  50: suminf.    1.95652 (9) obj. -333.617 iterations 110
Cbc0038I Pass  51: suminf.    1.95652 (9) obj. -333.617 iterations 81
Cbc0038I Pass  52: suminf.    4.12089 (16) obj. -331.552 iterations 124
Cbc0038I Pass  53: suminf.    5.47053 (28) obj. -331.552 iterations 167
Cbc0038I Pass  54: suminf.    1.86407 (9) obj. -331.552 iterations 234
Cbc0038I Pass  55: suminf.    1.55242 (12) obj. -331.552 iterations 136
Cbc0038I Pass  56: suminf.    1.56250 (5) obj. -331.63 iterations 90
Cbc0038I Pass  57: suminf.    1.56250 (5) obj. -331.63 iterations 79
Cbc0038I Pass  58: suminf.    1.55409 (5) obj. -331.552 iterations 132
Cbc0038I Pass  59: suminf.    1.56250 (5) obj. -331.63 iterations 126
Cbc0038I Pass  60: suminf.    1.65415 (11) obj. -331.552 iterations 214
Cbc0038I Pass  61: suminf.    1.56250 (5) obj. -331.63 iterations 161
Cbc0038I Pass  62: suminf.    1.55409 (5) obj. -331.552 iterations 145
Cbc0038I Pass  63: suminf.    1.56250 (5) obj. -331.63 iterations 114
Cbc0038I Pass  64: suminf.    1.56509 (9) obj. -331.552 iterations 178
Cbc0038I Pass  65: suminf.    1.97646 (21) obj. -331.552 iterations 170
Cbc0038I Pass  66: suminf.    1.90238 (13) obj. -331.552 iterations 129
Cbc0038I Pass  67: suminf.    1.90238 (13) obj. -331.552 iterations 121
Cbc0038I Pass  68: suminf.    1.86407 (9) obj. -331.552 iterations 155
Cbc0038I Pass  69: suminf.    1.95652 (9) obj. -332.264 iterations 106
Cbc0038I Pass  70: suminf.    1.95652 (9) obj. -332.264 iterations 98
Cbc0038I Pass  71: suminf.    2.46587 (16) obj. -331.552 iterations 141
Cbc0038I Pass  72: suminf.    1.93404 (16) obj. -331.552 iterations 167
Cbc0038I Pass  73: suminf.    1.86407 (9) obj. -331.552 iterations 134
Cbc0038I Pass  74: suminf.    1.93216 (18) obj. -331.552 iterations 194
Cbc0038I Pass  75: suminf.    1.90167 (13) obj. -331.552 iterations 206
Cbc0038I Pass  76: suminf.    1.65415 (11) obj. -331.552 iterations 175
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 314 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1332 rows 396 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.39 seconds)
Cbc0038I After 0.39 seconds - Feasibility pump exiting with objective of -330.654 - took 0.21 seconds
Cbc0012I Integer solution of -330.65362 found by feasibility pump after 0 iterations and 0 nodes (0.39 seconds)
Cbc0031I 8 added rows had average density of 27.5
Cbc0013I At root node, 8 cuts changed objective from -333.64887 to -331.62335 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 89 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 97.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -330.65362 best solution, best possible -331.47195 (0.47 seconds)
Cbc0001I Search completed - best objective -330.6536241292779, took 481 iterations and 2 nodes (0.49 seconds)
Cbc0032I Strong branching done 94 times (973 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 74 variables fixed on reduced cost
Cuts at root node changed objective from -333.649 to -331.472
Probing was tried 15 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 15 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 15 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                330.65362413
Enumerated nodes:               2
Total iterations:               481
Time (CPU seconds):             0.52
Time (Wallclock seconds):       0.57

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.73   (Wallclock seconds):       0.80

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3a4fbd85545c4fa7b67f733adb9efffc-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3a4fbd85545c4fa7b67f733adb9efffc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32299 COLUMNS
At line 130056 RHS
At line 162351 BOUNDS
At line 163145 ENDATA
Problem MODEL has 32294 rows, 793 columns and 34407 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 319.985 - 0.01 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 338 substitutions
Cgl0004I processed model has 335 rows, 131 columns (131 integer (131 of which binary)) and 866 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.5
Cbc0038I Solution found of -305.353
Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 131 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -306.816
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02816 (3) obj. -306.816 iterations 87
Cbc0038I Pass   2: suminf.    0.27778 (2) obj. -316.547 iterations 18
Cbc0038I Pass   3: suminf.    4.00000 (10) obj. -315.687 iterations 36
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -319.093 iterations 30
Cbc0038I Solution found of -319.093
Cbc0038I Before mini branch and bound, 112 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 131 columns, reduced to 19 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -319.093 to -319.093 (0.05 seconds)
Cbc0038I Round again with cutoff of -319.271
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass   5: suminf.    1.36621 (11) obj. -319.271 iterations 53
Cbc0038I Pass   6: suminf.    1.50000 (6) obj. -319.985 iterations 42
Cbc0038I Pass   7: suminf.    1.50007 (12) obj. -319.271 iterations 40
Cbc0038I Pass   8: suminf.    1.50007 (12) obj. -319.271 iterations 0
Cbc0038I Pass   9: suminf.    1.50000 (6) obj. -319.985 iterations 45
Cbc0038I Pass  10: suminf.    2.03342 (9) obj. -319.271 iterations 55
Cbc0038I Pass  11: suminf.    1.46850 (10) obj. -319.271 iterations 33
Cbc0038I Pass  12: suminf.    1.54595 (10) obj. -319.271 iterations 41
Cbc0038I Pass  13: suminf.    1.54585 (10) obj. -319.271 iterations 34
Cbc0038I Pass  14: suminf.    1.36621 (11) obj. -319.271 iterations 51
Cbc0038I Pass  15: suminf.    1.36621 (11) obj. -319.271 iterations 30
Cbc0038I Pass  16: suminf.    1.50000 (6) obj. -319.985 iterations 29
Cbc0038I Pass  17: suminf.    1.38707 (9) obj. -319.271 iterations 45
Cbc0038I Pass  18: suminf.    1.50000 (6) obj. -319.985 iterations 35
Cbc0038I Pass  19: suminf.    1.42685 (6) obj. -319.271 iterations 23
Cbc0038I Pass  20: suminf.    1.42685 (6) obj. -319.271 iterations 37
Cbc0038I Pass  21: suminf.    1.42685 (6) obj. -319.271 iterations 42
Cbc0038I Pass  22: suminf.    1.77371 (10) obj. -319.271 iterations 56
Cbc0038I Pass  23: suminf.    1.42685 (6) obj. -319.271 iterations 63
Cbc0038I Pass  24: suminf.    1.42685 (6) obj. -319.271 iterations 31
Cbc0038I Pass  25: suminf.    1.50000 (6) obj. -319.985 iterations 40
Cbc0038I Pass  26: suminf.    1.42685 (6) obj. -319.271 iterations 33
Cbc0038I Pass  27: suminf.    1.36621 (11) obj. -319.271 iterations 41
Cbc0038I Pass  28: suminf.    1.36621 (11) obj. -319.271 iterations 33
Cbc0038I Pass  29: suminf.    1.38707 (9) obj. -319.271 iterations 59
Cbc0038I Pass  30: suminf.    1.38707 (9) obj. -319.271 iterations 44
Cbc0038I Pass  31: suminf.    1.50000 (6) obj. -319.985 iterations 45
Cbc0038I Pass  32: suminf.    1.50000 (6) obj. -319.985 iterations 34
Cbc0038I Pass  33: suminf.    1.52512 (10) obj. -319.271 iterations 34
Cbc0038I Pass  34: suminf.    1.77371 (10) obj. -319.271 iterations 40
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 131 columns, reduced to 12 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -319.093 - took 0.02 seconds
Cbc0012I Integer solution of -319.09292 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 335 rows 131 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -319.9848 to -319.9848 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -319.0929179161711, took 0 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Cuts at root node changed objective from -319.985 to -319.985
Probing was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                319.09291792
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.08
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.16

