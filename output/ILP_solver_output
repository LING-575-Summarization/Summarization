Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/e6ae895b62934841bc47d974aaa8b432-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/e6ae895b62934841bc47d974aaa8b432-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 485015 COLUMNS
At line 1943132 RHS
At line 2428143 BOUNDS
At line 2430849 ENDATA
Problem MODEL has 485010 rows, 2705 columns and 494535 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 374.536 - 0.73 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 103 strengthened rows, 216 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 123 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 3217 rows, 823 columns (823 integer (823 of which binary)) and 8801 elements
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.44444
Cbc0038I Solution found of -361.25
Cbc0038I Before mini branch and bound, 803 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3217 rows 823 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.57 seconds)
Cbc0038I Round again with cutoff of -362.578
Cbc0038I Reduced cost fixing fixed 60 variables on major pass 2
Cbc0038I Pass   1: (1.59 seconds) suminf.    0.12072 (4) obj. -362.578 iterations 758
Cbc0038I Pass   2: (1.60 seconds) suminf.    0.88889 (4) obj. -371.033 iterations 166
Cbc0038I Pass   3: (1.60 seconds) suminf.    1.33333 (3) obj. -367.816 iterations 209
Cbc0038I Pass   4: (1.61 seconds) suminf.    6.94191 (24) obj. -362.578 iterations 401
Cbc0038I Pass   5: (1.61 seconds) suminf.    0.57268 (9) obj. -362.578 iterations 205
Cbc0038I Solution found of -363.426
Cbc0038I Before mini branch and bound, 774 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3217 rows 823 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (1.65 seconds)
Cbc0038I Round again with cutoff of -365.648
Cbc0038I Reduced cost fixing fixed 70 variables on major pass 3
Cbc0038I Pass   6: (1.65 seconds) suminf.    0.39964 (4) obj. -365.648 iterations 0
Cbc0038I Pass   7: (1.66 seconds) suminf.    0.88889 (4) obj. -371.033 iterations 157
Cbc0038I Pass   8: (1.66 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 227
Cbc0038I Pass   9: (1.67 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 200
Cbc0038I Pass  10: (1.68 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 413
Cbc0038I Pass  11: (1.69 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 38
Cbc0038I Pass  12: (1.69 seconds) suminf.    2.82353 (8) obj. -371.8 iterations 256
Cbc0038I Pass  13: (1.70 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 17
Cbc0038I Pass  14: (1.70 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 1
Cbc0038I Pass  15: (1.71 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 526
Cbc0038I Pass  16: (1.72 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 40
Cbc0038I Pass  17: (1.72 seconds) suminf.    2.82353 (8) obj. -371.8 iterations 241
Cbc0038I Pass  18: (1.73 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 17
Cbc0038I Pass  19: (1.73 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 1
Cbc0038I Pass  20: (1.75 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 374
Cbc0038I Pass  21: (1.75 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 34
Cbc0038I Pass  22: (1.76 seconds) suminf.    2.82353 (8) obj. -371.8 iterations 230
Cbc0038I Pass  23: (1.76 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 15
Cbc0038I Pass  24: (1.76 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 1
Cbc0038I Pass  25: (1.77 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 323
Cbc0038I Pass  26: (1.78 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 30
Cbc0038I Pass  27: (1.78 seconds) suminf.    2.82353 (8) obj. -371.8 iterations 228
Cbc0038I Pass  28: (1.78 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 18
Cbc0038I Pass  29: (1.79 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 1
Cbc0038I Pass  30: (1.79 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 325
Cbc0038I Pass  31: (1.80 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 33
Cbc0038I Pass  32: (1.80 seconds) suminf.    2.82353 (8) obj. -371.8 iterations 225
Cbc0038I Pass  33: (1.81 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 14
Cbc0038I Pass  34: (1.81 seconds) suminf.    0.47059 (8) obj. -368.129 iterations 1
Cbc0038I Pass  35: (1.82 seconds) suminf.    3.14901 (11) obj. -365.648 iterations 414
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 788 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3217 rows 823 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.83 seconds)
Cbc0038I After 1.83 seconds - Feasibility pump exiting with objective of -363.426 - took 0.26 seconds
Cbc0012I Integer solution of -363.42599 found by feasibility pump after 0 iterations and 0 nodes (1.83 seconds)
Cbc0038I Full problem 3217 rows 823 columns, reduced to 3 rows 6 columns
Cbc0012I Integer solution of -373.01494 found by DiveCoefficient after 167 iterations and 0 nodes (2.00 seconds)
Cbc0031I 6 added rows had average density of 106.66667
Cbc0013I At root node, 6 cuts changed objective from -374.53625 to -373.01496 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 23 column cuts (23 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 113.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0001I Search completed - best objective -373.0149428222721, took 167 iterations and 0 nodes (2.00 seconds)
Cbc0032I Strong branching done 2 times (11 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 65 variables fixed on reduced cost
Cuts at root node changed objective from -374.536 to -373.015
Probing was tried 11 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Gomory was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 11 times and created 79 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                373.01494282
Enumerated nodes:               0
Total iterations:               167
Time (CPU seconds):             1.89
Time (Wallclock seconds):       2.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.73   (Wallclock seconds):       3.63

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd58d5ee28ae454394921bc774fccc73-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd58d5ee28ae454394921bc774fccc73-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 728986 COLUMNS
At line 2919556 RHS
At line 3648538 BOUNDS
At line 3651662 ENDATA
Problem MODEL has 728981 rows, 3123 columns and 740345 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 386.051 - 0.83 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 206 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 4064 rows, 1013 columns (1013 integer (1013 of which binary)) and 10956 elements
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.09091
Cbc0038I Pass   1: (1.61 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 671
Cbc0038I Solution found of -290.611
Cbc0038I Rounding solution of -324.76 is better than previous of -290.611

Cbc0038I Before mini branch and bound, 978 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -324.76 to -357.212 (1.70 seconds)
Cbc0038I Round again with cutoff of -360.096
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   2: (1.70 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 0
Cbc0038I Pass   3: (1.72 seconds) suminf.    0.92142 (7) obj. -360.096 iterations 817
Cbc0038I Pass   4: (1.73 seconds) suminf.    0.37500 (1) obj. -361.651 iterations 263
Cbc0038I Pass   5: (1.74 seconds) suminf.    0.27029 (1) obj. -360.096 iterations 211
Cbc0038I Pass   6: (1.75 seconds) suminf.    1.15991 (7) obj. -360.096 iterations 443
Cbc0038I Pass   7: (1.76 seconds) suminf.    0.20000 (1) obj. -362.911 iterations 225
Cbc0038I Solution found of -360.917
Cbc0038I Rounding solution of -363.654 is better than previous of -360.917

Cbc0038I Before mini branch and bound, 968 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 8 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -363.654 to -378.244 (1.80 seconds)
Cbc0038I Round again with cutoff of -379.805
Cbc0038I Reduced cost fixing fixed 148 variables on major pass 3
Cbc0038I Pass   8: (1.81 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 0
Cbc0038I Pass   9: (1.82 seconds) suminf.    9.38537 (23) obj. -379.805 iterations 499
Cbc0038I Pass  10: (1.82 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 279
Cbc0038I Pass  11: (1.83 seconds) suminf.    5.13397 (17) obj. -379.805 iterations 292
Cbc0038I Pass  12: (1.84 seconds) suminf.    1.85407 (6) obj. -379.805 iterations 539
Cbc0038I Solution found of -381.023
Cbc0038I Before mini branch and bound, 966 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 17 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (1.87 seconds)
Cbc0038I Round again with cutoff of -382.531
Cbc0038I Reduced cost fixing fixed 182 variables on major pass 4
Cbc0038I Pass  13: (1.87 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 0
Cbc0038I Pass  14: (1.88 seconds) suminf.    6.15484 (23) obj. -382.531 iterations 287
Cbc0038I Pass  15: (1.89 seconds) suminf.    5.49067 (21) obj. -382.531 iterations 331
Cbc0038I Pass  16: (1.89 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 309
Cbc0038I Pass  17: (1.91 seconds) suminf.    7.35666 (23) obj. -382.531 iterations 634
Cbc0038I Pass  18: (1.91 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 633
Cbc0038I Pass  19: (1.92 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 51
Cbc0038I Pass  20: (1.93 seconds) suminf.    4.84530 (14) obj. -382.531 iterations 340
Cbc0038I Pass  21: (1.93 seconds) suminf.    4.84530 (14) obj. -382.531 iterations 234
Cbc0038I Pass  22: (1.95 seconds) suminf.    5.86985 (14) obj. -382.531 iterations 317
Cbc0038I Pass  23: (1.95 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 226
Cbc0038I Pass  24: (1.95 seconds) suminf.    0.40935 (1) obj. -382.531 iterations 148
Cbc0038I Pass  25: (1.96 seconds) suminf.    0.85584 (13) obj. -382.531 iterations 269
Cbc0038I Pass  26: (1.97 seconds) suminf.    0.40935 (1) obj. -382.531 iterations 261
Cbc0038I Pass  27: (1.97 seconds) suminf.    0.00000 (0) obj. -383.288 iterations 257
Cbc0038I Solution found of -383.288
Cbc0038I Before mini branch and bound, 948 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -383.288 to -383.288 (2.00 seconds)
Cbc0038I Round again with cutoff of -384.117
Cbc0038I Reduced cost fixing fixed 210 variables on major pass 5
Cbc0038I Pass  28: (2.00 seconds) suminf.    2.06897 (20) obj. -385.874 iterations 0
Cbc0038I Pass  29: (2.01 seconds) suminf.    2.39968 (20) obj. -384.117 iterations 96
Cbc0038I Pass  30: (2.01 seconds) suminf.    2.91615 (12) obj. -384.117 iterations 239
Cbc0038I Pass  31: (2.02 seconds) suminf.    1.37931 (20) obj. -385.2 iterations 192
Cbc0038I Pass  32: (2.03 seconds) suminf.    3.60160 (23) obj. -384.117 iterations 821
Cbc0038I Pass  33: (2.04 seconds) suminf.    1.37931 (20) obj. -385.2 iterations 656
Cbc0038I Pass  34: (2.05 seconds) suminf.    1.55556 (7) obj. -384.818 iterations 169
Cbc0038I Pass  35: (2.05 seconds) suminf.    1.37931 (20) obj. -385.2 iterations 252
Cbc0038I Pass  36: (2.05 seconds) suminf.    2.18966 (23) obj. -384.117 iterations 305
Cbc0038I Pass  37: (2.06 seconds) suminf.    2.06897 (20) obj. -384.273 iterations 187
Cbc0038I Pass  38: (2.07 seconds) suminf.    2.53551 (21) obj. -384.117 iterations 828
Cbc0038I Pass  39: (2.08 seconds) suminf.    4.62333 (21) obj. -384.117 iterations 54
Cbc0038I Pass  40: (2.09 seconds) suminf.    2.75862 (20) obj. -384.947 iterations 590
Cbc0038I Pass  41: (2.09 seconds) suminf.    2.75862 (20) obj. -384.947 iterations 0
Cbc0038I Pass  42: (2.09 seconds) suminf.    2.91485 (20) obj. -384.117 iterations 79
Cbc0038I Pass  43: (2.09 seconds) suminf.    1.63636 (9) obj. -384.998 iterations 197
Cbc0038I Pass  44: (2.10 seconds) suminf.    1.37931 (20) obj. -385.2 iterations 157
Cbc0038I Pass  45: (2.11 seconds) suminf.    3.60160 (23) obj. -384.117 iterations 779
Cbc0038I Pass  46: (2.12 seconds) suminf.    1.37931 (20) obj. -385.2 iterations 653
Cbc0038I Pass  47: (2.13 seconds) suminf.    5.01630 (24) obj. -384.117 iterations 554
Cbc0038I Pass  48: (2.14 seconds) suminf.    4.81250 (11) obj. -384.558 iterations 498
Cbc0038I Pass  49: (2.16 seconds) suminf.    4.37287 (13) obj. -384.117 iterations 814
Cbc0038I Pass  50: (2.16 seconds) suminf.    4.37287 (13) obj. -384.117 iterations 0
Cbc0038I Pass  51: (2.17 seconds) suminf.    5.50000 (11) obj. -385.376 iterations 643
Cbc0038I Pass  52: (2.17 seconds) suminf.    5.50000 (11) obj. -385.376 iterations 0
Cbc0038I Pass  53: (2.19 seconds) suminf.    3.08017 (10) obj. -384.117 iterations 565
Cbc0038I Pass  54: (2.19 seconds) suminf.    3.08017 (10) obj. -384.117 iterations 0
Cbc0038I Pass  55: (2.19 seconds) suminf.    1.90909 (7) obj. -384.785 iterations 443
Cbc0038I Pass  56: (2.20 seconds) suminf.    1.90909 (7) obj. -384.785 iterations 5
Cbc0038I Pass  57: (2.20 seconds) suminf.    0.49854 (12) obj. -384.117 iterations 361
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 943 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -383.288 to -384.079 (2.23 seconds)
Cbc0038I Round again with cutoff of -384.891
Cbc0038I Reduced cost fixing fixed 221 variables on major pass 6
Cbc0038I Pass  57: (2.24 seconds) suminf.    3.54545 (13) obj. -385.236 iterations 27
Cbc0038I Pass  58: (2.26 seconds) suminf.    4.48991 (14) obj. -384.891 iterations 713
Cbc0038I Pass  59: (2.26 seconds) suminf.    7.84554 (19) obj. -384.891 iterations 268
Cbc0038I Pass  60: (2.26 seconds) suminf.    5.81878 (19) obj. -384.891 iterations 21
Cbc0038I Pass  61: (2.27 seconds) suminf.    5.81878 (19) obj. -384.891 iterations 13
Cbc0038I Pass  62: (2.28 seconds) suminf.    2.05652 (15) obj. -384.891 iterations 582
Cbc0038I Pass  63: (2.29 seconds) suminf.    1.63943 (12) obj. -384.891 iterations 715
Cbc0038I Pass  64: (2.30 seconds) suminf.    2.06250 (11) obj. -385.128 iterations 643
Cbc0038I Pass  65: (2.31 seconds) suminf.    1.87080 (8) obj. -384.891 iterations 682
Cbc0038I Pass  66: (2.32 seconds) suminf.    3.52169 (16) obj. -384.891 iterations 26
Cbc0038I Pass  67: (2.32 seconds) suminf.    1.63943 (12) obj. -384.891 iterations 38
Cbc0038I Pass  68: (2.33 seconds) suminf.    2.06250 (11) obj. -385.128 iterations 654
Cbc0038I Pass  69: (2.34 seconds) suminf.    1.90436 (8) obj. -384.891 iterations 471
Cbc0038I Pass  70: (2.35 seconds) suminf.    1.91717 (8) obj. -384.891 iterations 241
Cbc0038I Pass  71: (2.35 seconds) suminf.    1.91075 (8) obj. -384.891 iterations 238
Cbc0038I Pass  72: (2.36 seconds) suminf.    5.56173 (13) obj. -384.891 iterations 637
Cbc0038I Pass  73: (2.37 seconds) suminf.    2.00000 (5) obj. -385.393 iterations 621
Cbc0038I Pass  74: (2.38 seconds) suminf.    0.35388 (1) obj. -384.891 iterations 378
Cbc0038I Pass  75: (2.39 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 83
Cbc0038I Pass  76: (2.39 seconds) suminf.    0.66921 (3) obj. -384.891 iterations 329
Cbc0038I Pass  77: (2.40 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 318
Cbc0038I Pass  78: (2.40 seconds) suminf.    0.35388 (1) obj. -384.891 iterations 80
Cbc0038I Pass  79: (2.41 seconds) suminf.    0.80006 (2) obj. -384.891 iterations 702
Cbc0038I Pass  80: (2.41 seconds) suminf.    2.02506 (25) obj. -384.891 iterations 19
Cbc0038I Pass  81: (2.42 seconds) suminf.    1.07872 (12) obj. -384.891 iterations 6
Cbc0038I Pass  82: (2.42 seconds) suminf.    7.20000 (18) obj. -385.817 iterations 634
Cbc0038I Pass  83: (2.43 seconds) suminf.    0.35388 (1) obj. -384.891 iterations 270
Cbc0038I Pass  84: (2.43 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 72
Cbc0038I Pass  85: (2.44 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 150
Cbc0038I Pass  86: (2.44 seconds) suminf.    0.33333 (1) obj. -385.096 iterations 146
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 940 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 25 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -384.079 to -384.532 (2.47 seconds)
Cbc0038I After 2.47 seconds - Feasibility pump exiting with objective of -384.532 - took 0.80 seconds
Cbc0012I Integer solution of -384.5323 found by feasibility pump after 0 iterations and 0 nodes (2.47 seconds)
Cbc0012I Integer solution of -385.90656 found by DiveCoefficient after 0 iterations and 0 nodes (2.47 seconds)
Cbc0038I Full problem 4064 rows 1013 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -386.05128 to -381.07765 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 2.0 elements, 15 column cuts (15 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -385.9065587773641, took 0 iterations and 0 nodes (2.51 seconds)
Cbc0035I Maximum depth 0, 240 variables fixed on reduced cost
Cuts at root node changed objective from -386.051 to -381.078
Probing was tried 1 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                385.90655878
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.53
Time (Wallclock seconds):       3.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.63   (Wallclock seconds):       4.26

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7d46ccdaa3274ab79aee7be7a1152d66-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7d46ccdaa3274ab79aee7be7a1152d66-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 501386 COLUMNS
At line 2008525 RHS
At line 2509907 BOUNDS
At line 2512484 ENDATA
Problem MODEL has 501381 rows, 2576 columns and 511123 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 451.897 - 0.69 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 86 strengthened rows, 242 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0004I processed model has 3509 rows, 847 columns (847 integer (847 of which binary)) and 9619 elements
Cbc0038I Initial state - 17 integers unsatisfied sum - 0.85
Cbc0038I Pass   1: (1.30 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 536
Cbc0038I Solution found of -354.693
Cbc0038I Rounding solution of -361.337 is better than previous of -354.693

Cbc0038I Before mini branch and bound, 828 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3509 rows 847 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -361.337 to -371.972 (1.35 seconds)
Cbc0038I Round again with cutoff of -379.965
Cbc0038I Pass   2: (1.35 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 0
Cbc0038I Pass   3: (1.37 seconds) suminf.    1.02634 (3) obj. -379.965 iterations 617
Cbc0038I Solution found of -393.106
Cbc0038I Before mini branch and bound, 825 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3509 rows 847 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -393.106 to -410.386 (1.39 seconds)
Cbc0038I Round again with cutoff of -418.688
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass   4: (1.39 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 0
Cbc0038I Pass   5: (1.41 seconds) suminf.    3.25719 (17) obj. -418.688 iterations 733
Cbc0038I Pass   6: (1.42 seconds) suminf.    3.22052 (23) obj. -418.688 iterations 255
Cbc0038I Pass   7: (1.44 seconds) suminf.    3.61290 (14) obj. -438.142 iterations 425
Cbc0038I Pass   8: (1.45 seconds) suminf.    3.61290 (14) obj. -438.142 iterations 14
Cbc0038I Pass   9: (1.46 seconds) suminf.    7.46077 (67) obj. -418.688 iterations 343
Cbc0038I Pass  10: (1.47 seconds) suminf.    3.85185 (13) obj. -438.961 iterations 198
Cbc0038I Pass  11: (1.50 seconds) suminf.    1.99278 (49) obj. -422.588 iterations 609
Cbc0038I Pass  12: (1.52 seconds) suminf.    1.12290 (3) obj. -418.688 iterations 495
Cbc0038I Pass  13: (1.53 seconds) suminf.    1.50000 (3) obj. -423.516 iterations 232
Cbc0038I Pass  14: (1.54 seconds) suminf.    4.07692 (11) obj. -419.7 iterations 242
Cbc0038I Pass  15: (1.57 seconds) suminf.    2.25153 (17) obj. -418.688 iterations 838
Cbc0038I Pass  16: (1.58 seconds) suminf.    2.25153 (17) obj. -418.688 iterations 171
Cbc0038I Pass  17: (1.59 seconds) suminf.    2.25806 (14) obj. -418.718 iterations 362
Cbc0038I Pass  18: (1.62 seconds) suminf.    2.96684 (12) obj. -418.688 iterations 873
Cbc0038I Pass  19: (1.64 seconds) suminf.    0.39659 (75) obj. -420.299 iterations 701
Cbc0038I Pass  20: (1.66 seconds) suminf.    0.06493 (3) obj. -418.688 iterations 478
Cbc0038I Pass  21: (1.67 seconds) suminf.    0.18750 (3) obj. -420.257 iterations 182
Cbc0038I Pass  22: (1.68 seconds) suminf.    7.34378 (23) obj. -418.688 iterations 323
Cbc0038I Pass  23: (1.69 seconds) suminf.    5.91220 (17) obj. -418.688 iterations 221
Cbc0038I Solution found of -422.234
Cbc0038I Before mini branch and bound, 681 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3509 rows 847 columns, reduced to 277 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -422.234 to -447.638 (1.75 seconds)
Cbc0038I Round again with cutoff of -448.916
Cbc0038I Reduced cost fixing fixed 143 variables on major pass 4
Cbc0038I Pass  24: (1.75 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 0
Cbc0038I Pass  25: (1.77 seconds) suminf.    3.68124 (31) obj. -448.916 iterations 837
Cbc0038I Pass  26: (1.78 seconds) suminf.    2.25288 (23) obj. -448.916 iterations 95
Cbc0038I Pass  27: (1.79 seconds) suminf.    4.60104 (26) obj. -448.916 iterations 501
Cbc0038I Pass  28: (1.80 seconds) suminf.   13.20790 (40) obj. -448.916 iterations 515
Cbc0038I Pass  29: (1.81 seconds) suminf.   13.20790 (40) obj. -448.916 iterations 29
Cbc0038I Pass  30: (1.83 seconds) suminf.    2.42008 (13) obj. -448.916 iterations 708
Cbc0038I Pass  31: (1.84 seconds) suminf.    2.36245 (22) obj. -448.916 iterations 399
Cbc0038I Pass  32: (1.85 seconds) suminf.    2.93531 (19) obj. -448.916 iterations 358
Cbc0038I Pass  33: (1.86 seconds) suminf.    2.42043 (39) obj. -448.916 iterations 416
Cbc0038I Pass  34: (1.88 seconds) suminf.    2.93633 (20) obj. -448.916 iterations 813
Cbc0038I Pass  35: (1.88 seconds) suminf.    3.67533 (23) obj. -448.916 iterations 27
Cbc0038I Pass  36: (1.89 seconds) suminf.    3.67533 (23) obj. -448.916 iterations 29
Cbc0038I Pass  37: (1.89 seconds) suminf.    3.23190 (22) obj. -448.916 iterations 46
Cbc0038I Pass  38: (1.89 seconds) suminf.    3.67533 (23) obj. -448.916 iterations 34
Cbc0038I Pass  39: (1.90 seconds) suminf.    8.18394 (22) obj. -448.916 iterations 15
Cbc0038I Pass  40: (1.90 seconds) suminf.    8.18394 (22) obj. -448.916 iterations 19
Cbc0038I Pass  41: (1.91 seconds) suminf.    3.95443 (24) obj. -448.916 iterations 471
Cbc0038I Pass  42: (1.91 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 24
Cbc0038I Pass  43: (1.92 seconds) suminf.    1.13409 (16) obj. -448.916 iterations 149
Cbc0038I Pass  44: (1.92 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 204
Cbc0038I Pass  45: (1.93 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 228
Cbc0038I Pass  46: (1.93 seconds) suminf.    1.06667 (16) obj. -450.729 iterations 239
Cbc0038I Pass  47: (1.94 seconds) suminf.    0.71429 (15) obj. -451.686 iterations 247
Cbc0038I Pass  48: (1.94 seconds) suminf.    1.30769 (17) obj. -451.409 iterations 287
Cbc0038I Pass  49: (1.95 seconds) suminf.    2.54488 (18) obj. -448.916 iterations 300
Cbc0038I Pass  50: (1.95 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 132
Cbc0038I Pass  51: (1.96 seconds) suminf.    1.06667 (16) obj. -450.82 iterations 196
Cbc0038I Pass  52: (1.96 seconds) suminf.    3.00000 (15) obj. -449.002 iterations 237
Cbc0038I Pass  53: (1.96 seconds) suminf.    0.66667 (16) obj. -451.878 iterations 157
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 745 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3509 rows 847 columns, reduced to 85 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (1.98 seconds)
Cbc0038I After 1.99 seconds - Feasibility pump exiting with objective of -447.638 - took 0.64 seconds
Cbc0012I Integer solution of -447.63802 found by feasibility pump after 0 iterations and 0 nodes (1.99 seconds)
Cbc0031I 7 added rows had average density of 52.428571
Cbc0013I At root node, 7 cuts changed objective from -451.89725 to -449.00168 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 111 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -447.63802 best solution, best possible -449.00168 (2.22 seconds)
Cbc0001I Search completed - best objective -447.638020501229, took 1170 iterations and 12 nodes (2.68 seconds)
Cbc0032I Strong branching done 126 times (2487 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 174 variables fixed on reduced cost
Cuts at root node changed objective from -451.897 to -449.002
Probing was tried 38 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Knapsack was tried 38 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 38 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 38 times and created 365 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ImplicationCuts was tried 28 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                447.63802050
Enumerated nodes:               12
Total iterations:               1170
Time (CPU seconds):             2.65
Time (Wallclock seconds):       3.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.42   (Wallclock seconds):       4.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7872f97cbe4b4683ada18afaa8333587-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7872f97cbe4b4683ada18afaa8333587-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 930281 COLUMNS
At line 3725158 RHS
At line 4655435 BOUNDS
At line 4658903 ENDATA
Problem MODEL has 930276 rows, 3467 columns and 943167 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 476.365 - 0.97 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 272 strengthened rows, 144 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 265 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 4518 rows, 1114 columns (1114 integer (1114 of which binary)) and 12804 elements
Cbc0038I Initial state - 41 integers unsatisfied sum - 20.5
Cbc0038I Pass   1: (2.26 seconds) suminf.    0.00000 (0) obj. -464.639 iterations 883
Cbc0038I Solution found of -464.639
Cbc0038I Rounding solution of -467.961 is better than previous of -464.639

Cbc0038I Before mini branch and bound, 1072 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1114 columns, reduced to 12 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (2.35 seconds)
Cbc0038I Round again with cutoff of -468.801
Cbc0038I Reduced cost fixing fixed 212 variables on major pass 2
Cbc0038I Pass   2: (2.38 seconds) suminf.    0.83287 (28) obj. -468.801 iterations 260
Cbc0038I Pass   3: (2.38 seconds) suminf.    0.39646 (2) obj. -468.801 iterations 168
Cbc0038I Pass   4: (2.39 seconds) suminf.    0.50000 (2) obj. -469.888 iterations 111
Cbc0038I Pass   5: (2.39 seconds) suminf.    0.85339 (11) obj. -468.801 iterations 207
Cbc0038I Pass   6: (2.40 seconds) suminf.    0.54545 (6) obj. -469.878 iterations 167
Cbc0038I Pass   7: (2.40 seconds) suminf.    0.98443 (8) obj. -468.801 iterations 274
Cbc0038I Pass   8: (2.41 seconds) suminf.    1.23015 (7) obj. -468.801 iterations 264
Cbc0038I Pass   9: (2.42 seconds) suminf.    0.88279 (5) obj. -468.801 iterations 602
Cbc0038I Pass  10: (2.44 seconds) suminf.    0.39646 (2) obj. -468.801 iterations 818
Cbc0038I Pass  11: (2.44 seconds) suminf.    0.50000 (2) obj. -469.888 iterations 90
Cbc0038I Pass  12: (2.45 seconds) suminf.    0.42358 (11) obj. -468.801 iterations 177
Cbc0038I Pass  13: (2.45 seconds) suminf.    0.08005 (2) obj. -468.801 iterations 258
Cbc0038I Pass  14: (2.46 seconds) suminf.    0.25000 (2) obj. -470.586 iterations 99
Cbc0038I Pass  15: (2.46 seconds) suminf.    0.33333 (1) obj. -469.068 iterations 206
Cbc0038I Pass  16: (2.47 seconds) suminf.    0.40303 (11) obj. -468.801 iterations 304
Cbc0038I Pass  17: (2.48 seconds) suminf.    1.38149 (14) obj. -468.801 iterations 434
Cbc0038I Pass  18: (2.49 seconds) suminf.    1.19024 (8) obj. -468.801 iterations 272
Cbc0038I Pass  19: (2.50 seconds) suminf.    0.97770 (8) obj. -468.801 iterations 177
Cbc0038I Pass  20: (2.51 seconds) suminf.    4.07910 (12) obj. -468.801 iterations 756
Cbc0038I Pass  21: (2.53 seconds) suminf.    3.85801 (14) obj. -468.801 iterations 431
Cbc0038I Pass  22: (2.54 seconds) suminf.    6.08963 (19) obj. -468.801 iterations 764
Cbc0038I Pass  23: (2.55 seconds) suminf.    0.54545 (6) obj. -470.077 iterations 504
Cbc0038I Pass  24: (2.56 seconds) suminf.    1.06590 (8) obj. -468.801 iterations 254
Cbc0038I Pass  25: (2.57 seconds) suminf.    1.66132 (15) obj. -468.801 iterations 213
Cbc0038I Pass  26: (2.57 seconds) suminf.    0.08005 (2) obj. -468.801 iterations 290
Cbc0038I Pass  27: (2.58 seconds) suminf.    0.25000 (2) obj. -470.586 iterations 99
Cbc0038I Pass  28: (2.58 seconds) suminf.    1.36381 (15) obj. -468.801 iterations 256
Cbc0038I Pass  29: (2.59 seconds) suminf.    0.39646 (2) obj. -468.801 iterations 292
Cbc0038I Pass  30: (2.59 seconds) suminf.    0.50000 (2) obj. -469.888 iterations 81
Cbc0038I Pass  31: (2.61 seconds) suminf.    1.09385 (14) obj. -468.801 iterations 419
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 990 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1114 columns, reduced to 74 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -464.639 to -471.331 (2.65 seconds)
Cbc0038I Round again with cutoff of -472.337
Cbc0038I Reduced cost fixing fixed 245 variables on major pass 3
Cbc0038I Pass  31: (2.67 seconds) suminf.    1.38850 (28) obj. -472.337 iterations 86
Cbc0038I Pass  32: (2.69 seconds) suminf.    1.09386 (26) obj. -472.337 iterations 448
Cbc0038I Pass  33: (2.72 seconds) suminf.    4.35376 (19) obj. -472.337 iterations 791
Cbc0038I Pass  34: (2.73 seconds) suminf.    0.92769 (10) obj. -472.337 iterations 312
Cbc0038I Pass  35: (2.73 seconds) suminf.    0.92769 (10) obj. -472.337 iterations 29
Cbc0038I Pass  36: (2.76 seconds) suminf.    4.35376 (19) obj. -472.337 iterations 1057
Cbc0038I Pass  37: (2.77 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 563
Cbc0038I Pass  38: (2.79 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 639
Cbc0038I Pass  39: (2.79 seconds) suminf.    1.94295 (32) obj. -472.337 iterations 17
Cbc0038I Pass  40: (2.79 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 15
Cbc0038I Pass  41: (2.81 seconds) suminf.    1.28571 (9) obj. -473.08 iterations 681
Cbc0038I Pass  42: (2.82 seconds) suminf.    1.09386 (26) obj. -472.337 iterations 426
Cbc0038I Pass  43: (2.84 seconds) suminf.    4.35376 (19) obj. -472.337 iterations 715
Cbc0038I Pass  44: (2.84 seconds) suminf.    0.92769 (10) obj. -472.337 iterations 297
Cbc0038I Pass  45: (2.85 seconds) suminf.    0.92769 (10) obj. -472.337 iterations 16
Cbc0038I Pass  46: (2.87 seconds) suminf.    4.35376 (19) obj. -472.337 iterations 1052
Cbc0038I Pass  47: (2.89 seconds) suminf.    1.21185 (10) obj. -472.337 iterations 444
Cbc0038I Pass  48: (2.90 seconds) suminf.    2.02195 (43) obj. -472.337 iterations 562
Cbc0038I Pass  49: (2.92 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 650
Cbc0038I Pass  50: (2.93 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 545
Cbc0038I Pass  51: (2.93 seconds) suminf.    1.91409 (15) obj. -472.337 iterations 9
Cbc0038I Pass  52: (2.93 seconds) suminf.    1.69832 (11) obj. -472.337 iterations 11
Cbc0038I Pass  53: (2.94 seconds) suminf.    2.04450 (44) obj. -472.337 iterations 16
Cbc0038I Pass  54: (2.94 seconds) suminf.    1.70411 (35) obj. -472.337 iterations 14
Cbc0038I Pass  55: (2.95 seconds) suminf.    1.95928 (35) obj. -472.337 iterations 12
Cbc0038I Pass  56: (2.95 seconds) suminf.    1.58899 (11) obj. -472.337 iterations 13
Cbc0038I Pass  57: (2.96 seconds) suminf.    1.09386 (26) obj. -472.337 iterations 415
Cbc0038I Pass  58: (2.97 seconds) suminf.    4.35376 (19) obj. -472.337 iterations 738
Cbc0038I Pass  59: (2.98 seconds) suminf.    3.77750 (15) obj. -472.337 iterations 284
Cbc0038I Pass  60: (2.99 seconds) suminf.    3.77750 (15) obj. -472.337 iterations 235
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1004 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1114 columns, reduced to 47 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (3.02 seconds)
Cbc0038I After 3.02 seconds - Feasibility pump exiting with objective of -471.331 - took 0.70 seconds
Cbc0012I Integer solution of -471.33053 found by feasibility pump after 0 iterations and 0 nodes (3.02 seconds)
Cbc0038I Full problem 4518 rows 1114 columns, reduced to 12 rows 8 columns
Cbc0031I 6 added rows had average density of 4.8333333
Cbc0013I At root node, 74 cuts changed objective from -476.36507 to -470.40359 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 72 row cuts average 2.6 elements, 9 column cuts (9 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 43 row cuts average 26.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0001I Search completed - best objective -471.3305298831489, took 152 iterations and 0 nodes (3.14 seconds)
Cbc0035I Maximum depth 0, 262 variables fixed on reduced cost
Cuts at root node changed objective from -476.365 to -470.404
Probing was tried 6 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 6 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 6 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Optimal solution found

Objective value:                471.33052988
Enumerated nodes:               0
Total iterations:               152
Time (CPU seconds):             3.16
Time (Wallclock seconds):       3.98

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.61   (Wallclock seconds):       5.94

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/806fc420802b46c1bf3444a22a175a5b-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/806fc420802b46c1bf3444a22a175a5b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1187634 COLUMNS
At line 4755097 RHS
At line 5942727 BOUNDS
At line 5946646 ENDATA
Problem MODEL has 1187629 rows, 3918 columns and 1203232 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 475.482 - 1.26 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 279 strengthened rows, 228 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 266 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 5719 rows, 1320 columns (1320 integer (1320 of which binary)) and 16072 elements
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.6
Cbc0038I Solution found of -463.338
Cbc0038I Before mini branch and bound, 1307 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5719 rows 1320 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (3.83 seconds)
Cbc0038I Round again with cutoff of -464.553
Cbc0038I Reduced cost fixing fixed 157 variables on major pass 2
Cbc0038I Pass   1: (3.87 seconds) suminf.    0.14159 (4) obj. -464.553 iterations 1232
Cbc0038I Pass   2: (3.88 seconds) suminf.    0.80000 (4) obj. -470.2 iterations 274
Cbc0038I Pass   3: (3.89 seconds) suminf.    6.00000 (12) obj. -469.559 iterations 293
Cbc0038I Pass   4: (3.90 seconds) suminf.    0.00000 (0) obj. -474.222 iterations 270
Cbc0038I Solution found of -474.222
Cbc0038I Before mini branch and bound, 1289 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5719 rows 1320 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -474.222 to -474.222 (3.96 seconds)
Cbc0038I Round again with cutoff of -474.474
Cbc0038I Reduced cost fixing fixed 286 variables on major pass 3
Cbc0038I Pass   5: (4.01 seconds) suminf.    1.84959 (21) obj. -474.474 iterations 401
Cbc0038I Pass   6: (4.03 seconds) suminf.    1.87500 (15) obj. -474.587 iterations 433
Cbc0038I Pass   7: (4.07 seconds) suminf.    2.25709 (13) obj. -474.474 iterations 1258
Cbc0038I Pass   8: (4.07 seconds) suminf.    2.46253 (22) obj. -474.474 iterations 13
Cbc0038I Pass   9: (4.08 seconds) suminf.    2.46211 (14) obj. -474.474 iterations 24
Cbc0038I Pass  10: (4.10 seconds) suminf.    2.46253 (22) obj. -474.474 iterations 28
Cbc0038I Pass  11: (4.14 seconds) suminf.    2.38407 (13) obj. -474.474 iterations 964
Cbc0038I Pass  12: (4.16 seconds) suminf.    2.31345 (19) obj. -474.474 iterations 765
Cbc0038I Pass  13: (4.19 seconds) suminf.    2.38407 (13) obj. -474.474 iterations 717
Cbc0038I Pass  14: (4.21 seconds) suminf.    2.27105 (12) obj. -474.474 iterations 513
Cbc0038I Pass  15: (4.22 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 458
Cbc0038I Pass  16: (4.23 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 358
Cbc0038I Pass  17: (4.24 seconds) suminf.    2.43677 (11) obj. -474.474 iterations 323
Cbc0038I Pass  18: (4.25 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 318
Cbc0038I Pass  19: (4.26 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 341
Cbc0038I Pass  20: (4.28 seconds) suminf.    5.34596 (32) obj. -474.474 iterations 759
Cbc0038I Pass  21: (4.30 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 531
Cbc0038I Pass  22: (4.30 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 171
Cbc0038I Pass  23: (4.33 seconds) suminf.    2.13435 (12) obj. -474.474 iterations 952
Cbc0038I Pass  24: (4.34 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 709
Cbc0038I Pass  25: (4.35 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 272
Cbc0038I Pass  26: (4.36 seconds) suminf.    2.38962 (6) obj. -474.474 iterations 401
Cbc0038I Pass  27: (4.37 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 377
Cbc0038I Pass  28: (4.38 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 348
Cbc0038I Pass  29: (4.39 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 396
Cbc0038I Pass  30: (4.40 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 347
Cbc0038I Pass  31: (4.41 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 361
Cbc0038I Pass  32: (4.42 seconds) suminf.    2.57143 (6) obj. -475.321 iterations 353
Cbc0038I Pass  33: (4.44 seconds) suminf.    2.46925 (10) obj. -474.474 iterations 374
Cbc0038I Pass  34: (4.45 seconds) suminf.    2.27927 (24) obj. -474.474 iterations 462
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5719 rows 1320 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (4.49 seconds)
Cbc0038I After 4.50 seconds - Feasibility pump exiting with objective of -474.222 - took 0.67 seconds
Cbc0012I Integer solution of -474.2217 found by feasibility pump after 0 iterations and 0 nodes (4.50 seconds)
Cbc0031I 2 added rows had average density of 8
Cbc0013I At root node, 11 cuts changed objective from -475.4824 to -465.76679 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 2.0 elements, 11 column cuts (11 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 8 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 330.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0001I Search completed - best objective -474.2216950646492, took 240 iterations and 0 nodes (4.64 seconds)
Cbc0035I Maximum depth 0, 291 variables fixed on reduced cost
Cuts at root node changed objective from -475.482 to -465.767
Probing was tried 2 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 2 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                474.22169506
Enumerated nodes:               0
Total iterations:               240
Time (CPU seconds):             3.95
Time (Wallclock seconds):       5.79

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.74   (Wallclock seconds):       7.89

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4b6809b6e5c547c8af0dd511f67f7327-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4b6809b6e5c547c8af0dd511f67f7327-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1318414 COLUMNS
At line 5278350 RHS
At line 6596760 BOUNDS
At line 6600746 ENDATA
Problem MODEL has 1318409 rows, 3985 columns and 1333251 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 426.1 - 1.22 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 230 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 5324 rows, 1304 columns (1304 integer (1304 of which binary)) and 14500 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.6
Cbc0038I Solution found of -422.561
Cbc0038I Before mini branch and bound, 1301 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5324 rows 1304 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.82 seconds)
Cbc0038I Round again with cutoff of -422.915
Cbc0038I Reduced cost fixing fixed 234 variables on major pass 2
Cbc0038I Pass   1: (2.86 seconds) suminf.    0.04821 (3) obj. -422.915 iterations 1079
Cbc0038I Pass   2: (2.87 seconds) suminf.    1.66667 (5) obj. -425.649 iterations 269
Cbc0038I Pass   3: (2.88 seconds) suminf.    2.31344 (31) obj. -422.915 iterations 285
Cbc0038I Pass   4: (2.89 seconds) suminf.    1.29412 (11) obj. -424.839 iterations 211
Cbc0038I Pass   5: (2.91 seconds) suminf.    5.53324 (21) obj. -422.915 iterations 834
Cbc0038I Pass   6: (2.91 seconds) suminf.    5.53324 (21) obj. -422.915 iterations 0
Cbc0038I Pass   7: (2.94 seconds) suminf.    1.29412 (11) obj. -424.839 iterations 663
Cbc0038I Pass   8: (2.94 seconds) suminf.    3.92531 (19) obj. -422.915 iterations 324
Cbc0038I Pass   9: (2.97 seconds) suminf.    3.38912 (13) obj. -422.915 iterations 692
Cbc0038I Pass  10: (2.99 seconds) suminf.    4.00000 (8) obj. -424.635 iterations 788
Cbc0038I Pass  11: (3.00 seconds) suminf.    2.19635 (22) obj. -422.915 iterations 406
Cbc0038I Pass  12: (3.01 seconds) suminf.    2.40000 (12) obj. -423.753 iterations 323
Cbc0038I Pass  13: (3.04 seconds) suminf.    3.05670 (12) obj. -422.915 iterations 737
Cbc0038I Pass  14: (3.05 seconds) suminf.    1.24318 (9) obj. -422.915 iterations 603
Cbc0038I Pass  15: (3.06 seconds) suminf.    0.60000 (3) obj. -423.117 iterations 196
Cbc0038I Pass  16: (3.10 seconds) suminf.    2.30012 (14) obj. -422.915 iterations 1132
Cbc0038I Pass  17: (3.12 seconds) suminf.    0.60000 (3) obj. -423.117 iterations 776
Cbc0038I Pass  18: (3.13 seconds) suminf.    1.19353 (19) obj. -422.915 iterations 307
Cbc0038I Pass  19: (3.14 seconds) suminf.    0.87291 (9) obj. -422.915 iterations 709
Cbc0038I Pass  20: (3.15 seconds) suminf.    0.60000 (3) obj. -423.117 iterations 699
Cbc0038I Pass  21: (3.18 seconds) suminf.    2.30012 (14) obj. -422.915 iterations 968
Cbc0038I Pass  22: (3.20 seconds) suminf.    0.60000 (3) obj. -423.117 iterations 774
Cbc0038I Pass  23: (3.22 seconds) suminf.    0.98938 (12) obj. -422.915 iterations 571
Cbc0038I Pass  24: (3.23 seconds) suminf.    1.00000 (3) obj. -423.08 iterations 542
Cbc0038I Pass  25: (3.26 seconds) suminf.    6.34082 (27) obj. -422.915 iterations 969
Cbc0038I Pass  26: (3.27 seconds) suminf.    1.26989 (15) obj. -422.915 iterations 278
Cbc0038I Pass  27: (3.27 seconds) suminf.    1.26989 (15) obj. -422.915 iterations 2
Cbc0038I Pass  28: (3.29 seconds) suminf.    4.20000 (12) obj. -424.077 iterations 771
Cbc0038I Pass  29: (3.30 seconds) suminf.    3.91751 (22) obj. -422.915 iterations 543
Cbc0038I Pass  30: (3.32 seconds) suminf.    4.20000 (12) obj. -424.077 iterations 335
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5324 rows 1304 columns, reduced to 54 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (3.43 seconds)
Cbc0038I After 3.44 seconds - Feasibility pump exiting with objective of -422.561 - took 0.65 seconds
Cbc0012I Integer solution of -422.56108 found by feasibility pump after 0 iterations and 0 nodes (3.44 seconds)
Cbc0012I Integer solution of -425.61121 found by DiveCoefficient after 0 iterations and 0 nodes (3.46 seconds)
Cbc0038I Full problem 5324 rows 1304 columns, reduced to 2 rows 4 columns
Cbc0031I 2 added rows had average density of 363.5
Cbc0013I At root node, 2 cuts changed objective from -426.10011 to -426.04377 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 363.3 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -425.61121 best solution, best possible -425.98362 (3.66 seconds)
Cbc0004I Integer solution of -425.65283 found after 112 iterations and 1 nodes (3.73 seconds)
Cbc0001I Search completed - best objective -425.6528284555611, took 215 iterations and 2 nodes (3.77 seconds)
Cbc0032I Strong branching done 8 times (153 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 301 variables fixed on reduced cost
Cuts at root node changed objective from -426.1 to -425.984
Probing was tried 5 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)

Result - Optimal solution found

Objective value:                425.65282846
Enumerated nodes:               2
Total iterations:               215
Time (CPU seconds):             3.85
Time (Wallclock seconds):       4.85

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.93   (Wallclock seconds):       7.45

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/862c7131a3394a33a6d0c022485eee26-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/862c7131a3394a33a6d0c022485eee26-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 594292 COLUMNS
At line 2380447 RHS
At line 2974735 BOUNDS
At line 2977580 ENDATA
Problem MODEL has 594287 rows, 2844 columns and 605604 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 517.965 - 0.83 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 485 strengthened rows, 232 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 414 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 142 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 86 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 3918 rows, 923 columns (923 integer (923 of which binary)) and 11506 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 3.5
Cbc0038I Solution found of -496.358
Cbc0038I Before mini branch and bound, 909 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3918 rows 923 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of -498.519
Cbc0038I Reduced cost fixing fixed 69 variables on major pass 2
Cbc0038I Pass   1: (1.68 seconds) suminf.    0.14910 (4) obj. -498.519 iterations 857
Cbc0038I Pass   2: (1.69 seconds) suminf.    0.74074 (4) obj. -507.093 iterations 131
Cbc0038I Pass   3: (1.69 seconds) suminf.    0.40000 (2) obj. -510.448 iterations 212
Cbc0038I Solution found of -508.383
Cbc0038I Rounding solution of -511.705 is better than previous of -508.383

Cbc0038I Before mini branch and bound, 901 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.70 seconds)
Cbc0038I Round again with cutoff of -512.957
Cbc0038I Reduced cost fixing fixed 151 variables on major pass 3
Cbc0038I Pass   4: (1.73 seconds) suminf.    2.17648 (22) obj. -512.957 iterations 447
Cbc0038I Pass   5: (1.74 seconds) suminf.    2.17889 (26) obj. -512.957 iterations 388
Cbc0038I Pass   6: (1.75 seconds) suminf.    1.80534 (16) obj. -512.957 iterations 416
Cbc0038I Pass   7: (1.76 seconds) suminf.    1.74064 (22) obj. -512.957 iterations 323
Cbc0038I Pass   8: (1.76 seconds) suminf.    1.74253 (26) obj. -512.957 iterations 356
Cbc0038I Pass   9: (1.78 seconds) suminf.    1.41078 (15) obj. -512.957 iterations 806
Cbc0038I Pass  10: (1.79 seconds) suminf.    0.45548 (22) obj. -512.957 iterations 481
Cbc0038I Pass  11: (1.80 seconds) suminf.    0.50000 (10) obj. -513.138 iterations 334
Cbc0038I Pass  12: (1.80 seconds) suminf.    0.65736 (10) obj. -512.957 iterations 264
Cbc0038I Pass  13: (1.82 seconds) suminf.    0.60092 (17) obj. -512.957 iterations 532
Cbc0038I Pass  14: (1.83 seconds) suminf.    0.72727 (8) obj. -514.054 iterations 515
Cbc0038I Pass  15: (1.83 seconds) suminf.    0.61111 (11) obj. -514.227 iterations 141
Cbc0038I Pass  16: (1.84 seconds) suminf.    1.50885 (19) obj. -512.957 iterations 453
Cbc0038I Pass  17: (1.85 seconds) suminf.    1.24420 (13) obj. -512.957 iterations 159
Cbc0038I Pass  18: (1.86 seconds) suminf.    0.80000 (4) obj. -514.907 iterations 318
Cbc0038I Pass  19: (1.87 seconds) suminf.    1.29698 (13) obj. -512.957 iterations 293
Cbc0038I Pass  20: (1.88 seconds) suminf.    0.83333 (10) obj. -513.865 iterations 346
Cbc0038I Pass  21: (1.89 seconds) suminf.    1.21026 (10) obj. -512.957 iterations 621
Cbc0038I Pass  22: (1.89 seconds) suminf.    1.14239 (16) obj. -512.957 iterations 58
Cbc0038I Pass  23: (1.90 seconds) suminf.    1.22222 (11) obj. -514.334 iterations 577
Cbc0038I Pass  24: (1.91 seconds) suminf.    0.92127 (19) obj. -512.957 iterations 426
Cbc0038I Pass  25: (1.92 seconds) suminf.    0.92127 (19) obj. -512.957 iterations 281
Cbc0038I Pass  26: (1.94 seconds) suminf.    1.59617 (4) obj. -512.957 iterations 626
Cbc0038I Pass  27: (1.95 seconds) suminf.    1.50231 (18) obj. -512.957 iterations 773
Cbc0038I Pass  28: (1.96 seconds) suminf.    1.50231 (18) obj. -512.957 iterations 347
Cbc0038I Pass  29: (1.97 seconds) suminf.    4.07818 (28) obj. -512.957 iterations 288
Cbc0038I Pass  30: (1.97 seconds) suminf.    2.17648 (22) obj. -512.957 iterations 133
Cbc0038I Pass  31: (1.98 seconds) suminf.    2.17889 (26) obj. -512.957 iterations 354
Cbc0038I Pass  32: (1.99 seconds) suminf.    0.18748 (13) obj. -512.957 iterations 533
Cbc0038I Solution found of -513.324
Cbc0038I Before mini branch and bound, 813 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3918 rows 923 columns, reduced to 43 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -513.324 to -515.391 (2.04 seconds)
Cbc0038I Round again with cutoff of -516.164
Cbc0038I Reduced cost fixing fixed 186 variables on major pass 4
Cbc0038I Pass  33: (2.06 seconds) suminf.    3.01224 (24) obj. -516.164 iterations 271
Cbc0038I Pass  34: (2.07 seconds) suminf.    3.50000 (14) obj. -517.965 iterations 403
Cbc0038I Pass  35: (2.08 seconds) suminf.    2.72231 (16) obj. -516.164 iterations 382
Cbc0038I Pass  36: (2.08 seconds) suminf.    2.58282 (24) obj. -516.164 iterations 137
Cbc0038I Pass  37: (2.09 seconds) suminf.    2.80000 (14) obj. -516.966 iterations 399
Cbc0038I Pass  38: (2.10 seconds) suminf.    3.73135 (21) obj. -516.164 iterations 231
Cbc0038I Pass  39: (2.10 seconds) suminf.    3.92877 (13) obj. -516.164 iterations 311
Cbc0038I Pass  40: (2.11 seconds) suminf.    3.33333 (8) obj. -516.692 iterations 177
Cbc0038I Pass  41: (2.12 seconds) suminf.    4.55175 (24) obj. -516.164 iterations 483
Cbc0038I Pass  42: (2.13 seconds) suminf.    4.90000 (14) obj. -517.45 iterations 406
Cbc0038I Pass  43: (2.14 seconds) suminf.    4.90000 (14) obj. -517.45 iterations 159
Cbc0038I Pass  44: (2.15 seconds) suminf.    3.05581 (22) obj. -516.164 iterations 362
Cbc0038I Pass  45: (2.15 seconds) suminf.    3.01224 (24) obj. -516.164 iterations 402
Cbc0038I Pass  46: (2.16 seconds) suminf.    3.50000 (14) obj. -517.965 iterations 394
Cbc0038I Pass  47: (2.17 seconds) suminf.    5.11063 (19) obj. -516.164 iterations 256
Cbc0038I Pass  48: (2.18 seconds) suminf.    4.99976 (19) obj. -516.164 iterations 305
Cbc0038I Pass  49: (2.18 seconds) suminf.    3.20159 (8) obj. -516.164 iterations 307
Cbc0038I Pass  50: (2.19 seconds) suminf.    3.00000 (8) obj. -516.996 iterations 204
Cbc0038I Pass  51: (2.19 seconds) suminf.    4.00000 (8) obj. -516.19 iterations 143
Cbc0038I Pass  52: (2.20 seconds) suminf.    4.00000 (8) obj. -516.19 iterations 132
Cbc0038I Pass  53: (2.21 seconds) suminf.    2.58282 (24) obj. -516.164 iterations 477
Cbc0038I Pass  54: (2.22 seconds) suminf.    2.80000 (14) obj. -516.966 iterations 412
Cbc0038I Pass  55: (2.23 seconds) suminf.    2.58839 (26) obj. -516.164 iterations 357
Cbc0038I Pass  56: (2.23 seconds) suminf.    2.67952 (23) obj. -516.164 iterations 340
Cbc0038I Pass  57: (2.24 seconds) suminf.    3.50000 (21) obj. -516.164 iterations 524
Cbc0038I Pass  58: (2.25 seconds) suminf.    3.01224 (24) obj. -516.164 iterations 221
Cbc0038I Pass  59: (2.26 seconds) suminf.    3.50000 (14) obj. -517.965 iterations 395
Cbc0038I Pass  60: (2.27 seconds) suminf.    2.69140 (21) obj. -516.164 iterations 271
Cbc0038I Pass  61: (2.27 seconds) suminf.    3.84080 (16) obj. -516.164 iterations 349
Cbc0038I Pass  62: (2.28 seconds) suminf.    3.00000 (8) obj. -516.996 iterations 190
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 820 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3918 rows 923 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (2.30 seconds)
Cbc0038I After 2.30 seconds - Feasibility pump exiting with objective of -515.391 - took 0.65 seconds
Cbc0012I Integer solution of -515.39144 found by feasibility pump after 0 iterations and 0 nodes (2.30 seconds)
Cbc0012I Integer solution of -516.29761 found by DiveCoefficient after 33 iterations and 0 nodes (2.37 seconds)
Cbc0031I 2 added rows had average density of 48
Cbc0013I At root node, 2 cuts changed objective from -517.96528 to -516.29761 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 47.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0001I Search completed - best objective -516.297612347984, took 33 iterations and 0 nodes (2.37 seconds)
Cbc0035I Maximum depth 0, 184 variables fixed on reduced cost
Cuts at root node changed objective from -517.965 to -516.298
Probing was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Optimal solution found

Objective value:                516.29761235
Enumerated nodes:               0
Total iterations:               33
Time (CPU seconds):             2.43
Time (Wallclock seconds):       2.81

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.36   (Wallclock seconds):       3.84

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/71edf15794ef4df089deb3f8368ae0c3-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/71edf15794ef4df089deb3f8368ae0c3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 175286 COLUMNS
At line 703025 RHS
At line 878307 BOUNDS
At line 879984 ENDATA
Problem MODEL has 175281 rows, 1676 columns and 180899 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 393.63 - 0.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 35 strengthened rows, 468 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 1711 rows, 451 columns (451 integer (451 of which binary)) and 4625 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    1.00000 (4) obj. -393.63 iterations 280
Cbc0038I Solution found of -374.311
Cbc0038I Rounding solution of -380.37 is better than previous of -374.311

Cbc0038I Before mini branch and bound, 447 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I Round again with cutoff of -381.696
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.00000 (4) obj. -393.63 iterations 0
Cbc0038I Pass   3: suminf.    0.56877 (20) obj. -381.696 iterations 303
Cbc0038I Pass   4: suminf.    1.75385 (14) obj. -387.465 iterations 134
Cbc0038I Pass   5: suminf.    1.78723 (23) obj. -385.46 iterations 152
Cbc0038I Pass   6: suminf.    4.11765 (14) obj. -389.032 iterations 207
Cbc0038I Pass   7: suminf.    0.35797 (20) obj. -381.696 iterations 209
Cbc0038I Pass   8: suminf.    3.43750 (11) obj. -388.6 iterations 121
Cbc0038I Pass   9: suminf.    4.96446 (19) obj. -381.696 iterations 107
Cbc0038I Pass  10: suminf.    4.34561 (11) obj. -381.696 iterations 246
Cbc0038I Pass  11: suminf.    1.06667 (4) obj. -387.782 iterations 225
Cbc0038I Pass  12: suminf.    0.31292 (20) obj. -381.696 iterations 197
Cbc0038I Pass  13: suminf.    2.27027 (16) obj. -386.768 iterations 139
Cbc0038I Pass  14: suminf.    3.00000 (12) obj. -386.129 iterations 130
Cbc0038I Pass  15: suminf.    9.85000 (23) obj. -382.826 iterations 291
Cbc0038I Pass  16: suminf.    0.31292 (20) obj. -381.696 iterations 218
Cbc0038I Pass  17: suminf.    1.25000 (5) obj. -384.116 iterations 166
Cbc0038I Pass  18: suminf.    0.80176 (4) obj. -381.696 iterations 214
Cbc0038I Pass  19: suminf.    0.91176 (28) obj. -386.357 iterations 241
Cbc0038I Pass  20: suminf.    0.10213 (20) obj. -381.696 iterations 187
Cbc0038I Pass  21: suminf.    1.00000 (14) obj. -387.891 iterations 117
Cbc0038I Pass  22: suminf.    1.10000 (10) obj. -385.949 iterations 243
Cbc0038I Pass  23: suminf.    5.18771 (22) obj. -381.696 iterations 205
Cbc0038I Pass  24: suminf.    2.69166 (16) obj. -381.696 iterations 167
Cbc0038I Pass  25: suminf.    4.09091 (9) obj. -386.549 iterations 160
Cbc0038I Pass  26: suminf.    5.89431 (22) obj. -381.696 iterations 122
Cbc0038I Pass  27: suminf.    3.91027 (12) obj. -381.696 iterations 177
Cbc0038I Pass  28: suminf.    4.37500 (12) obj. -386.578 iterations 74
Cbc0038I Pass  29: suminf.    2.59662 (19) obj. -381.696 iterations 265
Cbc0038I Pass  30: suminf.    2.56598 (16) obj. -381.696 iterations 140
Cbc0038I Pass  31: suminf.    4.09091 (9) obj. -389.823 iterations 168
Cbc0038I Rounding solution of -385.527 is better than previous of -380.37

Cbc0038I Before mini branch and bound, 303 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1711 rows 451 columns, reduced to 129 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -385.527 to -388.849 (0.45 seconds)
Cbc0038I Round again with cutoff of -389.805
Cbc0038I Reduced cost fixing fixed 60 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.00000 (4) obj. -393.63 iterations 0
Cbc0038I Pass  32: suminf.    1.54972 (11) obj. -389.805 iterations 230
Cbc0038I Pass  33: suminf.    1.90909 (7) obj. -391.956 iterations 94
Cbc0038I Pass  34: suminf.    1.90909 (7) obj. -391.956 iterations 103
Cbc0038I Pass  35: suminf.    2.16486 (17) obj. -389.805 iterations 260
Cbc0038I Pass  36: suminf.    1.26561 (11) obj. -389.805 iterations 150
Cbc0038I Pass  37: suminf.    1.59091 (7) obj. -391.752 iterations 100
Cbc0038I Pass  38: suminf.    1.00000 (4) obj. -393.63 iterations 163
Cbc0038I Pass  39: suminf.    1.00000 (4) obj. -393.63 iterations 125
Cbc0038I Pass  40: suminf.    1.54972 (11) obj. -389.805 iterations 218
Cbc0038I Pass  41: suminf.    1.90909 (7) obj. -391.956 iterations 115
Cbc0038I Pass  42: suminf.    3.93992 (13) obj. -389.805 iterations 149
Cbc0038I Pass  43: suminf.    1.26561 (11) obj. -389.805 iterations 162
Cbc0038I Pass  44: suminf.    1.59091 (7) obj. -391.752 iterations 96
Cbc0038I Pass  45: suminf.    2.32896 (17) obj. -389.805 iterations 276
Cbc0038I Pass  46: suminf.    1.47196 (15) obj. -389.805 iterations 87
Cbc0038I Pass  47: suminf.    1.92482 (8) obj. -389.805 iterations 53
Cbc0038I Pass  48: suminf.    2.86021 (10) obj. -389.805 iterations 73
Cbc0038I Pass  49: suminf.    1.34614 (8) obj. -389.805 iterations 95
Cbc0038I Pass  50: suminf.    1.59091 (7) obj. -391.752 iterations 240
Cbc0038I Pass  51: suminf.    2.30025 (26) obj. -389.805 iterations 159
Cbc0038I Pass  52: suminf.    6.24394 (17) obj. -389.805 iterations 329
Cbc0038I Pass  53: suminf.    2.22222 (5) obj. -391.977 iterations 219
Cbc0038I Pass  54: suminf.    1.26561 (11) obj. -389.805 iterations 333
Cbc0038I Pass  55: suminf.    1.59091 (7) obj. -391.752 iterations 87
Cbc0038I Pass  56: suminf.    3.40566 (25) obj. -389.805 iterations 203
Cbc0038I Pass  57: suminf.    1.54972 (11) obj. -389.805 iterations 186
Cbc0038I Pass  58: suminf.    1.90909 (7) obj. -391.956 iterations 118
Cbc0038I Pass  59: suminf.    2.28277 (22) obj. -389.805 iterations 288
Cbc0038I Pass  60: suminf.    2.44356 (12) obj. -389.805 iterations 187
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 329 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1711 rows 451 columns, reduced to 52 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.56 seconds)
Cbc0038I After 0.56 seconds - Feasibility pump exiting with objective of -388.849 - took 0.26 seconds
Cbc0012I Integer solution of -388.84896 found by feasibility pump after 0 iterations and 0 nodes (0.56 seconds)
Cbc0038I Full problem 1711 rows 451 columns, reduced to 2 rows 5 columns
Cbc0031I 7 added rows had average density of 53
Cbc0013I At root node, 7 cuts changed objective from -393.62965 to -389.8384 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 13 column cuts (13 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 139 row cuts average 62.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0001I Search completed - best objective -388.8489603700888, took 422 iterations and 0 nodes (0.72 seconds)
Cbc0032I Strong branching done 8 times (236 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 58 variables fixed on reduced cost
Cuts at root node changed objective from -393.63 to -388.638
Probing was tried 11 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 11 times and created 139 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                388.84896037
Enumerated nodes:               0
Total iterations:               422
Time (CPU seconds):             0.69
Time (Wallclock seconds):       0.85

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.20

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5c560c46ed8a4a0a9e4f3d1b6f91f770-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5c560c46ed8a4a0a9e4f3d1b6f91f770-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 236930 COLUMNS
At line 950008 RHS
At line 1186934 BOUNDS
At line 1188998 ENDATA
Problem MODEL has 236925 rows, 2063 columns and 243713 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 348.595 - 0.43 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 328 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 2064 rows, 553 columns (553 integer (553 of which binary)) and 5488 elements
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.18421
Cbc0038I Solution found of -307.905
Cbc0038I Before mini branch and bound, 532 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2064 rows 553 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.68 seconds)
Cbc0038I Round again with cutoff of -311.974
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.31472 (48) obj. -311.974 iterations 591
Cbc0038I Pass   2: suminf.    3.12963 (13) obj. -337.069 iterations 119
Cbc0038I Pass   3: suminf.    2.81081 (34) obj. -335.073 iterations 174
Cbc0038I Pass   4: suminf.    4.61538 (12) obj. -321.568 iterations 233
Cbc0038I Pass   5: suminf.    1.67396 (52) obj. -311.974 iterations 255
Cbc0038I Pass   6: suminf.    4.78261 (11) obj. -324.167 iterations 143
Cbc0038I Pass   7: suminf.    5.30612 (20) obj. -328.067 iterations 195
Cbc0038I Pass   8: suminf.    3.00000 (6) obj. -336.607 iterations 145
Cbc0038I Pass   9: suminf.    0.31472 (48) obj. -311.974 iterations 193
Cbc0038I Pass  10: suminf.    2.84211 (9) obj. -342.277 iterations 169
Cbc0038I Pass  11: suminf.    2.84211 (9) obj. -342.277 iterations 50
Cbc0038I Pass  12: suminf.    1.91304 (11) obj. -326.674 iterations 143
Cbc0038I Solution found of -314.106
Cbc0038I Rounding solution of -316.843 is better than previous of -314.106

Cbc0038I Before mini branch and bound, 465 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2064 rows 553 columns, reduced to 103 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -316.843 to -336.132 (0.76 seconds)
Cbc0038I Round again with cutoff of -338.624
Cbc0038I Reduced cost fixing fixed 63 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.75747 (6) obj. -338.624 iterations 151
Cbc0038I Pass  14: suminf.    2.78571 (6) obj. -338.939 iterations 124
Cbc0038I Pass  15: suminf.    2.82199 (8) obj. -338.624 iterations 218
Cbc0038I Pass  16: suminf.    2.78571 (6) obj. -338.939 iterations 211
Cbc0038I Pass  17: suminf.    2.78571 (6) obj. -338.939 iterations 165
Cbc0038I Pass  18: suminf.    2.82484 (23) obj. -338.624 iterations 189
Cbc0038I Pass  19: suminf.    0.42308 (20) obj. -343.482 iterations 232
Cbc0038I Solution found of -341.173
Cbc0038I Before mini branch and bound, 493 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2064 rows 553 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.80 seconds)
Cbc0038I Round again with cutoff of -343.399
Cbc0038I Reduced cost fixing fixed 87 variables on major pass 4
Cbc0038I Pass  20: suminf.    5.35669 (34) obj. -343.399 iterations 302
Cbc0038I Pass  21: suminf.    7.18421 (21) obj. -348.595 iterations 235
Cbc0038I Pass  22: suminf.    7.18421 (21) obj. -348.595 iterations 131
Cbc0038I Pass  23: suminf.    6.03645 (17) obj. -343.399 iterations 172
Cbc0038I Pass  24: suminf.    5.65217 (13) obj. -347.612 iterations 159
Cbc0038I Pass  25: suminf.    5.65217 (13) obj. -347.612 iterations 78
Cbc0038I Pass  26: suminf.    6.33333 (19) obj. -344.178 iterations 91
Cbc0038I Pass  27: suminf.    5.65217 (13) obj. -347.612 iterations 92
Cbc0038I Pass  28: suminf.    6.33333 (19) obj. -344.178 iterations 141
Cbc0038I Pass  29: suminf.    6.63602 (20) obj. -343.399 iterations 180
Cbc0038I Pass  30: suminf.    6.63602 (20) obj. -343.399 iterations 162
Cbc0038I Pass  31: suminf.    6.29311 (28) obj. -343.399 iterations 164
Cbc0038I Pass  32: suminf.    2.35294 (10) obj. -348.207 iterations 137
Cbc0038I Pass  33: suminf.    5.35669 (34) obj. -343.399 iterations 260
Cbc0038I Pass  34: suminf.    7.18421 (21) obj. -348.595 iterations 218
Cbc0038I Pass  35: suminf.    7.18421 (21) obj. -348.595 iterations 91
Cbc0038I Pass  36: suminf.    6.22051 (28) obj. -343.399 iterations 201
Cbc0038I Pass  37: suminf.    6.19901 (28) obj. -343.399 iterations 166
Cbc0038I Pass  38: suminf.    6.80934 (29) obj. -343.399 iterations 279
Cbc0038I Pass  39: suminf.    6.67044 (29) obj. -343.399 iterations 87
Cbc0038I Pass  40: suminf.    6.30587 (33) obj. -343.399 iterations 77
Cbc0038I Pass  41: suminf.    1.00000 (17) obj. -343.719 iterations 201
Cbc0038I Pass  42: suminf.    0.23893 (13) obj. -343.399 iterations 212
Cbc0038I Pass  43: suminf.    0.24074 (13) obj. -343.416 iterations 89
Cbc0038I Pass  44: suminf.    0.49757 (15) obj. -343.399 iterations 126
Cbc0038I Pass  45: suminf.    6.58058 (14) obj. -343.399 iterations 218
Cbc0038I Pass  46: suminf.    6.10873 (22) obj. -343.399 iterations 216
Cbc0038I Pass  47: suminf.    6.10873 (22) obj. -343.399 iterations 230
Cbc0038I Pass  48: suminf.    6.34625 (33) obj. -343.399 iterations 120
Cbc0038I Pass  49: suminf.    5.35669 (34) obj. -343.399 iterations 209
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 455 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2064 rows 553 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.92 seconds)
Cbc0038I After 0.92 seconds - Feasibility pump exiting with objective of -341.173 - took 0.23 seconds
Cbc0012I Integer solution of -341.17292 found by feasibility pump after 0 iterations and 0 nodes (0.93 seconds)
Cbc0012I Integer solution of -342.55447 found by DiveCoefficient after 0 iterations and 0 nodes (0.94 seconds)
Cbc0038I Full problem 2064 rows 553 columns, reduced to 1 rows 2 columns
Cbc0031I 5 added rows had average density of 13.8
Cbc0013I At root node, 5 cuts changed objective from -348.59453 to -344.50103 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 16 column cuts (16 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -342.55447 best solution, best possible -344.50103 (1.01 seconds)
Cbc0001I Search completed - best objective -342.5544717355241, took 322 iterations and 2 nodes (1.04 seconds)
Cbc0032I Strong branching done 22 times (181 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 95 variables fixed on reduced cost
Cuts at root node changed objective from -348.595 to -344.501
Probing was tried 17 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 17 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 17 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                342.55447174
Enumerated nodes:               2
Total iterations:               322
Time (CPU seconds):             1.06
Time (Wallclock seconds):       1.19

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.41   (Wallclock seconds):       1.58

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/78f6bfc0f9774ce6b811641a86642a0c-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/78f6bfc0f9774ce6b811641a86642a0c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 82737 COLUMNS
At line 332334 RHS
At line 415067 BOUNDS
At line 416335 ENDATA
Problem MODEL has 82732 rows, 1267 columns and 86559 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 314.282 - 0.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 348 substitutions
Cgl0004I processed model has 1005 rows, 308 columns (308 integer (308 of which binary)) and 2600 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    3.00000 (14) obj. -314.282 iterations 165
Cbc0038I Solution found of -245.803
Cbc0038I Before mini branch and bound, 294 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of -252.651
Cbc0038I Pass   2: suminf.    3.00000 (14) obj. -314.282 iterations 0
Cbc0038I Pass   3: suminf.    0.47372 (16) obj. -252.651 iterations 244
Cbc0038I Pass   4: suminf.    0.47372 (16) obj. -252.651 iterations 8
Cbc0038I Pass   5: suminf.    1.48148 (8) obj. -294.461 iterations 104
Cbc0038I Pass   6: suminf.    1.48148 (8) obj. -294.461 iterations 4
Cbc0038I Pass   7: suminf.    3.05556 (11) obj. -289.929 iterations 67
Cbc0038I Pass   8: suminf.    1.48148 (8) obj. -294.461 iterations 56
Cbc0038I Pass   9: suminf.    2.50000 (13) obj. -289.586 iterations 62
Cbc0038I Pass  10: suminf.    3.05556 (11) obj. -289.929 iterations 90
Cbc0038I Pass  11: suminf.    3.66667 (8) obj. -266.652 iterations 171
Cbc0038I Pass  12: suminf.    1.42857 (3) obj. -264.139 iterations 67
Cbc0038I Pass  13: suminf.    0.21267 (9) obj. -252.651 iterations 70
Cbc0038I Pass  14: suminf.    2.86667 (9) obj. -272.944 iterations 48
Cbc0038I Pass  15: suminf.    1.30000 (3) obj. -266.818 iterations 14
Cbc0038I Pass  16: suminf.    0.14789 (5) obj. -252.651 iterations 43
Cbc0038I Pass  17: suminf.    1.14286 (3) obj. -273.595 iterations 41
Cbc0038I Pass  18: suminf.    1.14286 (3) obj. -273.595 iterations 2
Cbc0038I Pass  19: suminf.    6.57143 (14) obj. -268.876 iterations 64
Cbc0038I Pass  20: suminf.    1.00000 (3) obj. -267.575 iterations 59
Cbc0038I Pass  21: suminf.    1.00000 (3) obj. -267.575 iterations 4
Cbc0038I Pass  22: suminf.    0.50555 (5) obj. -252.651 iterations 50
Cbc0038I Pass  23: suminf.    1.00000 (3) obj. -267.575 iterations 48
Cbc0038I Pass  24: suminf.    1.00000 (3) obj. -267.575 iterations 92
Cbc0038I Pass  25: suminf.    3.44262 (33) obj. -266.217 iterations 149
Cbc0038I Pass  26: suminf.    6.94643 (16) obj. -267.886 iterations 153
Cbc0038I Pass  27: suminf.    0.50555 (5) obj. -252.651 iterations 96
Cbc0038I Pass  28: suminf.    2.87671 (30) obj. -269.439 iterations 129
Cbc0038I Pass  29: suminf.    2.81279 (30) obj. -267.803 iterations 139
Cbc0038I Pass  30: suminf.    0.94545 (4) obj. -267.667 iterations 149
Cbc0038I Pass  31: suminf.    0.14789 (5) obj. -252.651 iterations 103
Cbc0038I Rounding solution of -249.392 is better than previous of -245.803

Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1005 rows 308 columns, reduced to 345 rows 126 columns - 11 fixed gives 287, 102 - still too large
Cbc0038I Full problem 1005 rows 308 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -249.392 to -299.01 (0.17 seconds)
Cbc0038I Round again with cutoff of -302.064
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  31: suminf.    3.00000 (14) obj. -314.282 iterations 0
Cbc0038I Pass  32: suminf.    5.79348 (13) obj. -302.064 iterations 242
Cbc0038I Pass  33: suminf.    0.34783 (8) obj. -312.887 iterations 112
Cbc0038I Pass  34: suminf.    0.50000 (13) obj. -312.75 iterations 48
Cbc0038I Pass  35: suminf.    0.34783 (8) obj. -312.887 iterations 42
Cbc0038I Pass  36: suminf.    0.52941 (18) obj. -312.795 iterations 64
Cbc0038I Pass  37: suminf.    5.98039 (17) obj. -302.633 iterations 90
Cbc0038I Pass  38: suminf.    0.87884 (11) obj. -302.064 iterations 71
Cbc0038I Solution found of -308.055
Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1005 rows 308 columns, reduced to 22 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of -309.923
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 4
Cbc0038I Pass  39: suminf.    3.00000 (14) obj. -314.282 iterations 0
Cbc0038I Pass  40: suminf.    1.32052 (20) obj. -309.923 iterations 179
Cbc0038I Pass  41: suminf.    0.34783 (8) obj. -312.887 iterations 83
Cbc0038I Pass  42: suminf.    1.76750 (17) obj. -309.923 iterations 69
Cbc0038I Pass  43: suminf.    0.34783 (8) obj. -312.887 iterations 64
Cbc0038I Pass  44: suminf.    0.52941 (18) obj. -312.795 iterations 65
Cbc0038I Pass  45: suminf.    5.86377 (30) obj. -309.923 iterations 150
Cbc0038I Pass  46: suminf.    5.99249 (30) obj. -309.923 iterations 81
Cbc0038I Pass  47: suminf.    2.18376 (17) obj. -309.923 iterations 94
Cbc0038I Pass  48: suminf.    4.93147 (17) obj. -309.923 iterations 97
Cbc0038I Pass  49: suminf.    4.93147 (17) obj. -309.923 iterations 78
Cbc0038I Pass  50: suminf.    3.99467 (17) obj. -309.923 iterations 129
Cbc0038I Pass  51: suminf.    3.99467 (17) obj. -309.923 iterations 5
Cbc0038I Pass  52: suminf.    4.00055 (18) obj. -309.923 iterations 2
Cbc0038I Pass  53: suminf.    3.99467 (17) obj. -309.923 iterations 2
Cbc0038I Pass  54: suminf.    0.50000 (13) obj. -312.75 iterations 191
Cbc0038I Pass  55: suminf.    4.22731 (25) obj. -309.923 iterations 71
Cbc0038I Pass  56: suminf.    0.50000 (13) obj. -312.75 iterations 83
Cbc0038I Pass  57: suminf.    0.34783 (8) obj. -312.887 iterations 104
Cbc0038I Pass  58: suminf.    0.34783 (8) obj. -312.887 iterations 97
Cbc0038I Pass  59: suminf.    0.50000 (13) obj. -312.75 iterations 106
Cbc0038I Pass  60: suminf.    0.52941 (18) obj. -312.795 iterations 78
Cbc0038I Pass  61: suminf.    0.52941 (18) obj. -312.795 iterations 79
Cbc0038I Pass  62: suminf.    0.52941 (18) obj. -312.795 iterations 78
Cbc0038I Pass  63: suminf.    0.52941 (18) obj. -312.795 iterations 85
Cbc0038I Pass  64: suminf.    0.52941 (18) obj. -312.795 iterations 84
Cbc0038I Pass  65: suminf.    0.52941 (18) obj. -312.795 iterations 63
Cbc0038I Pass  66: suminf.    0.50000 (13) obj. -312.75 iterations 91
Cbc0038I Pass  67: suminf.    0.34783 (8) obj. -312.887 iterations 89
Cbc0038I Pass  68: suminf.    0.34783 (8) obj. -312.887 iterations 79
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 226 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1005 rows 308 columns, reduced to 121 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -308.055 to -308.897 (0.24 seconds)
Cbc0038I Round again with cutoff of -311.231
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 5
Cbc0038I Pass  68: suminf.    3.00000 (14) obj. -314.282 iterations 0
Cbc0038I Pass  69: suminf.    0.89138 (20) obj. -311.231 iterations 174
Cbc0038I Pass  70: suminf.    0.34783 (8) obj. -312.887 iterations 80
Cbc0038I Pass  71: suminf.    0.50000 (13) obj. -312.75 iterations 74
Cbc0038I Pass  72: suminf.    0.34783 (8) obj. -312.887 iterations 62
Cbc0038I Pass  73: suminf.    0.61111 (11) obj. -312.818 iterations 57
Cbc0038I Pass  74: suminf.    2.05540 (17) obj. -311.231 iterations 120
Cbc0038I Pass  75: suminf.    1.89389 (17) obj. -311.231 iterations 109
Cbc0038I Pass  76: suminf.    2.48669 (19) obj. -311.231 iterations 89
Cbc0038I Pass  77: suminf.    3.65431 (28) obj. -311.231 iterations 108
Cbc0038I Pass  78: suminf.    0.34783 (8) obj. -312.887 iterations 123
Cbc0038I Pass  79: suminf.    0.34783 (8) obj. -312.887 iterations 78
Cbc0038I Pass  80: suminf.    0.53678 (8) obj. -311.231 iterations 119
Cbc0038I Pass  81: suminf.    1.27777 (24) obj. -311.231 iterations 110
Cbc0038I Pass  82: suminf.    4.18536 (13) obj. -311.231 iterations 175
Cbc0038I Pass  83: suminf.    0.34783 (8) obj. -312.887 iterations 146
Cbc0038I Pass  84: suminf.    0.50000 (13) obj. -312.75 iterations 82
Cbc0038I Pass  85: suminf.    0.34783 (8) obj. -312.887 iterations 95
Cbc0038I Pass  86: suminf.    0.34783 (8) obj. -312.887 iterations 91
Cbc0038I Pass  87: suminf.    0.52941 (18) obj. -312.795 iterations 105
Cbc0038I Pass  88: suminf.    0.34783 (8) obj. -312.887 iterations 89
Cbc0038I Pass  89: suminf.    0.34783 (8) obj. -312.887 iterations 93
Cbc0038I Pass  90: suminf.    0.50000 (13) obj. -312.75 iterations 86
Cbc0038I Pass  91: suminf.    0.53678 (8) obj. -311.231 iterations 132
Cbc0038I Pass  92: suminf.    5.46982 (12) obj. -311.231 iterations 102
Cbc0038I Pass  93: suminf.    2.13376 (18) obj. -311.231 iterations 182
Cbc0038I Pass  94: suminf.    2.13376 (18) obj. -311.231 iterations 30
Cbc0038I Pass  95: suminf.    3.00000 (14) obj. -312.86 iterations 152
Cbc0038I Pass  96: suminf.    0.79383 (4) obj. -311.231 iterations 131
Cbc0038I Pass  97: suminf.    0.50000 (13) obj. -312.265 iterations 86
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1005 rows 308 columns, reduced to 34 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -308.897 - took 0.18 seconds
Cbc0012I Integer solution of -308.89689 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 1005 rows 308 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -312.82193 found by DiveCoefficient after 25 iterations and 0 nodes (0.31 seconds)
Cbc0031I 5 added rows had average density of 18.4
Cbc0013I At root node, 5 cuts changed objective from -314.28237 to -312.82193 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -312.8219288383889, took 25 iterations and 0 nodes (0.31 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Cuts at root node changed objective from -314.282 to -312.822
Probing was tried 4 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 4 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                312.82192884
Enumerated nodes:               0
Total iterations:               25
Time (CPU seconds):             0.34
Time (Wallclock seconds):       0.37

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.51

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/42ded4c5f5a34c59bba8f72e6cbe0049-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/42ded4c5f5a34c59bba8f72e6cbe0049-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 430800 COLUMNS
At line 1726093 RHS
At line 2156889 BOUNDS
At line 2159438 ENDATA
Problem MODEL has 430795 rows, 2548 columns and 440045 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 346.12 - 0.57 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 84 strengthened rows, 198 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 3184 rows, 777 columns (777 integer (777 of which binary)) and 8681 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 1.92
Cbc0038I Pass   1: (1.05 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 461
Cbc0038I Solution found of -273.56
Cbc0038I Before mini branch and bound, 761 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3184 rows 777 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.09 seconds)
Cbc0038I Round again with cutoff of -280.816
Cbc0038I Pass   2: (1.10 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 0
Cbc0038I Pass   3: (1.11 seconds) suminf.    1.28328 (22) obj. -280.816 iterations 411
Cbc0038I Pass   4: (1.12 seconds) suminf.    0.72605 (15) obj. -280.816 iterations 166
Cbc0038I Pass   5: (1.12 seconds) suminf.    4.74510 (11) obj. -319.558 iterations 237
Cbc0038I Pass   6: (1.14 seconds) suminf.    6.80576 (38) obj. -310.688 iterations 442
Cbc0038I Pass   7: (1.15 seconds) suminf.   18.52000 (39) obj. -302.834 iterations 547
Cbc0038I Pass   8: (1.16 seconds) suminf.    6.82937 (14) obj. -280.816 iterations 320
Cbc0038I Pass   9: (1.17 seconds) suminf.    0.44444 (8) obj. -313.592 iterations 175
Cbc0038I Solution found of -283.593
Cbc0038I Before mini branch and bound, 675 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3184 rows 777 columns, reduced to 105 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -283.593 to -327.004 (1.20 seconds)
Cbc0038I Round again with cutoff of -330.827
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  10: (1.21 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 0
Cbc0038I Pass  11: (1.22 seconds) suminf.    2.46802 (10) obj. -330.827 iterations 574
Cbc0038I Pass  12: (1.22 seconds) suminf.    2.46802 (10) obj. -330.827 iterations 10
Cbc0038I Pass  13: (1.23 seconds) suminf.    2.56410 (10) obj. -331.653 iterations 189
Cbc0038I Pass  14: (1.24 seconds) suminf.    1.38986 (23) obj. -330.827 iterations 320
Cbc0038I Pass  15: (1.25 seconds) suminf.    1.21622 (21) obj. -330.827 iterations 504
Cbc0038I Pass  16: (1.25 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 507
Cbc0038I Pass  17: (1.26 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 3
Cbc0038I Pass  18: (1.26 seconds) suminf.    4.88752 (16) obj. -330.827 iterations 219
Cbc0038I Pass  19: (1.27 seconds) suminf.    7.68000 (16) obj. -343.035 iterations 297
Cbc0038I Pass  20: (1.28 seconds) suminf.    0.96416 (4) obj. -330.827 iterations 439
Cbc0038I Solution found of -339.52
Cbc0038I Before mini branch and bound, 723 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3184 rows 777 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (1.30 seconds)
Cbc0038I Round again with cutoff of -341.5
Cbc0038I Reduced cost fixing fixed 94 variables on major pass 4
Cbc0038I Pass  21: (1.30 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 0
Cbc0038I Pass  22: (1.31 seconds) suminf.    2.81652 (16) obj. -341.5 iterations 234
Cbc0038I Pass  23: (1.31 seconds) suminf.    5.86011 (21) obj. -341.5 iterations 237
Cbc0038I Pass  24: (1.32 seconds) suminf.    7.65935 (26) obj. -341.5 iterations 301
Cbc0038I Pass  25: (1.33 seconds) suminf.    7.67821 (28) obj. -341.5 iterations 323
Cbc0038I Pass  26: (1.34 seconds) suminf.    8.68812 (23) obj. -341.5 iterations 273
Cbc0038I Pass  27: (1.35 seconds) suminf.   10.21449 (42) obj. -341.5 iterations 346
Cbc0038I Pass  28: (1.35 seconds) suminf.    7.97932 (27) obj. -341.5 iterations 273
Cbc0038I Pass  29: (1.36 seconds) suminf.   10.48259 (27) obj. -341.5 iterations 383
Cbc0038I Pass  30: (1.36 seconds) suminf.   10.48259 (27) obj. -341.5 iterations 18
Cbc0038I Pass  31: (1.37 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 459
Cbc0038I Pass  32: (1.37 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 157
Cbc0038I Pass  33: (1.38 seconds) suminf.    8.31443 (42) obj. -341.5 iterations 258
Cbc0038I Pass  34: (1.39 seconds) suminf.   10.17520 (25) obj. -341.5 iterations 465
Cbc0038I Pass  35: (1.39 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 414
Cbc0038I Pass  36: (1.39 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 3
Cbc0038I Pass  37: (1.40 seconds) suminf.    4.59894 (42) obj. -341.5 iterations 194
Cbc0038I Pass  38: (1.41 seconds) suminf.    8.00000 (24) obj. -341.5 iterations 551
Cbc0038I Pass  39: (1.42 seconds) suminf.    4.36219 (16) obj. -341.5 iterations 570
Cbc0038I Pass  40: (1.43 seconds) suminf.    6.61888 (23) obj. -341.5 iterations 268
Cbc0038I Pass  41: (1.44 seconds) suminf.    9.59160 (23) obj. -341.5 iterations 249
Cbc0038I Pass  42: (1.44 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 243
Cbc0038I Pass  43: (1.44 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 142
Cbc0038I Pass  44: (1.45 seconds) suminf.    7.54545 (20) obj. -341.5 iterations 386
Cbc0038I Pass  45: (1.46 seconds) suminf.    7.04163 (28) obj. -341.5 iterations 285
Cbc0038I Pass  46: (1.46 seconds) suminf.    8.54052 (19) obj. -341.5 iterations 238
Cbc0038I Pass  47: (1.47 seconds) suminf.    7.86861 (18) obj. -341.5 iterations 145
Cbc0038I Pass  48: (1.48 seconds) suminf.    4.04722 (22) obj. -341.5 iterations 479
Cbc0038I Pass  49: (1.48 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 451
Cbc0038I Pass  50: (1.49 seconds) suminf.    1.92000 (16) obj. -346.12 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 650 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3184 rows 777 columns, reduced to 137 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (1.51 seconds)
Cbc0038I After 1.51 seconds - Feasibility pump exiting with objective of -339.52 - took 0.44 seconds
Cbc0012I Integer solution of -339.51969 found by feasibility pump after 0 iterations and 0 nodes (1.51 seconds)
Cbc0031I 4 added rows had average density of 39
Cbc0013I At root node, 10 cuts changed objective from -346.11989 to -339.51969 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 20.0 elements, 15 column cuts (15 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 34 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 181.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -339.519693154355, took 259 iterations and 0 nodes (1.63 seconds)
Cbc0035I Maximum depth 0, 98 variables fixed on reduced cost
Cuts at root node changed objective from -346.12 to -339.52
Probing was tried 4 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 4 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                339.51969315
Enumerated nodes:               0
Total iterations:               259
Time (CPU seconds):             1.68
Time (Wallclock seconds):       1.91

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.32   (Wallclock seconds):       2.62

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ba48c6dbc4624123951f345099fe029c-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/ba48c6dbc4624123951f345099fe029c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 965441 COLUMNS
At line 3865918 RHS
At line 4831355 BOUNDS
At line 4834943 ENDATA
Problem MODEL has 965436 rows, 3587 columns and 978637 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 380.958 - 1.01 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 264 strengthened rows, 186 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 311 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4524 rows, 1101 columns (1101 integer (1101 of which binary)) and 12807 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.11111
Cbc0038I Pass   1: (2.18 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 697
Cbc0038I Solution found of -301.606
Cbc0038I Rounding solution of -306.25 is better than previous of -301.606

Cbc0038I Before mini branch and bound, 1075 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4524 rows 1101 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -306.25 to -352.194 (2.28 seconds)
Cbc0038I Round again with cutoff of -355.071
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 2
Cbc0038I Pass   2: (2.28 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 0
Cbc0038I Pass   3: (2.33 seconds) suminf.    1.26401 (47) obj. -355.071 iterations 1269
Cbc0038I Pass   4: (2.33 seconds) suminf.    1.26401 (47) obj. -355.071 iterations 20
Cbc0038I Pass   5: (2.34 seconds) suminf.    2.63793 (17) obj. -368.273 iterations 332
Cbc0038I Pass   6: (2.36 seconds) suminf.    3.39611 (9) obj. -355.071 iterations 403
Cbc0038I Pass   7: (2.37 seconds) suminf.    1.86063 (5) obj. -355.071 iterations 242
Cbc0038I Pass   8: (2.39 seconds) suminf.    1.73160 (6) obj. -355.071 iterations 514
Cbc0038I Pass   9: (2.40 seconds) suminf.    0.92308 (4) obj. -364.302 iterations 373
Cbc0038I Pass  10: (2.40 seconds) suminf.    0.92308 (4) obj. -364.302 iterations 8
Cbc0038I Pass  11: (2.42 seconds) suminf.    1.83134 (4) obj. -355.071 iterations 400
Cbc0038I Pass  12: (2.44 seconds) suminf.   11.66550 (28) obj. -355.071 iterations 609
Cbc0038I Pass  13: (2.45 seconds) suminf.    1.20000 (4) obj. -355.627 iterations 289
Cbc0038I Pass  14: (2.46 seconds) suminf.    1.20000 (4) obj. -355.627 iterations 5
Cbc0038I Pass  15: (2.47 seconds) suminf.    1.56160 (15) obj. -355.071 iterations 443
Cbc0038I Pass  16: (2.48 seconds) suminf.    1.84615 (4) obj. -358.23 iterations 227
Cbc0038I Pass  17: (2.48 seconds) suminf.    1.84615 (4) obj. -358.23 iterations 2
Cbc0038I Pass  18: (2.49 seconds) suminf.    1.84615 (4) obj. -358.23 iterations 239
Cbc0038I Pass  19: (2.50 seconds) suminf.    1.84615 (4) obj. -358.23 iterations 197
Cbc0038I Pass  20: (2.51 seconds) suminf.    7.05397 (18) obj. -355.071 iterations 371
Cbc0038I Pass  21: (2.52 seconds) suminf.    0.99058 (10) obj. -355.071 iterations 477
Cbc0038I Pass  22: (2.54 seconds) suminf.    0.97989 (6) obj. -355.071 iterations 597
Cbc0038I Pass  23: (2.55 seconds) suminf.    0.80000 (2) obj. -355.928 iterations 253
Cbc0038I Pass  24: (2.55 seconds) suminf.    0.80000 (2) obj. -355.928 iterations 9
Cbc0038I Pass  25: (2.57 seconds) suminf.    3.48454 (11) obj. -355.071 iterations 347
Cbc0038I Pass  26: (2.58 seconds) suminf.    0.80000 (2) obj. -358.479 iterations 274
Cbc0038I Pass  27: (2.59 seconds) suminf.    0.53551 (11) obj. -355.071 iterations 355
Cbc0038I Pass  28: (2.60 seconds) suminf.    0.56897 (11) obj. -355.511 iterations 230
Cbc0038I Pass  29: (2.62 seconds) suminf.    1.20551 (10) obj. -355.071 iterations 573
Cbc0038I Pass  30: (2.63 seconds) suminf.    0.82531 (8) obj. -355.071 iterations 302
Cbc0038I Pass  31: (2.65 seconds) suminf.    4.00000 (14) obj. -365.356 iterations 408
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 986 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4524 rows 1101 columns, reduced to 146 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -352.194 to -376.481 (2.69 seconds)
Cbc0038I Round again with cutoff of -377.377
Cbc0038I Reduced cost fixing fixed 188 variables on major pass 3
Cbc0038I Pass  31: (2.69 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 0
Cbc0038I Pass  32: (2.71 seconds) suminf.    9.41865 (20) obj. -377.377 iterations 855
Cbc0038I Pass  33: (2.72 seconds) suminf.    9.41865 (20) obj. -377.377 iterations 2
Cbc0038I Pass  34: (2.73 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 665
Cbc0038I Pass  35: (2.74 seconds) suminf.    5.22712 (25) obj. -377.377 iterations 322
Cbc0038I Pass  36: (2.75 seconds) suminf.    8.12663 (23) obj. -377.377 iterations 634
Cbc0038I Pass  37: (2.76 seconds) suminf.    4.42760 (23) obj. -377.377 iterations 324
Cbc0038I Pass  38: (2.76 seconds) suminf.    4.42760 (23) obj. -377.377 iterations 0
Cbc0038I Pass  39: (2.77 seconds) suminf.    8.12663 (23) obj. -377.377 iterations 342
Cbc0038I Pass  40: (2.78 seconds) suminf.    4.34822 (25) obj. -377.377 iterations 566
Cbc0038I Pass  41: (2.79 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 220
Cbc0038I Pass  42: (2.79 seconds) suminf.    0.39486 (4) obj. -377.377 iterations 210
Cbc0038I Pass  43: (2.80 seconds) suminf.    0.61538 (4) obj. -379.618 iterations 143
Cbc0038I Pass  44: (2.81 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 320
Cbc0038I Pass  45: (2.81 seconds) suminf.    1.60000 (4) obj. -379.387 iterations 372
Cbc0038I Pass  46: (2.82 seconds) suminf.    1.42500 (9) obj. -377.377 iterations 514
Cbc0038I Pass  47: (2.83 seconds) suminf.    0.61140 (3) obj. -377.377 iterations 307
Cbc0038I Pass  48: (2.84 seconds) suminf.    1.03914 (5) obj. -377.377 iterations 247
Cbc0038I Pass  49: (2.84 seconds) suminf.    0.61140 (3) obj. -377.377 iterations 242
Cbc0038I Pass  50: (2.85 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 420
Cbc0038I Pass  51: (2.86 seconds) suminf.    0.39486 (4) obj. -377.377 iterations 194
Cbc0038I Pass  52: (2.87 seconds) suminf.    0.61538 (4) obj. -379.618 iterations 147
Cbc0038I Pass  53: (2.87 seconds) suminf.    0.75000 (6) obj. -379.217 iterations 197
Cbc0038I Pass  54: (2.88 seconds) suminf.    0.06802 (4) obj. -377.377 iterations 336
Cbc0038I Pass  55: (2.88 seconds) suminf.    0.30769 (4) obj. -379.812 iterations 151
Cbc0038I Pass  56: (2.89 seconds) suminf.    0.25000 (3) obj. -377.975 iterations 255
Cbc0038I Pass  57: (2.90 seconds) suminf.    0.50000 (3) obj. -379.014 iterations 400
Cbc0038I Pass  58: (2.91 seconds) suminf.    0.27760 (3) obj. -377.377 iterations 633
Cbc0038I Pass  59: (2.92 seconds) suminf.    0.27760 (3) obj. -377.377 iterations 108
Cbc0038I Pass  60: (2.93 seconds) suminf.    0.40000 (2) obj. -380.172 iterations 435
Cbc0038I Rounding solution of -376.685 is better than previous of -376.481

Cbc0038I Before mini branch and bound, 1037 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4524 rows 1101 columns, reduced to 46 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -376.685 to -379.803 (2.96 seconds)
Cbc0038I Round again with cutoff of -380.15
Cbc0038I Reduced cost fixing fixed 243 variables on major pass 4
Cbc0038I Pass  60: (2.97 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 0
Cbc0038I Pass  61: (2.98 seconds) suminf.    4.59245 (20) obj. -380.15 iterations 776
Cbc0038I Pass  62: (2.99 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 653
Cbc0038I Pass  63: (3.00 seconds) suminf.    1.82497 (6) obj. -380.15 iterations 631
Cbc0038I Pass  64: (3.03 seconds) suminf.    0.75192 (6) obj. -380.15 iterations 1055
Cbc0038I Pass  65: (3.03 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 184
Cbc0038I Pass  66: (3.05 seconds) suminf.    1.71762 (20) obj. -380.15 iterations 679
Cbc0038I Pass  67: (3.06 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 664
Cbc0038I Pass  68: (3.08 seconds) suminf.    1.66277 (18) obj. -380.15 iterations 685
Cbc0038I Pass  69: (3.09 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 656
Cbc0038I Pass  70: (3.11 seconds) suminf.    2.43580 (12) obj. -380.15 iterations 722
Cbc0038I Pass  71: (3.11 seconds) suminf.    2.00000 (6) obj. -380.15 iterations 102
Cbc0038I Pass  72: (3.12 seconds) suminf.    1.40568 (5) obj. -380.15 iterations 50
Cbc0038I Pass  73: (3.13 seconds) suminf.    0.69565 (16) obj. -380.515 iterations 640
Cbc0038I Pass  74: (3.13 seconds) suminf.    0.69565 (16) obj. -380.515 iterations 3
Cbc0038I Pass  75: (3.15 seconds) suminf.    3.59772 (18) obj. -380.15 iterations 697
Cbc0038I Pass  76: (3.16 seconds) suminf.    1.61314 (19) obj. -380.15 iterations 720
Cbc0038I Pass  77: (3.18 seconds) suminf.    2.02365 (9) obj. -380.15 iterations 891
Cbc0038I Pass  78: (3.19 seconds) suminf.    2.89707 (8) obj. -380.15 iterations 11
Cbc0038I Pass  79: (3.19 seconds) suminf.    1.81890 (4) obj. -380.15 iterations 9
Cbc0038I Pass  80: (3.19 seconds) suminf.    0.65802 (7) obj. -380.15 iterations 12
Cbc0038I Pass  81: (3.21 seconds) suminf.    0.39426 (6) obj. -380.15 iterations 994
Cbc0038I Pass  82: (3.22 seconds) suminf.    0.40000 (2) obj. -380.172 iterations 173
Cbc0038I Pass  83: (3.23 seconds) suminf.    0.41799 (17) obj. -380.15 iterations 575
Cbc0038I Pass  84: (3.24 seconds) suminf.    1.86137 (6) obj. -380.15 iterations 564
Cbc0038I Pass  85: (3.25 seconds) suminf.    0.75192 (6) obj. -380.15 iterations 300
Cbc0038I Pass  86: (3.26 seconds) suminf.    0.80000 (2) obj. -380.337 iterations 169
Cbc0038I Pass  87: (3.26 seconds) suminf.    0.85714 (12) obj. -380.898 iterations 184
Cbc0038I Pass  88: (3.26 seconds) suminf.    0.69565 (16) obj. -380.948 iterations 165
Cbc0038I Pass  89: (3.28 seconds) suminf.    4.59245 (20) obj. -380.15 iterations 704
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1009 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4524 rows 1101 columns, reduced to 36 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (3.31 seconds)
Cbc0038I After 3.32 seconds - Feasibility pump exiting with objective of -379.803 - took 1.09 seconds
Cbc0012I Integer solution of -379.80297 found by feasibility pump after 0 iterations and 0 nodes (3.32 seconds)
Cbc0038I Full problem 4524 rows 1101 columns, reduced to 5 rows 6 columns
Cbc0031I 6 added rows had average density of 20.833333
Cbc0013I At root node, 6 cuts changed objective from -380.95845 to -380.10225 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 53 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 290.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -379.80297 best solution, best possible -380.08802 (3.48 seconds)
Cbc0012I Integer solution of -380.0178 found by DiveCoefficient after 91 iterations and 1 nodes (3.50 seconds)
Cbc0001I Search completed - best objective -380.0178032708711, took 107 iterations and 4 nodes (3.53 seconds)
Cbc0032I Strong branching done 38 times (195 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 246 variables fixed on reduced cost
Cuts at root node changed objective from -380.958 to -380.088
Probing was tried 13 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 13 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 10 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Optimal solution found

Objective value:                380.01780327
Enumerated nodes:               4
Total iterations:               107
Time (CPU seconds):             3.56
Time (Wallclock seconds):       4.22

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.02   (Wallclock seconds):       5.91

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/481b3fd1684a4711a9e66365a77e9c51-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/481b3fd1684a4711a9e66365a77e9c51-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1323866 COLUMNS
At line 5300132 RHS
At line 6623994 BOUNDS
At line 6627942 ENDATA
Problem MODEL has 1323861 rows, 3947 columns and 1340383 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 446.32 - 1.27 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 143 strengthened rows, 164 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0004I processed model has 6388 rows, 1387 columns (1387 integer (1387 of which binary)) and 17679 elements
Cbc0038I Initial state - 26 integers unsatisfied sum - 11.1818
Cbc0038I Pass   1: (2.84 seconds) suminf.    3.63636 (18) obj. -444.935 iterations 1116
Cbc0038I Solution found of -436.785
Cbc0038I Before mini branch and bound, 1359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6388 rows 1387 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (2.98 seconds)
Cbc0038I Round again with cutoff of -437.739
Cbc0038I Reduced cost fixing fixed 181 variables on major pass 2
Cbc0038I Pass   2: (2.99 seconds) suminf.    3.63636 (18) obj. -444.935 iterations 0
Cbc0038I Pass   3: (3.01 seconds) suminf.    0.07073 (1) obj. -437.739 iterations 572
Cbc0038I Pass   4: (3.02 seconds) suminf.    0.40000 (1) obj. -442.177 iterations 133
Cbc0038I Pass   5: (3.03 seconds) suminf.    3.29271 (13) obj. -437.739 iterations 412
Cbc0038I Pass   6: (3.04 seconds) suminf.    0.07073 (1) obj. -437.739 iterations 435
Cbc0038I Pass   7: (3.05 seconds) suminf.    0.20000 (1) obj. -439.481 iterations 142
Cbc0038I Pass   8: (3.06 seconds) suminf.    0.40000 (1) obj. -440.165 iterations 313
Cbc0038I Pass   9: (3.06 seconds) suminf.    0.40000 (1) obj. -440.165 iterations 292
Cbc0038I Pass  10: (3.07 seconds) suminf.    0.42004 (1) obj. -437.739 iterations 168
Cbc0038I Pass  11: (3.09 seconds) suminf.    1.67329 (4) obj. -437.739 iterations 543
Cbc0038I Pass  12: (3.11 seconds) suminf.    1.23402 (7) obj. -437.739 iterations 753
Cbc0038I Pass  13: (3.14 seconds) suminf.    1.82762 (7) obj. -437.739 iterations 887
Cbc0038I Pass  14: (3.15 seconds) suminf.    1.36364 (5) obj. -438.14 iterations 239
Cbc0038I Pass  15: (3.17 seconds) suminf.    1.75310 (6) obj. -437.739 iterations 960
Cbc0038I Pass  16: (3.18 seconds) suminf.    1.88913 (10) obj. -437.739 iterations 279
Cbc0038I Pass  17: (3.22 seconds) suminf.    2.32230 (8) obj. -437.739 iterations 1305
Cbc0038I Pass  18: (3.25 seconds) suminf.    1.71350 (7) obj. -437.739 iterations 794
Cbc0038I Pass  19: (3.26 seconds) suminf.    2.32230 (8) obj. -437.739 iterations 404
Cbc0038I Pass  20: (3.27 seconds) suminf.    0.38991 (8) obj. -437.739 iterations 338
Cbc0038I Solution found of -438.492
Cbc0038I Before mini branch and bound, 1326 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6388 rows 1387 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -438.492 to -440.361 (3.32 seconds)
Cbc0038I Round again with cutoff of -441.553
Cbc0038I Reduced cost fixing fixed 235 variables on major pass 3
Cbc0038I Pass  21: (3.33 seconds) suminf.    3.63636 (18) obj. -444.935 iterations 0
Cbc0038I Pass  22: (3.34 seconds) suminf.    0.62609 (9) obj. -441.553 iterations 606
Cbc0038I Pass  23: (3.36 seconds) suminf.    0.90909 (5) obj. -443.527 iterations 291
Cbc0038I Pass  24: (3.38 seconds) suminf.    1.31976 (14) obj. -441.553 iterations 734
Cbc0038I Pass  25: (3.40 seconds) suminf.    1.44769 (10) obj. -441.553 iterations 759
Cbc0038I Pass  26: (3.41 seconds) suminf.    1.54699 (4) obj. -441.553 iterations 310
Cbc0038I Pass  27: (3.43 seconds) suminf.    0.92515 (13) obj. -441.553 iterations 423
Cbc0038I Pass  28: (3.45 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 968
Cbc0038I Pass  29: (3.46 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 57
Cbc0038I Pass  30: (3.48 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 876
Cbc0038I Pass  31: (3.49 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 31
Cbc0038I Pass  32: (3.51 seconds) suminf.    6.63218 (21) obj. -441.553 iterations 850
Cbc0038I Pass  33: (3.53 seconds) suminf.    5.86957 (15) obj. -442.883 iterations 814
Cbc0038I Pass  34: (3.56 seconds) suminf.    6.27883 (17) obj. -441.553 iterations 1192
Cbc0038I Pass  35: (3.57 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 46
Cbc0038I Pass  36: (3.57 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 24
Cbc0038I Pass  37: (3.60 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 910
Cbc0038I Pass  38: (3.60 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 24
Cbc0038I Pass  39: (3.61 seconds) suminf.    6.23205 (17) obj. -441.553 iterations 228
Cbc0038I Pass  40: (3.64 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 886
Cbc0038I Pass  41: (3.64 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 26
Cbc0038I Pass  42: (3.66 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 879
Cbc0038I Pass  43: (3.67 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 25
Cbc0038I Pass  44: (3.70 seconds) suminf.    5.89592 (17) obj. -441.553 iterations 974
Cbc0038I Pass  45: (3.71 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 328
Cbc0038I Pass  46: (3.71 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 24
Cbc0038I Pass  47: (3.73 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 884
Cbc0038I Pass  48: (3.74 seconds) suminf.    6.52174 (15) obj. -443.929 iterations 17
Cbc0038I Pass  49: (3.77 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 1250
Cbc0038I Pass  50: (3.78 seconds) suminf.    3.19273 (17) obj. -441.553 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1309 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6388 rows 1387 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (3.82 seconds)
Cbc0038I After 3.82 seconds - Feasibility pump exiting with objective of -440.361 - took 0.93 seconds
Cbc0012I Integer solution of -440.3615 found by feasibility pump after 0 iterations and 0 nodes (3.82 seconds)
Cbc0012I Integer solution of -443.05763 found by DiveCoefficient after 0 iterations and 0 nodes (3.84 seconds)
Cbc0038I Full problem 6388 rows 1387 columns, reduced to 14 rows 11 columns
Cbc0031I 5 added rows had average density of 44.4
Cbc0013I At root node, 5 cuts changed objective from -446.32037 to -443.98482 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 28 column cuts (28 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 110 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -443.05763 best solution, best possible -443.98482 (4.10 seconds)
Cbc0012I Integer solution of -443.32562 found by rounding after 230 iterations and 5 nodes (4.26 seconds)
Cbc0004I Integer solution of -443.58142 found after 379 iterations and 10 nodes (4.42 seconds)
Cbc0001I Search completed - best objective -443.5814223847941, took 411 iterations and 12 nodes (4.42 seconds)
Cbc0032I Strong branching done 100 times (1244 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 3, 320 variables fixed on reduced cost
Cuts at root node changed objective from -446.32 to -443.985
Probing was tried 21 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 21 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)

Result - Optimal solution found

Objective value:                443.58142238
Enumerated nodes:               12
Total iterations:               411
Time (CPU seconds):             4.43
Time (Wallclock seconds):       5.38

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.45   (Wallclock seconds):       7.63

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6e041212d66d4f8480c4781a71651ca0-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6e041212d66d4f8480c4781a71651ca0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 418606 COLUMNS
At line 1677231 RHS
At line 2095833 BOUNDS
At line 2098292 ENDATA
Problem MODEL has 418601 rows, 2458 columns and 427375 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 368.928 - 0.58 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 362 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 2931 rows, 729 columns (729 integer (729 of which binary)) and 7897 elements
Cbc0038I Initial state - 58 integers unsatisfied sum - 17.8
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -339.298 iterations 609
Cbc0038I Solution found of -339.298
Cbc0038I Rounding solution of -345.942 is better than previous of -339.298

Cbc0038I Before mini branch and bound, 669 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2931 rows 729 columns, reduced to 35 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (1.08 seconds)
Cbc0038I Round again with cutoff of -348.241
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.16708 (6) obj. -348.241 iterations 2
Cbc0038I Pass   3: suminf.    0.86173 (17) obj. -348.241 iterations 372
Cbc0038I Pass   4: suminf.    1.88462 (7) obj. -355.456 iterations 179
Cbc0038I Pass   5: suminf.    2.59259 (10) obj. -354.609 iterations 244
Cbc0038I Pass   6: suminf.    0.87638 (17) obj. -348.241 iterations 394
Cbc0038I Pass   7: suminf.    2.52000 (9) obj. -351.709 iterations 204
Cbc0038I Pass   8: suminf.    0.82123 (9) obj. -348.241 iterations 262
Cbc0038I Pass   9: suminf.    0.23615 (17) obj. -348.241 iterations 349
Cbc0038I Pass  10: suminf.    2.52000 (9) obj. -351.709 iterations 199
Cbc0038I Pass  11: suminf.    6.44947 (21) obj. -348.241 iterations 223
Cbc0038I Pass  12: suminf.    1.47056 (13) obj. -348.241 iterations 942
Cbc0038I Pass  13: suminf.    2.57895 (7) obj. -350.54 iterations 161
Cbc0038I Pass  14: suminf.    2.24232 (13) obj. -348.241 iterations 266
Cbc0038I Pass  15: suminf.    2.57895 (7) obj. -350.54 iterations 185
Cbc0038I Pass  16: suminf.    2.37198 (8) obj. -348.241 iterations 231
Cbc0038I Pass  17: suminf.    2.57895 (7) obj. -350.54 iterations 362
Cbc0038I Pass  18: suminf.    5.24709 (29) obj. -348.241 iterations 433
Cbc0038I Pass  19: suminf.    0.53846 (7) obj. -349.604 iterations 309
Cbc0038I Pass  20: suminf.    0.53846 (7) obj. -349.604 iterations 1
Cbc0038I Pass  21: suminf.    3.53653 (13) obj. -348.241 iterations 810
Cbc0038I Pass  22: suminf.    3.92224 (17) obj. -348.241 iterations 214
Cbc0038I Pass  23: suminf.    3.20437 (26) obj. -348.241 iterations 310
Cbc0038I Pass  24: suminf.    2.48267 (12) obj. -348.241 iterations 326
Cbc0038I Pass  25: suminf.    2.48267 (12) obj. -348.241 iterations 22
Cbc0038I Pass  26: suminf.    2.84211 (6) obj. -353.219 iterations 174
Cbc0038I Pass  27: suminf.    2.84211 (6) obj. -353.219 iterations 13
Cbc0038I Pass  28: suminf.    2.32398 (12) obj. -348.241 iterations 310
Cbc0038I Pass  29: suminf.    0.63158 (6) obj. -350.263 iterations 242
Cbc0038I Pass  30: suminf.    1.77443 (12) obj. -348.241 iterations 320
Cbc0038I Pass  31: suminf.    0.63158 (6) obj. -350.263 iterations 326
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 582 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2931 rows 729 columns, reduced to 162 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -339.298 to -362.276 (1.35 seconds)
Cbc0038I Round again with cutoff of -363.607
Cbc0038I Reduced cost fixing fixed 114 variables on major pass 3
Cbc0038I Pass  31: suminf.   10.46768 (35) obj. -363.607 iterations 209
Cbc0038I Pass  32: suminf.    9.68063 (54) obj. -363.607 iterations 390
Cbc0038I Pass  33: suminf.    7.50018 (47) obj. -363.607 iterations 53
Cbc0038I Pass  34: suminf.    7.49484 (63) obj. -363.607 iterations 15
Cbc0038I Pass  35: suminf.    7.83605 (27) obj. -363.607 iterations 35
Cbc0038I Pass  36: suminf.    7.83605 (27) obj. -363.607 iterations 27
Cbc0038I Pass  37: suminf.    1.97871 (30) obj. -363.607 iterations 342
Cbc0038I Pass  38: suminf.    1.03101 (5) obj. -363.607 iterations 648
Cbc0038I Pass  39: suminf.    1.05263 (5) obj. -363.818 iterations 90
Cbc0038I Pass  40: suminf.    2.00777 (17) obj. -363.607 iterations 280
Cbc0038I Pass  41: suminf.    2.01469 (16) obj. -363.607 iterations 273
Cbc0038I Pass  42: suminf.    1.60000 (6) obj. -363.881 iterations 394
Cbc0038I Pass  43: suminf.    1.12652 (11) obj. -363.607 iterations 581
Cbc0038I Pass  44: suminf.    2.80000 (7) obj. -364.705 iterations 457
Cbc0038I Pass  45: suminf.    2.80000 (7) obj. -364.705 iterations 5
Cbc0038I Pass  46: suminf.    3.29645 (12) obj. -363.607 iterations 650
Cbc0038I Pass  47: suminf.    3.29645 (12) obj. -363.607 iterations 21
Cbc0038I Pass  48: suminf.    2.80000 (7) obj. -364.705 iterations 417
Cbc0038I Pass  49: suminf.    4.04335 (14) obj. -363.607 iterations 186
Cbc0038I Pass  50: suminf.    3.68691 (11) obj. -363.607 iterations 359
Cbc0038I Pass  51: suminf.    3.68691 (11) obj. -363.607 iterations 500
Cbc0038I Pass  52: suminf.    3.51670 (11) obj. -363.607 iterations 75
Cbc0038I Pass  53: suminf.    2.80000 (7) obj. -364.705 iterations 28
Cbc0038I Pass  54: suminf.    3.29645 (12) obj. -363.607 iterations 626
Cbc0038I Pass  55: suminf.    3.29645 (12) obj. -363.607 iterations 18
Cbc0038I Pass  56: suminf.    2.80000 (7) obj. -364.705 iterations 429
Cbc0038I Pass  57: suminf.    3.82214 (12) obj. -363.607 iterations 268
Cbc0038I Pass  58: suminf.    3.86414 (8) obj. -363.607 iterations 254
Cbc0038I Pass  59: suminf.    3.86414 (8) obj. -363.607 iterations 12
Cbc0038I Pass  60: suminf.    2.80000 (7) obj. -364.705 iterations 448
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 623 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2931 rows 729 columns, reduced to 102 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (1.55 seconds)
Cbc0038I After 1.55 seconds - Feasibility pump exiting with objective of -362.276 - took 0.50 seconds
Cbc0012I Integer solution of -362.27641 found by feasibility pump after 0 iterations and 0 nodes (1.55 seconds)
Cbc0038I Full problem 2931 rows 729 columns, reduced to 35 rows 17 columns
Cbc0031I 4 added rows had average density of 47
Cbc0013I At root node, 4 cuts changed objective from -368.92834 to -366.89674 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 139 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -362.27641 best solution, best possible -366.89674 (1.69 seconds)
Cbc0016I Integer solution of -362.756 found by strong branching after 619 iterations and 14 nodes (1.96 seconds)
Cbc0004I Integer solution of -363.05512 found after 708 iterations and 15 nodes (1.99 seconds)
Cbc0016I Integer solution of -363.34367 found by strong branching after 1087 iterations and 33 nodes (2.36 seconds)
Cbc0016I Integer solution of -365.62263 found by strong branching after 1160 iterations and 36 nodes (2.42 seconds)
Cbc0001I Search completed - best objective -365.6226336200971, took 1253 iterations and 40 nodes (2.46 seconds)
Cbc0032I Strong branching done 366 times (3848 iterations), fathomed 14 nodes and fixed 9 variables
Cbc0035I Maximum depth 5, 328 variables fixed on reduced cost
Cuts at root node changed objective from -368.928 to -366.897
Probing was tried 63 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 62 times and created 314 cuts of which 0 were active after adding rounds of cuts (0.137 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                365.62263362
Enumerated nodes:               40
Total iterations:               1253
Time (CPU seconds):             2.47
Time (Wallclock seconds):       2.71

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.08   (Wallclock seconds):       3.42

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5c3ed8062ca14b9583a5b0ca3ed522b1-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/5c3ed8062ca14b9583a5b0ca3ed522b1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 747974 COLUMNS
At line 2995636 RHS
At line 3743606 BOUNDS
At line 3746870 ENDATA
Problem MODEL has 747969 rows, 3263 columns and 760247 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 364.329 - 0.87 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 330 substitutions
Cgl0004I processed model has 4460 rows, 1049 columns (1049 integer (1049 of which binary)) and 12020 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 7.04
Cbc0038I Pass   1: (1.60 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 692
Cbc0038I Solution found of -299.421
Cbc0038I Rounding solution of -318.335 is better than previous of -299.421

Cbc0038I Before mini branch and bound, 1019 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (1.69 seconds)
Cbc0038I Round again with cutoff of -322.934
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: (1.70 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 0
Cbc0038I Pass   3: (1.73 seconds) suminf.    1.13733 (187) obj. -322.934 iterations 876
Cbc0038I Pass   4: (1.73 seconds) suminf.    1.13733 (187) obj. -322.934 iterations 0
Cbc0038I Pass   5: (1.75 seconds) suminf.    3.94737 (10) obj. -339.122 iterations 328
Cbc0038I Pass   6: (1.77 seconds) suminf.    2.66598 (153) obj. -328.059 iterations 709
Cbc0038I Pass   7: (1.80 seconds) suminf.    9.70810 (114) obj. -322.934 iterations 806
Cbc0038I Pass   8: (1.84 seconds) suminf.    0.46526 (187) obj. -322.934 iterations 734
Cbc0038I Pass   9: (1.84 seconds) suminf.    0.46526 (187) obj. -322.934 iterations 26
Cbc0038I Pass  10: (1.86 seconds) suminf.    0.51920 (2) obj. -322.934 iterations 399
Cbc0038I Pass  11: (1.87 seconds) suminf.    1.96984 (19) obj. -322.934 iterations 350
Cbc0038I Pass  12: (1.88 seconds) suminf.    0.30332 (2) obj. -322.934 iterations 241
Cbc0038I Pass  13: (1.89 seconds) suminf.    0.28270 (16) obj. -322.934 iterations 403
Cbc0038I Pass  14: (1.91 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 351
Cbc0038I Pass  15: (1.91 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 44
Cbc0038I Pass  16: (1.95 seconds) suminf.    1.13733 (187) obj. -322.934 iterations 636
Cbc0038I Pass  17: (1.95 seconds) suminf.    1.13733 (187) obj. -322.934 iterations 0
Cbc0038I Pass  18: (1.96 seconds) suminf.    0.60000 (4) obj. -334.378 iterations 273
Cbc0038I Solution found of -329.408
Cbc0038I Before mini branch and bound, 568 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 1795 rows 481 columns - 31 fixed gives 1623, 450 - still too large
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -329.408 to -344.218 (2.00 seconds)
Cbc0038I Round again with cutoff of -348.24
Cbc0038I Reduced cost fixing fixed 45 variables on major pass 3
Cbc0038I Pass  19: (2.01 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 0
Cbc0038I Pass  20: (2.04 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 858
Cbc0038I Pass  21: (2.04 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 0
Cbc0038I Pass  22: (2.05 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 267
Cbc0038I Pass  23: (2.07 seconds) suminf.    7.61714 (19) obj. -348.24 iterations 551
Cbc0038I Pass  24: (2.08 seconds) suminf.    4.87500 (13) obj. -353.44 iterations 292
Cbc0038I Pass  25: (2.09 seconds) suminf.    9.36172 (22) obj. -348.24 iterations 289
Cbc0038I Pass  26: (2.10 seconds) suminf.    4.87500 (13) obj. -353.44 iterations 258
Cbc0038I Pass  27: (2.13 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 763
Cbc0038I Pass  28: (2.13 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 0
Cbc0038I Pass  29: (2.14 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 250
Cbc0038I Pass  30: (2.15 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 32
Cbc0038I Pass  31: (2.16 seconds) suminf.    7.07143 (18) obj. -359.681 iterations 254
Cbc0038I Pass  32: (2.17 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 209
Cbc0038I Pass  33: (2.19 seconds) suminf.    6.76081 (14) obj. -348.24 iterations 398
Cbc0038I Pass  34: (2.21 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 499
Cbc0038I Pass  35: (2.21 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 0
Cbc0038I Pass  36: (2.22 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 313
Cbc0038I Pass  37: (2.23 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 10
Cbc0038I Pass  38: (2.23 seconds) suminf.    8.96296 (22) obj. -364.117 iterations 241
Cbc0038I Pass  39: (2.24 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 223
Cbc0038I Pass  40: (2.26 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 504
Cbc0038I Pass  41: (2.26 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 0
Cbc0038I Pass  42: (2.28 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 312
Cbc0038I Pass  43: (2.30 seconds) suminf.    5.13409 (17) obj. -348.24 iterations 826
Cbc0038I Pass  44: (2.32 seconds) suminf.    5.13409 (17) obj. -348.24 iterations 541
Cbc0038I Pass  45: (2.33 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 642
Cbc0038I Pass  46: (2.36 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 693
Cbc0038I Pass  47: (2.36 seconds) suminf.    4.84656 (17) obj. -348.24 iterations 171
Cbc0038I Pass  48: (2.37 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 255
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 952 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 56 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -344.218 to -353.087 (2.40 seconds)
Cbc0038I Round again with cutoff of -356.459
Cbc0038I Reduced cost fixing fixed 94 variables on major pass 4
Cbc0038I Pass  48: (2.41 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 0
Cbc0038I Pass  49: (2.43 seconds) suminf.    6.58451 (15) obj. -356.459 iterations 598
Cbc0038I Pass  50: (2.44 seconds) suminf.    6.58451 (15) obj. -356.459 iterations 268
Cbc0038I Pass  51: (2.46 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 527
Cbc0038I Pass  52: (2.48 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 78
Cbc0038I Pass  53: (2.49 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 33
Cbc0038I Pass  54: (2.50 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 25
Cbc0038I Pass  55: (2.51 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 18
Cbc0038I Pass  56: (2.51 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 33
Cbc0038I Pass  57: (2.52 seconds) suminf.    4.88281 (20) obj. -356.459 iterations 35
Cbc0038I Pass  58: (2.55 seconds) suminf.    5.13989 (30) obj. -356.459 iterations 621
Cbc0038I Pass  59: (2.58 seconds) suminf.    7.78311 (44) obj. -356.459 iterations 616
Cbc0038I Pass  60: (2.58 seconds) suminf.    8.02386 (20) obj. -356.459 iterations 73
Cbc0038I Pass  61: (2.61 seconds) suminf.    6.58451 (15) obj. -356.459 iterations 732
Cbc0038I Pass  62: (2.63 seconds) suminf.    5.92308 (14) obj. -357.744 iterations 217
Cbc0038I Pass  63: (2.66 seconds) suminf.    6.58451 (15) obj. -356.459 iterations 516
Cbc0038I Pass  64: (2.67 seconds) suminf.    6.58451 (15) obj. -356.459 iterations 254
Cbc0038I Pass  65: (2.69 seconds) suminf.    7.36110 (23) obj. -356.459 iterations 722
Cbc0038I Pass  66: (2.71 seconds) suminf.    7.36110 (23) obj. -356.459 iterations 608
Cbc0038I Pass  67: (2.72 seconds) suminf.    6.72576 (23) obj. -356.459 iterations 146
Cbc0038I Pass  68: (2.72 seconds) suminf.    6.87500 (30) obj. -357.606 iterations 252
Cbc0038I Pass  69: (2.73 seconds) suminf.    7.68324 (43) obj. -356.459 iterations 358
Cbc0038I Pass  70: (2.75 seconds) suminf.    0.46103 (1) obj. -356.459 iterations 557
Cbc0038I Pass  71: (2.76 seconds) suminf.    0.20000 (1) obj. -360.618 iterations 146
Cbc0038I Pass  72: (2.77 seconds) suminf.    0.32147 (2) obj. -356.459 iterations 257
Cbc0038I Pass  73: (2.78 seconds) suminf.    0.31198 (4) obj. -356.459 iterations 464
Cbc0038I Pass  74: (2.79 seconds) suminf.    1.20000 (3) obj. -362.22 iterations 358
Cbc0038I Pass  75: (2.80 seconds) suminf.    0.32147 (2) obj. -356.459 iterations 368
Cbc0038I Pass  76: (2.82 seconds) suminf.    5.05263 (24) obj. -360.619 iterations 575
Cbc0038I Pass  77: (2.84 seconds) suminf.    2.15385 (14) obj. -360.191 iterations 299
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 912 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 111 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -353.087 to -357.107 (2.88 seconds)
Cbc0038I Round again with cutoff of -359.273
Cbc0038I Reduced cost fixing fixed 130 variables on major pass 5
Cbc0038I Pass  77: (2.89 seconds) suminf.    6.33333 (19) obj. -361.464 iterations 16
Cbc0038I Pass  78: (2.91 seconds) suminf.    7.64519 (22) obj. -359.273 iterations 663
Cbc0038I Pass  79: (2.93 seconds) suminf.    6.26618 (26) obj. -359.273 iterations 600
Cbc0038I Pass  80: (2.93 seconds) suminf.    6.26618 (26) obj. -359.273 iterations 24
Cbc0038I Pass  81: (2.95 seconds) suminf.    8.01904 (26) obj. -359.273 iterations 649
Cbc0038I Pass  82: (2.96 seconds) suminf.    7.67296 (34) obj. -359.273 iterations 328
Cbc0038I Pass  83: (2.97 seconds) suminf.    6.33333 (19) obj. -361.464 iterations 248
Cbc0038I Pass  84: (2.97 seconds) suminf.    6.68854 (19) obj. -359.273 iterations 216
Cbc0038I Pass  85: (2.99 seconds) suminf.    7.40839 (25) obj. -359.273 iterations 351
Cbc0038I Pass  86: (3.00 seconds) suminf.    6.65656 (24) obj. -359.273 iterations 404
Cbc0038I Pass  87: (3.02 seconds) suminf.    3.69069 (45) obj. -359.273 iterations 603
Cbc0038I Pass  88: (3.03 seconds) suminf.    6.00000 (28) obj. -359.906 iterations 705
Cbc0038I Pass  89: (3.05 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 706
Cbc0038I Pass  90: (3.06 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 558
Cbc0038I Pass  91: (3.08 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 569
Cbc0038I Pass  92: (3.08 seconds) suminf.    3.99277 (56) obj. -359.273 iterations 29
Cbc0038I Pass  93: (3.09 seconds) suminf.    4.61408 (35) obj. -359.273 iterations 39
Cbc0038I Pass  94: (3.09 seconds) suminf.    4.11460 (34) obj. -359.273 iterations 39
Cbc0038I Pass  95: (3.09 seconds) suminf.    3.85352 (58) obj. -359.273 iterations 39
Cbc0038I Pass  96: (3.10 seconds) suminf.    3.71619 (60) obj. -359.273 iterations 24
Cbc0038I Pass  97: (3.10 seconds) suminf.    4.11460 (34) obj. -359.273 iterations 20
Cbc0038I Pass  98: (3.11 seconds) suminf.    5.08000 (31) obj. -359.273 iterations 450
Cbc0038I Pass  99: (3.13 seconds) suminf.    4.11460 (34) obj. -359.273 iterations 463
Cbc0038I Pass 100: (3.13 seconds) suminf.    4.63943 (30) obj. -359.273 iterations 61
Cbc0038I Pass 101: (3.14 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 43
Cbc0038I Pass 102: (3.14 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 38
Cbc0038I Pass 103: (3.14 seconds) suminf.    3.67767 (28) obj. -359.273 iterations 40
Cbc0038I Pass 104: (3.15 seconds) suminf.    4.27044 (36) obj. -359.273 iterations 37
Cbc0038I Pass 105: (3.15 seconds) suminf.    4.27044 (36) obj. -359.273 iterations 24
Cbc0038I Pass 106: (3.16 seconds) suminf.    4.27044 (36) obj. -359.273 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 910 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 136 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -357.107 to -357.346 (3.19 seconds)
Cbc0038I Round again with cutoff of -361.296
Cbc0038I Reduced cost fixing fixed 152 variables on major pass 6
Cbc0038I Pass 106: (3.20 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 35
Cbc0038I Pass 107: (3.23 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 932
Cbc0038I Pass 108: (3.23 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 42
Cbc0038I Pass 109: (3.25 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 684
Cbc0038I Pass 110: (3.26 seconds) suminf.    7.88422 (23) obj. -361.296 iterations 379
Cbc0038I Pass 111: (3.27 seconds) suminf.    6.50847 (16) obj. -361.296 iterations 482
Cbc0038I Pass 112: (3.29 seconds) suminf.    3.90000 (13) obj. -363.514 iterations 555
Cbc0038I Pass 113: (3.30 seconds) suminf.    3.90000 (13) obj. -363.514 iterations 192
Cbc0038I Pass 114: (3.32 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 847
Cbc0038I Pass 115: (3.32 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 35
Cbc0038I Pass 116: (3.34 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 722
Cbc0038I Pass 117: (3.34 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 75
Cbc0038I Pass 118: (3.36 seconds) suminf.   11.68230 (43) obj. -361.296 iterations 632
Cbc0038I Pass 119: (3.38 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 600
Cbc0038I Pass 120: (3.40 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 842
Cbc0038I Pass 121: (3.40 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 29
Cbc0038I Pass 122: (3.42 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 669
Cbc0038I Pass 123: (3.42 seconds) suminf.    5.88270 (22) obj. -361.296 iterations 332
Cbc0038I Pass 124: (3.43 seconds) suminf.    3.90000 (13) obj. -363.514 iterations 257
Cbc0038I Pass 125: (3.44 seconds) suminf.    4.88889 (22) obj. -363.049 iterations 172
Cbc0038I Pass 126: (3.44 seconds) suminf.    3.90000 (13) obj. -363.514 iterations 154
Cbc0038I Pass 127: (3.47 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 1016
Cbc0038I Pass 128: (3.47 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 21
Cbc0038I Pass 129: (3.49 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 675
Cbc0038I Pass 130: (3.49 seconds) suminf.    7.04000 (16) obj. -364.329 iterations 14
Cbc0038I Pass 131: (3.50 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 477
Cbc0038I Pass 132: (3.52 seconds) suminf.    9.46594 (33) obj. -361.296 iterations 529
Cbc0038I Pass 133: (3.53 seconds) suminf.    7.64260 (21) obj. -361.296 iterations 331
Cbc0038I Pass 134: (3.55 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 771
Cbc0038I Pass 135: (3.55 seconds) suminf.    5.40677 (19) obj. -361.296 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 952 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 42 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (3.58 seconds)
Cbc0038I After 3.58 seconds - Feasibility pump exiting with objective of -357.346 - took 1.88 seconds
Cbc0012I Integer solution of -357.34582 found by feasibility pump after 0 iterations and 0 nodes (3.58 seconds)
Cbc0038I Full problem 4460 rows 1049 columns, reduced to 2 rows 4 columns
Cbc0012I Integer solution of -363.0589 found by DiveCoefficient after 330 iterations and 0 nodes (3.76 seconds)
Cbc0031I 3 added rows had average density of 153.66667
Cbc0013I At root node, 3 cuts changed objective from -364.32884 to -363.0589 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 24 column cuts (24 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 26 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 247.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0001I Search completed - best objective -363.0589029171651, took 330 iterations and 0 nodes (3.77 seconds)
Cbc0035I Maximum depth 0, 106 variables fixed on reduced cost
Cuts at root node changed objective from -364.329 to -363.059
Probing was tried 5 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 5 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Optimal solution found

Objective value:                363.05890292
Enumerated nodes:               0
Total iterations:               330
Time (CPU seconds):             3.80
Time (Wallclock seconds):       4.32

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.92   (Wallclock seconds):       5.66

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/bd3ffd079ff2427cabfeab5c4bc0e252-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/bd3ffd079ff2427cabfeab5c4bc0e252-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 329606 COLUMNS
At line 1320944 RHS
At line 1650546 BOUNDS
At line 1652766 ENDATA
Problem MODEL has 329601 rows, 2219 columns and 337139 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 382.964 - 0.47 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 216 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0004I processed model has 2468 rows, 633 columns (633 integer (633 of which binary)) and 6682 elements
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.47619
Cbc0038I Solution found of -369.826
Cbc0038I Before mini branch and bound, 620 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2468 rows 633 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.77 seconds)
Cbc0038I Round again with cutoff of -371.14
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.11494 (7) obj. -371.14 iterations 578
Cbc0038I Pass   2: suminf.    0.84848 (7) obj. -379.524 iterations 119
Cbc0038I Pass   3: suminf.    0.42857 (3) obj. -371.86 iterations 186
Cbc0038I Pass   4: suminf.    0.42857 (3) obj. -371.86 iterations 138
Cbc0038I Pass   5: suminf.    1.28111 (14) obj. -371.14 iterations 300
Cbc0038I Pass   6: suminf.    1.40000 (7) obj. -371.914 iterations 102
Cbc0038I Pass   7: suminf.    2.75786 (9) obj. -371.14 iterations 349
Cbc0038I Pass   8: suminf.    2.80000 (7) obj. -371.734 iterations 239
Cbc0038I Pass   9: suminf.    1.18994 (50) obj. -376.392 iterations 326
Cbc0038I Pass  10: suminf.    0.11494 (7) obj. -371.14 iterations 211
Cbc0038I Pass  11: suminf.    0.63636 (7) obj. -377.1 iterations 121
Cbc0038I Pass  12: suminf.    3.47595 (17) obj. -371.14 iterations 165
Cbc0038I Pass  13: suminf.    2.39623 (14) obj. -371.14 iterations 338
Cbc0038I Pass  14: suminf.    0.09937 (6) obj. -371.14 iterations 251
Cbc0038I Pass  15: suminf.    0.18182 (6) obj. -372.163 iterations 115
Cbc0038I Pass  16: suminf.    0.36842 (7) obj. -371.87 iterations 212
Cbc0038I Pass  17: suminf.    0.42857 (3) obj. -372.46 iterations 239
Cbc0038I Pass  18: suminf.    0.07152 (13) obj. -371.14 iterations 237
Cbc0038I Solution found of -371.231
Cbc0038I Before mini branch and bound, 512 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2468 rows 633 columns, reduced to 119 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -371.231 to -371.689 (0.90 seconds)
Cbc0038I Round again with cutoff of -373.944
Cbc0038I Reduced cost fixing fixed 70 variables on major pass 3
Cbc0038I Pass  19: suminf.    0.37497 (7) obj. -373.944 iterations 20
Cbc0038I Pass  20: suminf.    0.93333 (7) obj. -380.076 iterations 140
Cbc0038I Pass  21: suminf.    1.33333 (5) obj. -379.719 iterations 177
Cbc0038I Pass  22: suminf.    0.66783 (4) obj. -373.944 iterations 333
Cbc0038I Pass  23: suminf.    0.40000 (2) obj. -376.199 iterations 205
Cbc0038I Pass  24: suminf.    3.10935 (22) obj. -373.944 iterations 141
Cbc0038I Pass  25: suminf.    0.47826 (11) obj. -381.995 iterations 132
Cbc0038I Pass  26: suminf.    0.47826 (11) obj. -381.995 iterations 3
Cbc0038I Pass  27: suminf.    5.72133 (18) obj. -373.944 iterations 282
Cbc0038I Pass  28: suminf.    5.72133 (18) obj. -373.944 iterations 145
Cbc0038I Pass  29: suminf.    4.69436 (19) obj. -373.944 iterations 262
Cbc0038I Pass  30: suminf.    4.69436 (19) obj. -373.944 iterations 136
Cbc0038I Pass  31: suminf.    0.47826 (11) obj. -381.995 iterations 438
Cbc0038I Pass  32: suminf.    3.88702 (21) obj. -373.944 iterations 274
Cbc0038I Pass  33: suminf.    3.20464 (23) obj. -373.944 iterations 393
Cbc0038I Pass  34: suminf.    0.47826 (11) obj. -381.995 iterations 420
Cbc0038I Pass  35: suminf.    0.47826 (11) obj. -381.995 iterations 13
Cbc0038I Pass  36: suminf.    5.72133 (18) obj. -373.944 iterations 239
Cbc0038I Pass  37: suminf.    9.72990 (23) obj. -373.944 iterations 198
Cbc0038I Pass  38: suminf.    5.72133 (18) obj. -373.944 iterations 127
Cbc0038I Pass  39: suminf.    7.26131 (18) obj. -373.944 iterations 176
Cbc0038I Pass  40: suminf.    7.26131 (18) obj. -373.944 iterations 176
Cbc0038I Pass  41: suminf.    5.72133 (18) obj. -373.944 iterations 148
Cbc0038I Pass  42: suminf.    0.47826 (11) obj. -381.995 iterations 140
Cbc0038I Pass  43: suminf.    3.87484 (9) obj. -373.944 iterations 111
Cbc0038I Pass  44: suminf.    2.35059 (11) obj. -373.944 iterations 99
Cbc0038I Pass  45: suminf.    7.18634 (19) obj. -373.944 iterations 133
Cbc0038I Pass  46: suminf.    2.35059 (11) obj. -373.944 iterations 96
Cbc0038I Pass  47: suminf.    0.66667 (12) obj. -381.664 iterations 167
Cbc0038I Pass  48: suminf.    7.80280 (27) obj. -373.944 iterations 195
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 515 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2468 rows 633 columns, reduced to 86 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -371.689 to -372.681 (1.05 seconds)
Cbc0038I Round again with cutoff of -376.65
Cbc0038I Reduced cost fixing fixed 87 variables on major pass 4
Cbc0038I Pass  48: suminf.    0.62135 (7) obj. -376.65 iterations 0
Cbc0038I Pass  49: suminf.    0.93333 (7) obj. -380.076 iterations 115
Cbc0038I Pass  50: suminf.    3.32641 (13) obj. -376.65 iterations 212
Cbc0038I Pass  51: suminf.    2.88950 (16) obj. -376.65 iterations 166
Cbc0038I Pass  52: suminf.    1.51540 (10) obj. -376.65 iterations 185
Cbc0038I Pass  53: suminf.    0.95652 (11) obj. -377.209 iterations 174
Cbc0038I Pass  54: suminf.    1.32022 (18) obj. -376.65 iterations 224
Cbc0038I Pass  55: suminf.    4.35658 (27) obj. -376.65 iterations 323
Cbc0038I Pass  56: suminf.    1.32988 (5) obj. -376.65 iterations 304
Cbc0038I Pass  57: suminf.    0.62135 (7) obj. -376.65 iterations 208
Cbc0038I Pass  58: suminf.    0.93333 (7) obj. -380.076 iterations 98
Cbc0038I Pass  59: suminf.    2.09032 (10) obj. -376.65 iterations 155
Cbc0038I Pass  60: suminf.    4.79951 (11) obj. -376.65 iterations 334
Cbc0038I Pass  61: suminf.    2.82098 (14) obj. -376.65 iterations 298
Cbc0038I Pass  62: suminf.    0.47826 (11) obj. -379.539 iterations 10
Cbc0038I Pass  63: suminf.    2.35977 (18) obj. -376.65 iterations 219
Cbc0038I Pass  64: suminf.    3.40058 (13) obj. -376.65 iterations 251
Cbc0038I Pass  65: suminf.    3.40058 (13) obj. -376.65 iterations 171
Cbc0038I Pass  66: suminf.    4.86740 (17) obj. -376.65 iterations 210
Cbc0038I Pass  67: suminf.    2.86957 (11) obj. -377.087 iterations 361
Cbc0038I Pass  68: suminf.    3.15425 (18) obj. -376.65 iterations 220
Cbc0038I Pass  69: suminf.    0.47826 (11) obj. -379.539 iterations 210
Cbc0038I Pass  70: suminf.    0.66667 (12) obj. -379.208 iterations 169
Cbc0038I Pass  71: suminf.    1.32210 (15) obj. -376.65 iterations 185
Cbc0038I Pass  72: suminf.    0.95652 (11) obj. -377.209 iterations 107
Cbc0038I Pass  73: suminf.    1.32022 (18) obj. -376.65 iterations 279
Cbc0038I Pass  74: suminf.    1.00000 (3) obj. -379.621 iterations 201
Cbc0038I Pass  75: suminf.    1.25720 (7) obj. -376.65 iterations 239
Cbc0038I Pass  76: suminf.    0.63371 (7) obj. -376.65 iterations 294
Cbc0038I Pass  77: suminf.    2.40000 (6) obj. -382.379 iterations 368
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 558 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2468 rows 633 columns, reduced to 31 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -372.681 to -376.287 (1.20 seconds)
Cbc0038I Round again with cutoff of -378.544
Cbc0038I Reduced cost fixing fixed 103 variables on major pass 5
Cbc0038I Pass  77: suminf.    0.79382 (7) obj. -378.544 iterations 0
Cbc0038I Pass  78: suminf.    0.93333 (7) obj. -380.076 iterations 103
Cbc0038I Pass  79: suminf.    2.00000 (15) obj. -378.544 iterations 299
Cbc0038I Pass  80: suminf.    1.44079 (34) obj. -378.544 iterations 289
Cbc0038I Pass  81: suminf.    1.00000 (3) obj. -379.621 iterations 284
Cbc0038I Pass  82: suminf.    1.00000 (3) obj. -379.621 iterations 100
Cbc0038I Pass  83: suminf.    1.34180 (11) obj. -378.544 iterations 230
Cbc0038I Pass  84: suminf.    1.00000 (3) obj. -379.621 iterations 224
Cbc0038I Pass  85: suminf.    1.11125 (15) obj. -378.544 iterations 156
Cbc0038I Pass  86: suminf.    1.11125 (15) obj. -378.544 iterations 116
Cbc0038I Pass  87: suminf.    1.18685 (10) obj. -378.544 iterations 176
Cbc0038I Pass  88: suminf.    1.00000 (3) obj. -379.621 iterations 169
Cbc0038I Pass  89: suminf.    1.33333 (5) obj. -379.719 iterations 208
Cbc0038I Pass  90: suminf.    2.71350 (12) obj. -378.544 iterations 215
Cbc0038I Pass  91: suminf.    3.87914 (23) obj. -378.544 iterations 169
Cbc0038I Pass  92: suminf.    2.25000 (9) obj. -381.601 iterations 281
Cbc0038I Pass  93: suminf.    7.06567 (27) obj. -378.544 iterations 239
Cbc0038I Pass  94: suminf.    2.00748 (19) obj. -378.544 iterations 201
Cbc0038I Pass  95: suminf.    4.33282 (18) obj. -378.544 iterations 273
Cbc0038I Pass  96: suminf.    1.56522 (9) obj. -379.67 iterations 264
Cbc0038I Pass  97: suminf.    5.50289 (17) obj. -378.544 iterations 394
Cbc0038I Pass  98: suminf.    5.50289 (17) obj. -378.544 iterations 131
Cbc0038I Pass  99: suminf.    0.79382 (7) obj. -378.544 iterations 474
Cbc0038I Pass 100: suminf.    0.93333 (7) obj. -380.076 iterations 73
Cbc0038I Pass 101: suminf.    2.77847 (13) obj. -378.544 iterations 143
Cbc0038I Pass 102: suminf.    1.33333 (5) obj. -379.719 iterations 185
Cbc0038I Pass 103: suminf.    2.28402 (13) obj. -378.544 iterations 197
Cbc0038I Pass 104: suminf.    1.33333 (5) obj. -379.719 iterations 163
Cbc0038I Pass 105: suminf.    2.14923 (28) obj. -378.544 iterations 166
Cbc0038I Pass 106: suminf.    0.93333 (7) obj. -380.076 iterations 214
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 491 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2468 rows 633 columns, reduced to 103 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (1.33 seconds)
Cbc0038I After 1.34 seconds - Feasibility pump exiting with objective of -376.287 - took 0.56 seconds
Cbc0012I Integer solution of -376.28724 found by feasibility pump after 0 iterations and 0 nodes (1.34 seconds)
Cbc0012I Integer solution of -377.9954 found by DiveCoefficient after 0 iterations and 0 nodes (1.34 seconds)
Cbc0038I Full problem 2468 rows 633 columns, reduced to 4 rows 5 columns
Cbc0031I 3 added rows had average density of 81.666667
Cbc0013I At root node, 3 cuts changed objective from -382.96377 to -380.9747 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 30 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 159.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -377.9954 best solution, best possible -380.9747 (1.43 seconds)
Cbc0012I Integer solution of -379.12592 found by DiveCoefficient after 313 iterations and 3 nodes (1.48 seconds)
Cbc0001I Search completed - best objective -379.125921050318, took 849 iterations and 16 nodes (1.63 seconds)
Cbc0032I Strong branching done 192 times (1540 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 6, 166 variables fixed on reduced cost
Cuts at root node changed objective from -382.964 to -380.975
Probing was tried 46 times and created 151 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 44 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 44 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ImplicationCuts was tried 37 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                379.12592105
Enumerated nodes:               16
Total iterations:               849
Time (CPU seconds):             1.72
Time (Wallclock seconds):       1.83

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.20   (Wallclock seconds):       2.38

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cac217a51aee4229bbc495876d2b5bda-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cac217a51aee4229bbc495876d2b5bda-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1264118 COLUMNS
At line 5061290 RHS
At line 6325404 BOUNDS
At line 6329586 ENDATA
Problem MODEL has 1264113 rows, 4181 columns and 1279799 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 431.678 - 1.24 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 467 strengthened rows, 238 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 595 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 164 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 98 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 5060 rows, 1211 columns (1211 integer (1211 of which binary)) and 14905 elements
Cbc0038I Initial state - 21 integers unsatisfied sum - 7
Cbc0038I Pass   1: (3.09 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 710
Cbc0038I Solution found of -385.38
Cbc0038I Rounding solution of -408.3 is better than previous of -385.38

Cbc0038I Before mini branch and bound, 1180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5060 rows 1211 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (3.23 seconds)
Cbc0038I Round again with cutoff of -410.638
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 2
Cbc0038I Pass   2: (3.24 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 0
Cbc0038I Pass   3: (3.28 seconds) suminf.    0.15900 (1) obj. -410.638 iterations 1088
Cbc0038I Pass   4: (3.28 seconds) suminf.    0.15900 (1) obj. -410.638 iterations 0
Cbc0038I Pass   5: (3.29 seconds) suminf.    0.33333 (1) obj. -415.363 iterations 241
Cbc0038I Pass   6: (3.30 seconds) suminf.    0.46052 (1) obj. -410.638 iterations 188
Cbc0038I Pass   7: (3.32 seconds) suminf.    7.70973 (18) obj. -410.638 iterations 526
Cbc0038I Pass   8: (3.34 seconds) suminf.    3.86130 (11) obj. -410.638 iterations 779
Cbc0038I Pass   9: (3.36 seconds) suminf.    0.66667 (8) obj. -424.182 iterations 745
Cbc0038I Pass  10: (3.36 seconds) suminf.    0.66667 (8) obj. -424.182 iterations 8
Cbc0038I Pass  11: (3.39 seconds) suminf.    0.15900 (1) obj. -410.638 iterations 609
Cbc0038I Pass  12: (3.39 seconds) suminf.    0.15900 (1) obj. -410.638 iterations 0
Cbc0038I Pass  13: (3.40 seconds) suminf.    0.33333 (1) obj. -415.363 iterations 237
Cbc0038I Pass  14: (3.41 seconds) suminf.    0.46052 (1) obj. -410.638 iterations 172
Cbc0038I Pass  15: (3.43 seconds) suminf.    5.50000 (11) obj. -413.943 iterations 435
Cbc0038I Pass  16: (3.44 seconds) suminf.    2.44444 (11) obj. -414.048 iterations 293
Cbc0038I Pass  17: (3.44 seconds) suminf.    2.44444 (11) obj. -414.048 iterations 42
Cbc0038I Pass  18: (3.48 seconds) suminf.    0.20704 (11) obj. -410.638 iterations 1048
Cbc0038I Pass  19: (3.49 seconds) suminf.    0.20704 (11) obj. -410.638 iterations 238
Cbc0038I Pass  20: (3.50 seconds) suminf.    1.76471 (10) obj. -428.508 iterations 688
Cbc0038I Pass  21: (3.51 seconds) suminf.    1.76471 (10) obj. -428.508 iterations 0
Cbc0038I Pass  22: (3.52 seconds) suminf.    2.50000 (10) obj. -428.005 iterations 285
Cbc0038I Pass  23: (3.52 seconds) suminf.    1.76471 (10) obj. -428.508 iterations 237
Cbc0038I Pass  24: (3.56 seconds) suminf.    0.20704 (11) obj. -410.638 iterations 1062
Cbc0038I Pass  25: (3.57 seconds) suminf.    0.20704 (11) obj. -410.638 iterations 242
Cbc0038I Pass  26: (3.58 seconds) suminf.    1.76471 (10) obj. -428.508 iterations 663
Cbc0038I Pass  27: (3.59 seconds) suminf.    1.76471 (10) obj. -428.508 iterations 324
Cbc0038I Pass  28: (3.61 seconds) suminf.    5.01143 (15) obj. -410.638 iterations 616
Cbc0038I Pass  29: (3.63 seconds) suminf.    4.58278 (13) obj. -410.638 iterations 697
Cbc0038I Pass  30: (3.65 seconds) suminf.    3.67630 (13) obj. -410.638 iterations 125
Cbc0038I Pass  31: (3.65 seconds) suminf.    3.40001 (14) obj. -410.638 iterations 3
Cbc0038I Rounding solution of -410.21 is better than previous of -408.3

Cbc0038I Before mini branch and bound, 1120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5060 rows 1211 columns, reduced to 28 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -410.21 to -420.514 (3.71 seconds)
Cbc0038I Round again with cutoff of -422.747
Cbc0038I Reduced cost fixing fixed 114 variables on major pass 3
Cbc0038I Pass  31: (3.71 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 0
Cbc0038I Pass  32: (3.75 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 1138
Cbc0038I Pass  33: (3.76 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 0
Cbc0038I Pass  34: (3.77 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 388
Cbc0038I Pass  35: (3.80 seconds) suminf.    3.37493 (14) obj. -422.747 iterations 694
Cbc0038I Pass  36: (3.82 seconds) suminf.    0.73264 (17) obj. -422.747 iterations 691
Cbc0038I Pass  37: (3.82 seconds) suminf.    0.73264 (17) obj. -422.747 iterations 0
Cbc0038I Pass  38: (3.84 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 649
Cbc0038I Pass  39: (3.84 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 10
Cbc0038I Pass  40: (3.88 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 993
Cbc0038I Pass  41: (3.88 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 0
Cbc0038I Pass  42: (3.90 seconds) suminf.    2.80867 (15) obj. -422.747 iterations 563
Cbc0038I Pass  43: (3.92 seconds) suminf.    1.71228 (22) obj. -422.747 iterations 586
Cbc0038I Pass  44: (3.96 seconds) suminf.    2.78038 (11) obj. -422.747 iterations 1049
Cbc0038I Pass  45: (3.97 seconds) suminf.    2.78038 (11) obj. -422.747 iterations 147
Cbc0038I Pass  46: (3.98 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 735
Cbc0038I Pass  47: (4.02 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 946
Cbc0038I Pass  48: (4.02 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 0
Cbc0038I Pass  49: (4.03 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 394
Cbc0038I Pass  50: (4.05 seconds) suminf.    4.69854 (18) obj. -422.747 iterations 487
Cbc0038I Pass  51: (4.07 seconds) suminf.    3.91335 (12) obj. -422.747 iterations 576
Cbc0038I Pass  52: (4.08 seconds) suminf.    3.91335 (12) obj. -422.747 iterations 137
Cbc0038I Pass  53: (4.09 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 729
Cbc0038I Pass  54: (4.12 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 731
Cbc0038I Pass  55: (4.12 seconds) suminf.    3.20559 (18) obj. -422.747 iterations 0
Cbc0038I Pass  56: (4.14 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 377
Cbc0038I Pass  57: (4.16 seconds) suminf.    3.50327 (18) obj. -422.747 iterations 731
Cbc0038I Pass  58: (4.18 seconds) suminf.    3.44714 (16) obj. -422.747 iterations 472
Cbc0038I Pass  59: (4.20 seconds) suminf.    3.44714 (16) obj. -422.747 iterations 421
Cbc0038I Pass  60: (4.21 seconds) suminf.    3.52941 (10) obj. -429.318 iterations 729
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5060 rows 1211 columns, reduced to 25 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -420.514 to -428.646 (4.25 seconds)
Cbc0038I Round again with cutoff of -429.555
Cbc0038I Reduced cost fixing fixed 208 variables on major pass 4
Cbc0038I Pass  60: (4.28 seconds) suminf.    6.35294 (18) obj. -431.58 iterations 217
Cbc0038I Pass  61: (4.30 seconds) suminf.    7.89451 (18) obj. -429.555 iterations 336
Cbc0038I Pass  62: (4.32 seconds) suminf.    8.57190 (24) obj. -429.555 iterations 714
Cbc0038I Pass  63: (4.33 seconds) suminf.    8.57190 (24) obj. -429.555 iterations 154
Cbc0038I Pass  64: (4.35 seconds) suminf.    7.49833 (23) obj. -429.555 iterations 665
Cbc0038I Pass  65: (4.37 seconds) suminf.    7.49808 (27) obj. -429.555 iterations 505
Cbc0038I Pass  66: (4.38 seconds) suminf.    8.52811 (33) obj. -429.555 iterations 112
Cbc0038I Pass  67: (4.38 seconds) suminf.    8.18166 (35) obj. -429.555 iterations 31
Cbc0038I Pass  68: (4.39 seconds) suminf.    8.65425 (25) obj. -429.555 iterations 91
Cbc0038I Pass  69: (4.39 seconds) suminf.    8.47620 (25) obj. -429.555 iterations 84
Cbc0038I Pass  70: (4.40 seconds) suminf.    8.75102 (25) obj. -429.555 iterations 57
Cbc0038I Pass  71: (4.40 seconds) suminf.    8.06286 (32) obj. -429.555 iterations 40
Cbc0038I Pass  72: (4.41 seconds) suminf.    6.97498 (18) obj. -429.555 iterations 119
Cbc0038I Pass  73: (4.43 seconds) suminf.    0.69231 (9) obj. -431.469 iterations 699
Cbc0038I Pass  74: (4.43 seconds) suminf.    2.36594 (25) obj. -429.555 iterations 216
Cbc0038I Pass  75: (4.44 seconds) suminf.    0.69231 (9) obj. -431.469 iterations 176
Cbc0038I Pass  76: (4.45 seconds) suminf.    1.96605 (9) obj. -429.555 iterations 429
Cbc0038I Pass  77: (4.48 seconds) suminf.    1.68283 (13) obj. -429.555 iterations 694
Cbc0038I Pass  78: (4.50 seconds) suminf.    0.69231 (9) obj. -431.469 iterations 696
Cbc0038I Pass  79: (4.51 seconds) suminf.    0.69231 (9) obj. -431.469 iterations 239
Cbc0038I Pass  80: (4.51 seconds) suminf.    2.20992 (22) obj. -429.555 iterations 325
Cbc0038I Pass  81: (4.53 seconds) suminf.    1.92957 (5) obj. -429.555 iterations 350
Cbc0038I Pass  82: (4.55 seconds) suminf.    1.68283 (13) obj. -429.555 iterations 648
Cbc0038I Pass  83: (4.55 seconds) suminf.    1.68283 (13) obj. -429.555 iterations 79
Cbc0038I Pass  84: (4.58 seconds) suminf.    2.09287 (10) obj. -429.555 iterations 763
Cbc0038I Pass  85: (4.59 seconds) suminf.    0.69231 (9) obj. -431.469 iterations 385
Cbc0038I Pass  86: (4.60 seconds) suminf.    1.33333 (4) obj. -430.788 iterations 311
Cbc0038I Pass  87: (4.60 seconds) suminf.    3.32051 (30) obj. -429.555 iterations 385
Cbc0038I Pass  88: (4.62 seconds) suminf.    4.01254 (15) obj. -429.555 iterations 444
Cbc0038I Pass  89: (4.63 seconds) suminf.    2.72847 (16) obj. -429.555 iterations 393
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1089 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5060 rows 1211 columns, reduced to 68 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (4.67 seconds)
Cbc0038I After 4.68 seconds - Feasibility pump exiting with objective of -428.646 - took 1.52 seconds
Cbc0012I Integer solution of -428.6459 found by feasibility pump after 0 iterations and 0 nodes (4.68 seconds)
Cbc0038I Full problem 5060 rows 1211 columns, reduced to 2 rows 3 columns
Cbc0013I At root node, 0 cuts changed objective from -431.67775 to -431.67775 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -428.6459 best solution, best possible -431.67775 (4.94 seconds)
Cbc0004I Integer solution of -429.70124 found after 2255 iterations and 29 nodes (8.16 seconds)
Cbc0001I Search completed - best objective -429.701242807035, took 2666 iterations and 34 nodes (8.27 seconds)
Cbc0032I Strong branching done 312 times (12629 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 9, 302 variables fixed on reduced cost
Cuts at root node changed objective from -431.678 to -431.678
Probing was tried 14 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)

Result - Optimal solution found

Objective value:                429.70124281
Enumerated nodes:               34
Total iterations:               2666
Time (CPU seconds):             8.15
Time (Wallclock seconds):       9.35

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.04   (Wallclock seconds):       11.45

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/acaf063138d74c9c9fb46283fa597cdd-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/acaf063138d74c9c9fb46283fa597cdd-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3584630 COLUMNS
At line 14346092 RHS
At line 17930718 BOUNDS
At line 17937054 ENDATA
Problem MODEL has 3584625 rows, 6335 columns and 3610649 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 468.265 - 2.60 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 716 strengthened rows, 174 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 865 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 280 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 188 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 96 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 9365 rows, 2090 columns (2090 integer (2090 of which binary)) and 27684 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.80952
Cbc0038I Solution found of -435.181
Cbc0038I Before mini branch and bound, 2080 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9365 rows 2090 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (9.40 seconds)
Cbc0038I Round again with cutoff of -438.49
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 2
Cbc0038I Pass   1: (9.50 seconds) suminf.    0.27298 (2) obj. -438.49 iterations 2080
Cbc0038I Pass   2: (9.53 seconds) suminf.    0.76923 (2) obj. -450.098 iterations 481
Cbc0038I Pass   3: (9.56 seconds) suminf.    1.00000 (3) obj. -443.163 iterations 512
Cbc0038I Pass   4: (9.61 seconds) suminf.    0.07530 (2) obj. -438.49 iterations 917
Cbc0038I Pass   5: (9.63 seconds) suminf.    0.15385 (2) obj. -439.442 iterations 481
Cbc0038I Pass   6: (9.68 seconds) suminf.    0.49338 (6) obj. -438.49 iterations 769
Cbc0038I Pass   7: (9.71 seconds) suminf.    0.32578 (11) obj. -438.49 iterations 743
Cbc0038I Pass   8: (9.75 seconds) suminf.    0.47619 (10) obj. -441.713 iterations 932
Cbc0038I Pass   9: (9.79 seconds) suminf.    0.07530 (2) obj. -438.49 iterations 771
Cbc0038I Pass  10: (9.82 seconds) suminf.    0.15385 (2) obj. -439.442 iterations 434
Cbc0038I Pass  11: (9.86 seconds) suminf.    0.60528 (4) obj. -438.49 iterations 791
Cbc0038I Pass  12: (9.90 seconds) suminf.    0.32578 (11) obj. -438.49 iterations 736
Cbc0038I Pass  13: (9.94 seconds) suminf.    0.47619 (10) obj. -441.713 iterations 938
Cbc0038I Pass  14: (9.99 seconds) suminf.    0.07530 (2) obj. -438.49 iterations 818
Cbc0038I Pass  15: (10.02 seconds) suminf.    0.15385 (2) obj. -439.442 iterations 465
Cbc0038I Pass  16: (10.07 seconds) suminf.    0.67534 (3) obj. -438.49 iterations 982
Cbc0038I Pass  17: (10.11 seconds) suminf.    0.32578 (11) obj. -438.49 iterations 621
Cbc0038I Pass  18: (10.14 seconds) suminf.    0.32678 (4) obj. -438.49 iterations 582
Cbc0038I Pass  19: (10.18 seconds) suminf.    0.32578 (11) obj. -438.49 iterations 574
Cbc0038I Pass  20: (10.21 seconds) suminf.    0.47619 (10) obj. -441.713 iterations 909
Cbc0038I Pass  21: (10.26 seconds) suminf.    0.07530 (2) obj. -438.49 iterations 857
Cbc0038I Pass  22: (10.29 seconds) suminf.    0.15385 (2) obj. -439.442 iterations 449
Cbc0038I Pass  23: (10.33 seconds) suminf.    0.36631 (2) obj. -438.49 iterations 701
Cbc0038I Pass  24: (10.37 seconds) suminf.    0.32578 (11) obj. -438.49 iterations 776
Cbc0038I Pass  25: (10.41 seconds) suminf.    0.47619 (10) obj. -441.713 iterations 979
Cbc0038I Pass  26: (10.46 seconds) suminf.    0.07530 (2) obj. -438.49 iterations 899
Cbc0038I Rounding solution of -448.884 is better than previous of -435.181

Cbc0038I After 10.47 seconds - Feasibility pump exiting with objective of -448.884 - took 1.26 seconds
Cbc0012I Integer solution of -448.88425 found by feasibility pump after 0 iterations and 0 nodes (10.47 seconds)
Cbc0012I Integer solution of -460.50931 found by DiveCoefficient after 0 iterations and 0 nodes (10.59 seconds)
Cbc0038I Full problem 9365 rows 2090 columns, reduced to 3 rows 6 columns
Cbc0031I 1 added rows had average density of 611
Cbc0013I At root node, 1 cuts changed objective from -468.26471 to -468.23515 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 61 column cuts (61 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 611.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -460.50931 best solution, best possible -468.23515 (10.96 seconds)
Cbc0012I Integer solution of -464.11903 found by DiveCoefficient after 86 iterations and 3 nodes (11.60 seconds)
Cbc0004I Integer solution of -464.1569 found after 777 iterations and 14 nodes (13.32 seconds)
Cbc0012I Integer solution of -464.69352 found by DiveCoefficient after 916 iterations and 15 nodes (13.59 seconds)
Cbc0012I Integer solution of -465.72225 found by DiveCoefficient after 1973 iterations and 31 nodes (14.88 seconds)
Cbc0004I Integer solution of -465.79813 found after 2056 iterations and 31 nodes (15.06 seconds)
Cbc0012I Integer solution of -466.183 found by DiveCoefficient after 2171 iterations and 33 nodes (15.51 seconds)
Cbc0012I Integer solution of -467.09777 found by DiveCoefficient after 2612 iterations and 37 nodes (16.01 seconds)
Cbc0012I Integer solution of -467.58432 found by rounding after 3013 iterations and 42 nodes (16.23 seconds)
Cbc0001I Search completed - best objective -467.584317768639, took 3013 iterations and 42 nodes (16.23 seconds)
Cbc0032I Strong branching done 382 times (15218 iterations), fathomed 4 nodes and fixed 0 variables
Cbc0035I Maximum depth 10, 1109 variables fixed on reduced cost
Cuts at root node changed objective from -468.265 to -468.235
Probing was tried 19 times and created 76 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)

Result - Optimal solution found

Objective value:                467.58431777
Enumerated nodes:               42
Total iterations:               3013
Time (CPU seconds):             15.18
Time (Wallclock seconds):       19.87

Option for printingOptions changed from normal to all
Total time (CPU seconds):       20.79   (Wallclock seconds):       26.61

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/eb2ec38603d04e368c614a55dab8bc9c-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/eb2ec38603d04e368c614a55dab8bc9c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 427034 COLUMNS
At line 1710836 RHS
At line 2137866 BOUNDS
At line 2140182 ENDATA
Problem MODEL has 427029 rows, 2315 columns and 436111 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 447.538 - 0.61 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 120 strengthened rows, 338 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 3167 rows, 729 columns (729 integer (729 of which binary)) and 8842 elements
Cbc0038I Initial state - 46 integers unsatisfied sum - 22.025
Cbc0038I Pass   1: (1.17 seconds) suminf.    0.00000 (0) obj. -371.374 iterations 662
Cbc0038I Solution found of -371.374
Cbc0038I Rounding solution of -378.018 is better than previous of -371.374

Cbc0038I Before mini branch and bound, 679 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3167 rows 729 columns, reduced to 16 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -378.018 to -447.317 (1.23 seconds)
Cbc0038I Round again with cutoff of -447.339
Cbc0038I Reduced cost fixing fixed 178 variables on major pass 2
Cbc0038I Pass   2: (1.26 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 653
Cbc0038I Pass   3: (1.27 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 13
Cbc0038I Pass   4: (1.27 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass   5: (1.27 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass   6: (1.27 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 4
Cbc0038I Pass   7: (1.27 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 2
Cbc0038I Pass   8: (1.28 seconds) suminf.   21.78918 (46) obj. -447.339 iterations 286
Cbc0038I Pass   9: (1.28 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 288
Cbc0038I Pass  10: (1.28 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  11: (1.28 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  12: (1.29 seconds) suminf.   21.82073 (46) obj. -447.339 iterations 156
Cbc0038I Pass  13: (1.29 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 156
Cbc0038I Pass  14: (1.29 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 6
Cbc0038I Pass  15: (1.29 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  16: (1.30 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 1
Cbc0038I Pass  17: (1.30 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 4
Cbc0038I Pass  18: (1.30 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 4
Cbc0038I Pass  19: (1.31 seconds) suminf.   22.07170 (47) obj. -447.339 iterations 380
Cbc0038I Pass  20: (1.31 seconds) suminf.   20.24883 (65) obj. -447.339 iterations 201
Cbc0038I Pass  21: (1.31 seconds) suminf.   20.24883 (65) obj. -447.339 iterations 0
Cbc0038I Pass  22: (1.31 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 1
Cbc0038I Pass  23: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  24: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  25: (1.32 seconds) suminf.   21.49685 (46) obj. -447.339 iterations 10
Cbc0038I Pass  26: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 8
Cbc0038I Pass  27: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 3
Cbc0038I Pass  28: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  29: (1.32 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 0
Cbc0038I Pass  30: (1.33 seconds) suminf.   21.78918 (46) obj. -447.339 iterations 243
Cbc0038I Pass  31: (1.33 seconds) suminf.   20.71366 (54) obj. -447.339 iterations 240
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 657 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3167 rows 729 columns, reduced to 47 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (1.35 seconds)
Cbc0038I After 1.35 seconds - Feasibility pump exiting with objective of -447.317 - took 0.16 seconds
Cbc0012I Integer solution of -447.3166 found by feasibility pump after 0 iterations and 0 nodes (1.35 seconds)
Cbc0038I Full problem 3167 rows 729 columns, reduced to 16 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -447.53782 to -424.79651 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 43 column cuts (43 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -447.316597738433, took 125 iterations and 0 nodes (1.39 seconds)
Cbc0035I Maximum depth 0, 178 variables fixed on reduced cost
Cuts at root node changed objective from -447.538 to -424.797
Probing was tried 1 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                447.31659774
Enumerated nodes:               0
Total iterations:               125
Time (CPU seconds):             1.37
Time (Wallclock seconds):       1.68

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.44

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3af096231ea942da8d6bbab9a95397ce-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3af096231ea942da8d6bbab9a95397ce-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 665118 COLUMNS
At line 2663797 RHS
At line 3328911 BOUNDS
At line 3331738 ENDATA
Problem MODEL has 665113 rows, 2826 columns and 675848 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 459.351 - 0.74 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 124 strengthened rows, 180 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 184 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 3838 rows, 945 columns (945 integer (944 of which binary)) and 10708 elements
Cbc0038I Initial state - 60 integers unsatisfied sum - 25.4545
Cbc0038I Pass   1: (1.57 seconds) suminf.    6.50000 (13) obj. -391.875 iterations 858
Cbc0038I Pass   2: (1.58 seconds) suminf.    0.00000 (0) obj. -356.337 iterations 63
Cbc0038I Solution found of -356.337
Cbc0038I Cleaned solution of -356.337
Cbc0038I Rounding solution of -421.587 is better than previous of -356.337

Cbc0038I Before mini branch and bound, 870 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3838 rows 945 columns, reduced to 33 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -421.587 to -447.343 (1.65 seconds)
Cbc0038I Round again with cutoff of -448.543
Cbc0038I Reduced cost fixing fixed 101 variables on major pass 2
Cbc0038I Pass   3: (1.70 seconds) suminf.   12.00644 (37) obj. -448.543 iterations 615
Cbc0038I Pass   4: (1.71 seconds) suminf.    3.17955 (34) obj. -448.543 iterations 380
Cbc0038I Pass   5: (1.73 seconds) suminf.    2.61538 (17) obj. -451.647 iterations 536
Cbc0038I Pass   6: (1.73 seconds) suminf.    3.95532 (18) obj. -448.543 iterations 171
Cbc0038I Pass   7: (1.74 seconds) suminf.    4.09964 (21) obj. -448.543 iterations 276
Cbc0038I Pass   8: (1.75 seconds) suminf.    5.89136 (23) obj. -448.543 iterations 311
Cbc0038I Pass   9: (1.77 seconds) suminf.    5.89136 (23) obj. -448.543 iterations 479
Cbc0038I Pass  10: (1.78 seconds) suminf.    7.35310 (26) obj. -448.543 iterations 611
Cbc0038I Pass  11: (1.79 seconds) suminf.    6.27142 (24) obj. -448.543 iterations 323
Cbc0038I Pass  12: (1.80 seconds) suminf.    0.65385 (17) obj. -452.094 iterations 415
Cbc0038I Pass  13: (1.83 seconds) suminf.    3.52519 (34) obj. -448.543 iterations 1001
Cbc0038I Pass  14: (1.84 seconds) suminf.    0.89354 (32) obj. -448.543 iterations 280
Cbc0038I Pass  15: (1.85 seconds) suminf.    2.12500 (17) obj. -451.421 iterations 371
Cbc0038I Pass  16: (1.86 seconds) suminf.    1.99050 (5) obj. -448.543 iterations 311
Cbc0038I Pass  17: (1.87 seconds) suminf.    1.63777 (12) obj. -448.543 iterations 341
Cbc0038I Pass  18: (1.88 seconds) suminf.    0.89354 (32) obj. -448.543 iterations 426
Cbc0038I Pass  19: (1.89 seconds) suminf.    1.76743 (6) obj. -448.543 iterations 671
Cbc0038I Pass  20: (1.90 seconds) suminf.    5.26598 (60) obj. -448.543 iterations 244
Cbc0038I Pass  21: (1.91 seconds) suminf.    2.50548 (16) obj. -448.543 iterations 133
Cbc0038I Pass  22: (1.92 seconds) suminf.    2.10888 (12) obj. -448.543 iterations 541
Cbc0038I Pass  23: (1.94 seconds) suminf.    2.10888 (12) obj. -448.543 iterations 513
Cbc0038I Pass  24: (1.95 seconds) suminf.    1.77778 (8) obj. -451.755 iterations 576
Cbc0038I Pass  25: (1.96 seconds) suminf.    0.83766 (10) obj. -448.543 iterations 324
Cbc0038I Pass  26: (1.97 seconds) suminf.    1.77778 (8) obj. -451.755 iterations 221
Cbc0038I Pass  27: (1.98 seconds) suminf.    2.84794 (9) obj. -448.543 iterations 222
Cbc0038I Pass  28: (1.99 seconds) suminf.    2.19853 (10) obj. -448.543 iterations 383
Cbc0038I Pass  29: (2.00 seconds) suminf.    3.11111 (8) obj. -451.543 iterations 200
Cbc0038I Pass  30: (2.01 seconds) suminf.    3.76707 (13) obj. -448.543 iterations 297
Cbc0038I Pass  31: (2.03 seconds) suminf.    6.95996 (27) obj. -448.543 iterations 448
Cbc0038I Pass  32: (2.03 seconds) suminf.    4.43761 (16) obj. -448.543 iterations 324
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 771 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3838 rows 945 columns, reduced to 166 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -447.343 to -453.213 (2.07 seconds)
Cbc0038I Round again with cutoff of -454.441
Cbc0038I Reduced cost fixing fixed 156 variables on major pass 3
Cbc0038I Pass  32: (2.08 seconds) suminf.   11.61938 (42) obj. -454.441 iterations 304
Cbc0038I Pass  33: (2.09 seconds) suminf.   10.42785 (46) obj. -454.441 iterations 166
Cbc0038I Pass  34: (2.09 seconds) suminf.    7.61878 (35) obj. -454.441 iterations 27
Cbc0038I Pass  35: (2.10 seconds) suminf.    7.04287 (47) obj. -454.441 iterations 27
Cbc0038I Pass  36: (2.10 seconds) suminf.    7.04287 (47) obj. -454.441 iterations 1
Cbc0038I Pass  37: (2.10 seconds) suminf.    8.60236 (42) obj. -454.441 iterations 57
Cbc0038I Pass  38: (2.11 seconds) suminf.    8.27567 (52) obj. -454.441 iterations 17
Cbc0038I Pass  39: (2.11 seconds) suminf.    6.92226 (20) obj. -454.441 iterations 99
Cbc0038I Pass  40: (2.11 seconds) suminf.    6.93410 (16) obj. -454.441 iterations 93
Cbc0038I Pass  41: (2.13 seconds) suminf.    7.08961 (23) obj. -454.441 iterations 943
Cbc0038I Pass  42: (2.15 seconds) suminf.    6.91848 (16) obj. -454.441 iterations 503
Cbc0038I Pass  43: (2.16 seconds) suminf.    6.92413 (23) obj. -454.441 iterations 335
Cbc0038I Pass  44: (2.17 seconds) suminf.    7.05483 (22) obj. -454.441 iterations 587
Cbc0038I Pass  45: (2.17 seconds) suminf.    6.97141 (21) obj. -454.441 iterations 70
Cbc0038I Pass  46: (2.19 seconds) suminf.    7.07154 (17) obj. -454.441 iterations 744
Cbc0038I Pass  47: (2.20 seconds) suminf.    6.99200 (18) obj. -454.441 iterations 329
Cbc0038I Pass  48: (2.21 seconds) suminf.    6.92308 (15) obj. -454.472 iterations 466
Cbc0038I Pass  49: (2.22 seconds) suminf.    6.98856 (31) obj. -454.441 iterations 489
Cbc0038I Pass  50: (2.23 seconds) suminf.    6.10990 (47) obj. -454.441 iterations 217
Cbc0038I Pass  51: (2.23 seconds) suminf.    6.03306 (52) obj. -454.441 iterations 26
Cbc0038I Pass  52: (2.23 seconds) suminf.   15.82000 (42) obj. -454.441 iterations 36
Cbc0038I Pass  53: (2.24 seconds) suminf.   11.17621 (48) obj. -454.441 iterations 26
Cbc0038I Pass  54: (2.24 seconds) suminf.   11.17621 (48) obj. -454.441 iterations 4
Cbc0038I Pass  55: (2.25 seconds) suminf.   14.78247 (57) obj. -454.441 iterations 312
Cbc0038I Pass  56: (2.25 seconds) suminf.    6.10990 (47) obj. -454.441 iterations 305
Cbc0038I Pass  57: (2.26 seconds) suminf.    6.03306 (52) obj. -454.441 iterations 26
Cbc0038I Pass  58: (2.26 seconds) suminf.    6.10990 (47) obj. -454.441 iterations 16
Cbc0038I Pass  59: (2.26 seconds) suminf.   10.04259 (47) obj. -454.441 iterations 12
Cbc0038I Pass  60: (2.27 seconds) suminf.    6.28045 (43) obj. -454.441 iterations 10
Cbc0038I Pass  61: (2.27 seconds) suminf.    6.92538 (24) obj. -454.441 iterations 139
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 807 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3838 rows 945 columns, reduced to 101 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (2.30 seconds)
Cbc0038I After 2.30 seconds - Feasibility pump exiting with objective of -453.213 - took 0.70 seconds
Cbc0012I Integer solution of -453.21314 found by feasibility pump after 0 iterations and 0 nodes (2.30 seconds)
Cbc0038I Full problem 3838 rows 945 columns, reduced to 22 rows 14 columns
Cbc0031I 8 added rows had average density of 69.125
Cbc0013I At root node, 8 cuts changed objective from -459.35099 to -455.90459 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 13 column cuts (13 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 157 row cuts average 69.7 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -453.21314 best solution, best possible -455.90459 (2.51 seconds)
Cbc0012I Integer solution of -454.56569 found by DiveCoefficient after 336 iterations and 3 nodes (2.58 seconds)
Cbc0001I Search completed - best objective -454.5656888459911, took 921 iterations and 8 nodes (2.64 seconds)
Cbc0032I Strong branching done 60 times (1265 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 198 variables fixed on reduced cost
Cuts at root node changed objective from -459.351 to -455.905
Probing was tried 15 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 14 times and created 157 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                454.56568885
Enumerated nodes:               8
Total iterations:               921
Time (CPU seconds):             2.68
Time (Wallclock seconds):       3.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.70   (Wallclock seconds):       4.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8d8dca1489794396a3a2a6a8257f6751-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8d8dca1489794396a3a2a6a8257f6751-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 190218 COLUMNS
At line 762787 RHS
At line 953001 BOUNDS
At line 954694 ENDATA
Problem MODEL has 190213 rows, 1692 columns and 195686 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 355.389 - 0.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 174 substitutions
Cgl0004I processed model has 1766 rows, 491 columns (491 integer (491 of which binary)) and 4673 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.66667
Cbc0038I Pass   1: suminf.    0.50000 (4) obj. -354.685 iterations 291
Cbc0038I Solution found of -326.626
Cbc0038I Before mini branch and bound, 471 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1766 rows 491 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -326.626 to -338.872 (0.25 seconds)
Cbc0038I Round again with cutoff of -340.524
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50000 (4) obj. -354.685 iterations 0
Cbc0038I Pass   3: suminf.    1.29458 (20) obj. -340.524 iterations 369
Cbc0038I Pass   4: suminf.    1.91579 (20) obj. -343.681 iterations 134
Cbc0038I Pass   5: suminf.    9.18507 (30) obj. -340.524 iterations 234
Cbc0038I Pass   6: suminf.    1.43142 (6) obj. -340.524 iterations 269
Cbc0038I Pass   7: suminf.    1.50000 (5) obj. -348.014 iterations 200
Cbc0038I Pass   8: suminf.    1.50000 (5) obj. -348.014 iterations 133
Cbc0038I Pass   9: suminf.    1.71429 (12) obj. -346.67 iterations 77
Cbc0038I Pass  10: suminf.    1.50000 (5) obj. -348.014 iterations 78
Cbc0038I Pass  11: suminf.    1.29458 (20) obj. -340.524 iterations 261
Cbc0038I Pass  12: suminf.    2.37288 (16) obj. -343.74 iterations 133
Cbc0038I Pass  13: suminf.    2.00000 (8) obj. -341.883 iterations 156
Cbc0038I Pass  14: suminf.    0.71635 (19) obj. -340.524 iterations 251
Cbc0038I Pass  15: suminf.    0.50000 (4) obj. -354.685 iterations 167
Cbc0038I Pass  16: suminf.    0.50000 (4) obj. -354.685 iterations 17
Cbc0038I Pass  17: suminf.    1.29458 (20) obj. -340.524 iterations 276
Cbc0038I Pass  18: suminf.    2.61333 (20) obj. -342.994 iterations 139
Cbc0038I Pass  19: suminf.    1.56000 (13) obj. -347.049 iterations 129
Cbc0038I Pass  20: suminf.    1.50000 (5) obj. -348.014 iterations 88
Cbc0038I Pass  21: suminf.    1.56000 (13) obj. -347.049 iterations 108
Cbc0038I Pass  22: suminf.    1.50000 (5) obj. -348.014 iterations 88
Cbc0038I Pass  23: suminf.    1.71429 (12) obj. -346.67 iterations 77
Cbc0038I Pass  24: suminf.    1.56000 (13) obj. -347.049 iterations 116
Cbc0038I Pass  25: suminf.    6.45708 (17) obj. -340.524 iterations 224
Cbc0038I Pass  26: suminf.    6.45708 (17) obj. -340.524 iterations 196
Cbc0038I Pass  27: suminf.    4.87070 (17) obj. -340.524 iterations 148
Cbc0038I Pass  28: suminf.    2.20490 (33) obj. -340.524 iterations 229
Cbc0038I Pass  29: suminf.    2.00000 (5) obj. -341.769 iterations 388
Cbc0038I Pass  30: suminf.    1.75719 (19) obj. -340.524 iterations 269
Cbc0038I Pass  31: suminf.    1.00000 (4) obj. -347.486 iterations 116
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 394 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1766 rows 491 columns, reduced to 105 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -338.872 to -347.875 (0.37 seconds)
Cbc0038I Round again with cutoff of -349.378
Cbc0038I Reduced cost fixing fixed 49 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.50000 (4) obj. -354.685 iterations 0
Cbc0038I Pass  32: suminf.    2.59503 (14) obj. -349.378 iterations 229
Cbc0038I Pass  33: suminf.    0.50000 (4) obj. -354.685 iterations 146
Cbc0038I Pass  34: suminf.    5.95556 (17) obj. -349.378 iterations 145
Cbc0038I Pass  35: suminf.    2.34962 (11) obj. -349.378 iterations 163
Cbc0038I Pass  36: suminf.    1.35947 (18) obj. -349.378 iterations 38
Cbc0038I Pass  37: suminf.    1.88235 (8) obj. -351.103 iterations 180
Cbc0038I Pass  38: suminf.    7.28571 (17) obj. -352.083 iterations 133
Cbc0038I Pass  39: suminf.    1.50000 (4) obj. -350.817 iterations 122
Cbc0038I Pass  40: suminf.    2.25459 (14) obj. -349.378 iterations 218
Cbc0038I Pass  41: suminf.    1.50000 (4) obj. -350.817 iterations 140
Cbc0038I Pass  42: suminf.    1.67950 (4) obj. -349.378 iterations 233
Cbc0038I Pass  43: suminf.    2.24911 (8) obj. -349.378 iterations 238
Cbc0038I Pass  44: suminf.    2.42895 (12) obj. -349.378 iterations 235
Cbc0038I Pass  45: suminf.    1.56000 (13) obj. -352.71 iterations 214
Cbc0038I Pass  46: suminf.    5.94844 (22) obj. -349.378 iterations 277
Cbc0038I Pass  47: suminf.    1.50000 (4) obj. -350.817 iterations 300
Cbc0038I Pass  48: suminf.    1.50000 (4) obj. -350.817 iterations 186
Cbc0038I Pass  49: suminf.    1.68738 (20) obj. -349.378 iterations 266
Cbc0038I Pass  50: suminf.    0.82366 (15) obj. -349.378 iterations 73
Cbc0038I Pass  51: suminf.    0.90909 (5) obj. -349.616 iterations 229
Cbc0038I Pass  52: suminf.    0.91183 (14) obj. -349.378 iterations 472
Cbc0038I Pass  53: suminf.    1.92947 (21) obj. -349.378 iterations 75
Cbc0038I Pass  54: suminf.    1.34021 (24) obj. -349.378 iterations 201
Cbc0038I Pass  55: suminf.    0.91579 (12) obj. -349.378 iterations 254
Cbc0038I Pass  56: suminf.    1.00334 (18) obj. -349.378 iterations 185
Cbc0038I Pass  57: suminf.    0.91754 (15) obj. -349.378 iterations 322
Cbc0038I Pass  58: suminf.    1.25616 (16) obj. -349.378 iterations 61
Cbc0038I Pass  59: suminf.    1.12910 (12) obj. -349.378 iterations 16
Cbc0038I Pass  60: suminf.    0.98497 (10) obj. -349.378 iterations 132
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 342 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1766 rows 491 columns, reduced to 122 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -347.875 to -354.205 (0.50 seconds)
Cbc0038I Round again with cutoff of -354.56
Cbc0038I Reduced cost fixing fixed 87 variables on major pass 4
Cbc0038I Pass  60: suminf.    2.66667 (16) obj. -355.389 iterations 66
Cbc0038I Pass  61: suminf.    4.28189 (31) obj. -354.56 iterations 437
Cbc0038I Pass  62: suminf.    4.28189 (31) obj. -354.56 iterations 15
Cbc0038I Pass  63: suminf.    4.28189 (31) obj. -354.56 iterations 11
Cbc0038I Pass  64: suminf.    4.28189 (31) obj. -354.56 iterations 2
Cbc0038I Pass  65: suminf.    4.28189 (31) obj. -354.56 iterations 2
Cbc0038I Pass  66: suminf.    4.28189 (31) obj. -354.56 iterations 2
Cbc0038I Pass  67: suminf.    4.28189 (31) obj. -354.56 iterations 2
Cbc0038I Pass  68: suminf.    5.04157 (29) obj. -354.56 iterations 9
Cbc0038I Pass  69: suminf.    5.04157 (29) obj. -354.56 iterations 6
Cbc0038I Pass  70: suminf.    4.28189 (31) obj. -354.56 iterations 8
Cbc0038I Pass  71: suminf.    4.28189 (31) obj. -354.56 iterations 5
Cbc0038I Pass  72: suminf.    4.28189 (31) obj. -354.56 iterations 0
Cbc0038I Pass  73: suminf.    4.28189 (31) obj. -354.56 iterations 3
Cbc0038I Pass  74: suminf.    4.28189 (31) obj. -354.56 iterations 5
Cbc0038I Pass  75: suminf.    4.28189 (31) obj. -354.56 iterations 3
Cbc0038I Pass  76: suminf.    5.86189 (16) obj. -354.56 iterations 33
Cbc0038I Pass  77: suminf.    5.04157 (29) obj. -354.56 iterations 40
Cbc0038I Pass  78: suminf.    8.04771 (22) obj. -354.56 iterations 145
Cbc0038I Pass  79: suminf.    2.66667 (16) obj. -355.389 iterations 237
Cbc0038I Pass  80: suminf.    2.66667 (16) obj. -355.389 iterations 76
Cbc0038I Pass  81: suminf.    2.66667 (16) obj. -355.389 iterations 116
Cbc0038I Pass  82: suminf.    2.66667 (16) obj. -355.389 iterations 108
Cbc0038I Pass  83: suminf.    2.66667 (16) obj. -355.389 iterations 112
Cbc0038I Pass  84: suminf.    2.66667 (16) obj. -355.389 iterations 116
Cbc0038I Pass  85: suminf.    2.66667 (16) obj. -355.389 iterations 126
Cbc0038I Pass  86: suminf.    2.75000 (11) obj. -355.369 iterations 138
Cbc0038I Pass  87: suminf.    4.23875 (12) obj. -354.56 iterations 161
Cbc0038I Pass  88: suminf.    1.50000 (19) obj. -354.56 iterations 309
Cbc0038I Pass  89: suminf.    1.46540 (21) obj. -354.56 iterations 79
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 442 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1766 rows 491 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.56 seconds)
Cbc0038I After 0.56 seconds - Feasibility pump exiting with objective of -354.205 - took 0.31 seconds
Cbc0012I Integer solution of -354.20499 found by feasibility pump after 0 iterations and 0 nodes (0.56 seconds)
Cbc0038I Full problem 1766 rows 491 columns, reduced to 4 rows 6 columns
Cbc0031I 3 added rows had average density of 55.666667
Cbc0013I At root node, 8 cuts changed objective from -355.38937 to -354.20499 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 14 column cuts (14 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 9 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 121.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective -354.2049857980981, took 14 iterations and 0 nodes (0.59 seconds)
Cbc0035I Maximum depth 0, 86 variables fixed on reduced cost
Cuts at root node changed objective from -355.389 to -354.205
Probing was tried 2 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 2 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                354.20498580
Enumerated nodes:               0
Total iterations:               14
Time (CPU seconds):             0.63
Time (Wallclock seconds):       0.71

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/85f8e37cae704e5c881c04513f913af3-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/85f8e37cae704e5c881c04513f913af3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 296611 COLUMNS
At line 1189000 RHS
At line 1485607 BOUNDS
At line 1487909 ENDATA
Problem MODEL has 296606 rows, 2301 columns and 304153 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 360.043 - 0.49 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 272 strengthened rows, 188 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 199 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 2161 rows, 586 columns (586 integer (586 of which binary)) and 6154 elements
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.53846
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -343.809 iterations 464
Cbc0038I Solution found of -343.809
Cbc0038I Rounding solution of -347.131 is better than previous of -343.809

Cbc0038I Before mini branch and bound, 563 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2161 rows 586 columns, reduced to 11 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.80 seconds)
Cbc0038I Round again with cutoff of -348.422
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.62160 (8) obj. -348.422 iterations 197
Cbc0038I Pass   3: suminf.    0.34952 (34) obj. -348.422 iterations 50
Cbc0038I Pass   4: suminf.    2.14286 (9) obj. -357.882 iterations 176
Cbc0038I Pass   5: suminf.    1.32000 (21) obj. -349.089 iterations 178
Cbc0038I Pass   6: suminf.    0.56533 (33) obj. -348.422 iterations 249
Cbc0038I Pass   7: suminf.    1.00000 (9) obj. -349.641 iterations 123
Cbc0038I Pass   8: suminf.    2.00000 (5) obj. -350.565 iterations 177
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -354.151 iterations 111
Cbc0038I Solution found of -353.043
Cbc0038I Before mini branch and bound, 493 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2161 rows 586 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -353.043 to -358.308 (0.87 seconds)
Cbc0038I Round again with cutoff of -358.655
Cbc0038I Reduced cost fixing fixed 104 variables on major pass 3
Cbc0038I Pass  10: suminf.    1.91772 (18) obj. -358.655 iterations 387
Cbc0038I Pass  11: suminf.    1.91625 (10) obj. -358.655 iterations 420
Cbc0038I Pass  12: suminf.    1.92308 (10) obj. -358.708 iterations 106
Cbc0038I Pass  13: suminf.    2.92336 (29) obj. -358.655 iterations 384
Cbc0038I Pass  14: suminf.    2.13720 (11) obj. -358.655 iterations 7
Cbc0038I Pass  15: suminf.    2.92336 (29) obj. -358.655 iterations 9
Cbc0038I Pass  16: suminf.    2.13720 (11) obj. -358.655 iterations 9
Cbc0038I Pass  17: suminf.    2.57213 (34) obj. -358.655 iterations 73
Cbc0038I Pass  18: suminf.    2.92336 (29) obj. -358.655 iterations 16
Cbc0038I Pass  19: suminf.    1.92308 (10) obj. -358.708 iterations 345
Cbc0038I Pass  20: suminf.    2.92336 (29) obj. -358.655 iterations 327
Cbc0038I Pass  21: suminf.    2.76357 (26) obj. -358.655 iterations 311
Cbc0038I Pass  22: suminf.    3.36736 (30) obj. -358.655 iterations 272
Cbc0038I Pass  23: suminf.    3.01125 (26) obj. -358.655 iterations 99
Cbc0038I Pass  24: suminf.    2.85428 (20) obj. -358.655 iterations 216
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -358.871 iterations 219
Cbc0038I Solution found of -358.871
Cbc0038I Before mini branch and bound, 507 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2161 rows 586 columns, reduced to 27 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -358.871 to -358.871 (0.97 seconds)
Cbc0038I Round again with cutoff of -359.222
Cbc0038I Reduced cost fixing fixed 113 variables on major pass 4
Cbc0038I Pass  26: suminf.    3.48890 (28) obj. -359.222 iterations 80
Cbc0038I Pass  27: suminf.    3.15960 (43) obj. -359.222 iterations 28
Cbc0038I Pass  28: suminf.    3.15960 (43) obj. -359.222 iterations 5
Cbc0038I Pass  29: suminf.    0.45165 (21) obj. -359.222 iterations 311
Cbc0038I Solution found of -359.423
Cbc0038I Before mini branch and bound, 531 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2161 rows 586 columns, reduced to 19 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (1.00 seconds)
Cbc0038I Round again with cutoff of -359.609
Cbc0038I Reduced cost fixing fixed 118 variables on major pass 5
Cbc0038I Pass  30: suminf.    4.73409 (18) obj. -359.609 iterations 36
Cbc0038I Pass  31: suminf.    4.64264 (43) obj. -359.609 iterations 34
Cbc0038I Pass  32: suminf.    9.84615 (23) obj. -359.968 iterations 326
Cbc0038I Pass  33: suminf.    5.15235 (19) obj. -359.609 iterations 324
Cbc0038I Pass  34: suminf.    4.73820 (18) obj. -359.609 iterations 9
Cbc0038I Pass  35: suminf.    8.63883 (24) obj. -359.609 iterations 287
Cbc0038I Pass  36: suminf.    8.63883 (24) obj. -359.609 iterations 74
Cbc0038I Pass  37: suminf.    4.75550 (18) obj. -359.609 iterations 124
Cbc0038I Pass  38: suminf.    6.56657 (23) obj. -359.609 iterations 220
Cbc0038I Pass  39: suminf.    5.15235 (19) obj. -359.609 iterations 4
Cbc0038I Pass  40: suminf.    6.56657 (23) obj. -359.609 iterations 1
Cbc0038I Pass  41: suminf.    8.63436 (24) obj. -359.609 iterations 214
Cbc0038I Pass  42: suminf.    4.73409 (18) obj. -359.609 iterations 218
Cbc0038I Pass  43: suminf.    4.64264 (43) obj. -359.609 iterations 25
Cbc0038I Pass  44: suminf.    9.84615 (23) obj. -359.968 iterations 321
Cbc0038I Pass  45: suminf.    9.96662 (24) obj. -359.609 iterations 219
Cbc0038I Pass  46: suminf.    9.90119 (24) obj. -359.609 iterations 192
Cbc0038I Pass  47: suminf.    9.92916 (24) obj. -359.609 iterations 143
Cbc0038I Pass  48: suminf.    9.92916 (24) obj. -359.609 iterations 100
Cbc0038I Pass  49: suminf.    6.56657 (23) obj. -359.609 iterations 303
Cbc0038I Pass  50: suminf.    9.12220 (34) obj. -359.609 iterations 27
Cbc0038I Pass  51: suminf.    6.56657 (23) obj. -359.609 iterations 14
Cbc0038I Pass  52: suminf.    9.96662 (24) obj. -359.609 iterations 112
Cbc0038I Pass  53: suminf.    9.92546 (24) obj. -359.609 iterations 152
Cbc0038I Pass  54: suminf.    9.84615 (23) obj. -359.968 iterations 154
Cbc0038I Pass  55: suminf.    9.92234 (23) obj. -359.609 iterations 164
Cbc0038I Pass  56: suminf.    9.82489 (23) obj. -359.609 iterations 167
Cbc0038I Pass  57: suminf.    9.82489 (23) obj. -359.609 iterations 200
Cbc0038I Pass  58: suminf.    9.92546 (24) obj. -359.609 iterations 152
Cbc0038I Pass  59: suminf.    9.92546 (24) obj. -359.609 iterations 102
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 522 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2161 rows 586 columns, reduced to 17 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (1.11 seconds)
Cbc0038I After 1.11 seconds - Feasibility pump exiting with objective of -359.423 - took 0.28 seconds
Cbc0012I Integer solution of -359.42347 found by feasibility pump after 0 iterations and 0 nodes (1.11 seconds)
Cbc0038I Full problem 2161 rows 586 columns, reduced to 16 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -360.04317 to -358.3084 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -359.423470401812, took 0 iterations and 0 nodes (1.13 seconds)
Cbc0035I Maximum depth 0, 116 variables fixed on reduced cost
Cuts at root node changed objective from -360.043 to -358.308
Probing was tried 1 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                359.42347040
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.16
Time (Wallclock seconds):       1.34

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.60   (Wallclock seconds):       1.83

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/849ec9ac9bb74bc18d741a6c0fae1f79-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/849ec9ac9bb74bc18d741a6c0fae1f79-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1083299 COLUMNS
At line 4337576 RHS
At line 5420871 BOUNDS
At line 5424645 ENDATA
Problem MODEL has 1083294 rows, 3773 columns and 1097741 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 396.922 - 1.11 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 256 strengthened rows, 208 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 273 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 5257 rows, 1270 columns (1270 integer (1270 of which binary)) and 14704 elements
Cbc0038I Initial state - 33 integers unsatisfied sum - 11.5294
Cbc0038I Pass   1: (2.45 seconds) suminf.    0.00000 (0) obj. -317.596 iterations 1037
Cbc0038I Solution found of -317.596
Cbc0038I Rounding solution of -330.298 is better than previous of -317.596

Cbc0038I Before mini branch and bound, 1231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5257 rows 1270 columns, reduced to 19 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -330.298 to -394.497 (2.58 seconds)
Cbc0038I Round again with cutoff of -394.739
Cbc0038I Reduced cost fixing fixed 242 variables on major pass 2
Cbc0038I Pass   2: (2.61 seconds) suminf.    8.35208 (20) obj. -394.739 iterations 449
Cbc0038I Pass   3: (2.64 seconds) suminf.    7.59374 (21) obj. -394.739 iterations 1048
Cbc0038I Pass   4: (2.66 seconds) suminf.    4.39048 (18) obj. -394.739 iterations 988
Cbc0038I Pass   5: (2.68 seconds) suminf.    2.82313 (12) obj. -394.739 iterations 977
Cbc0038I Pass   6: (2.69 seconds) suminf.    1.11308 (22) obj. -394.739 iterations 13
Cbc0038I Pass   7: (2.69 seconds) suminf.    2.19239 (11) obj. -394.739 iterations 120
Cbc0038I Pass   8: (2.71 seconds) suminf.    0.53833 (2) obj. -394.739 iterations 871
Cbc0038I Pass   9: (2.72 seconds) suminf.    0.40000 (2) obj. -395.969 iterations 152
Cbc0038I Pass  10: (2.72 seconds) suminf.    2.04307 (9) obj. -394.739 iterations 260
Cbc0038I Pass  11: (2.73 seconds) suminf.    0.40000 (2) obj. -395.969 iterations 213
Cbc0038I Pass  12: (2.74 seconds) suminf.    0.40000 (2) obj. -395.969 iterations 183
Cbc0038I Pass  13: (2.75 seconds) suminf.    1.70641 (6) obj. -394.739 iterations 452
Cbc0038I Pass  14: (2.76 seconds) suminf.    0.84632 (2) obj. -394.739 iterations 429
Cbc0038I Pass  15: (2.77 seconds) suminf.    0.80000 (2) obj. -395.151 iterations 145
Cbc0038I Pass  16: (2.77 seconds) suminf.    0.80000 (2) obj. -394.918 iterations 183
Cbc0038I Pass  17: (2.78 seconds) suminf.    0.77987 (2) obj. -394.739 iterations 318
Cbc0038I Pass  18: (2.79 seconds) suminf.    0.80000 (2) obj. -394.918 iterations 175
Cbc0038I Pass  19: (2.81 seconds) suminf.    2.00000 (7) obj. -394.954 iterations 1145
Cbc0038I Pass  20: (2.83 seconds) suminf.    1.27115 (18) obj. -394.739 iterations 580
Cbc0038I Pass  21: (2.84 seconds) suminf.    0.80000 (2) obj. -394.918 iterations 430
Cbc0038I Pass  22: (2.86 seconds) suminf.    0.80000 (3) obj. -394.739 iterations 754
Cbc0038I Pass  23: (2.87 seconds) suminf.    0.84516 (5) obj. -394.739 iterations 596
Cbc0038I Pass  24: (2.88 seconds) suminf.    1.66667 (5) obj. -394.871 iterations 528
Cbc0038I Pass  25: (2.89 seconds) suminf.    1.66667 (5) obj. -394.871 iterations 313
Cbc0038I Pass  26: (2.92 seconds) suminf.    1.55435 (28) obj. -394.739 iterations 1099
Cbc0038I Pass  27: (2.94 seconds) suminf.    0.80000 (2) obj. -395.736 iterations 906
Cbc0038I Pass  28: (2.95 seconds) suminf.    0.80000 (2) obj. -395.736 iterations 260
Cbc0038I Pass  29: (2.96 seconds) suminf.    0.91214 (2) obj. -394.739 iterations 196
Cbc0038I Pass  30: (2.97 seconds) suminf.    5.41381 (22) obj. -394.739 iterations 455
Cbc0038I Pass  31: (2.98 seconds) suminf.    0.40000 (2) obj. -395.48 iterations 292
Cbc0038I Rounding solution of -395.248 is better than previous of -394.497

Cbc0038I Before mini branch and bound, 1164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5257 rows 1270 columns, reduced to 20 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -395.248 to -396.054 (3.02 seconds)
Cbc0038I Round again with cutoff of -396.228
Cbc0038I Reduced cost fixing fixed 274 variables on major pass 3
Cbc0038I Pass  31: (3.03 seconds) suminf.    9.77814 (22) obj. -396.228 iterations 404
Cbc0038I Pass  32: (3.04 seconds) suminf.    9.77814 (22) obj. -396.228 iterations 802
Cbc0038I Pass  33: (3.04 seconds) suminf.    7.94450 (22) obj. -396.228 iterations 13
Cbc0038I Pass  34: (3.05 seconds) suminf.    7.94450 (22) obj. -396.228 iterations 10
Cbc0038I Pass  35: (3.06 seconds) suminf.    7.64587 (22) obj. -396.228 iterations 629
Cbc0038I Pass  36: (3.07 seconds) suminf.    7.36114 (22) obj. -396.228 iterations 454
Cbc0038I Pass  37: (3.08 seconds) suminf.    9.77814 (22) obj. -396.228 iterations 501
Cbc0038I Pass  38: (3.08 seconds) suminf.    9.77814 (22) obj. -396.228 iterations 63
Cbc0038I Pass  39: (3.09 seconds) suminf.   10.33535 (30) obj. -396.228 iterations 9
Cbc0038I Pass  40: (3.09 seconds) suminf.    9.77814 (22) obj. -396.228 iterations 8
Cbc0038I Pass  41: (3.10 seconds) suminf.   10.45806 (27) obj. -396.228 iterations 58
Cbc0038I Pass  42: (3.10 seconds) suminf.    8.66050 (30) obj. -396.228 iterations 91
Cbc0038I Pass  43: (3.10 seconds) suminf.    7.94450 (22) obj. -396.228 iterations 16
Cbc0038I Pass  44: (3.11 seconds) suminf.   10.10080 (32) obj. -396.228 iterations 46
Cbc0038I Pass  45: (3.11 seconds) suminf.   10.10080 (32) obj. -396.228 iterations 25
Cbc0038I Pass  46: (3.12 seconds) suminf.    7.94450 (22) obj. -396.228 iterations 20
Cbc0038I Pass  47: (3.14 seconds) suminf.    4.27288 (24) obj. -396.228 iterations 874
Cbc0038I Pass  48: (3.15 seconds) suminf.    4.27288 (24) obj. -396.228 iterations 677
Cbc0038I Pass  49: (3.17 seconds) suminf.   13.11111 (27) obj. -396.776 iterations 755
Cbc0038I Pass  50: (3.18 seconds) suminf.   10.15081 (22) obj. -396.228 iterations 251
Cbc0038I Pass  51: (3.19 seconds) suminf.    9.12243 (22) obj. -396.228 iterations 689
Cbc0038I Pass  52: (3.20 seconds) suminf.    8.84602 (22) obj. -396.228 iterations 27
Cbc0038I Pass  53: (3.20 seconds) suminf.    8.84602 (22) obj. -396.228 iterations 23
Cbc0038I Pass  54: (3.20 seconds) suminf.    9.12243 (22) obj. -396.228 iterations 39
Cbc0038I Pass  55: (3.22 seconds) suminf.   11.07009 (28) obj. -396.228 iterations 600
Cbc0038I Pass  56: (3.22 seconds) suminf.   10.15170 (22) obj. -396.228 iterations 593
Cbc0038I Pass  57: (3.23 seconds) suminf.   10.15170 (22) obj. -396.228 iterations 60
Cbc0038I Pass  58: (3.23 seconds) suminf.    8.84602 (22) obj. -396.228 iterations 336
Cbc0038I Pass  59: (3.24 seconds) suminf.    8.84602 (22) obj. -396.228 iterations 23
Cbc0038I Pass  60: (3.24 seconds) suminf.    9.12243 (22) obj. -396.228 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5257 rows 1270 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (3.28 seconds)
Cbc0038I After 3.28 seconds - Feasibility pump exiting with objective of -396.054 - took 0.78 seconds
Cbc0012I Integer solution of -396.05401 found by feasibility pump after 0 iterations and 0 nodes (3.28 seconds)
Cbc0038I Full problem 5257 rows 1270 columns, reduced to 9 rows 8 columns
Cbc0031I 4 added rows had average density of 14
Cbc0013I At root node, 17 cuts changed objective from -396.92164 to -396.04096 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 38 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 311.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -396.0540134538754, took 21 iterations and 0 nodes (3.40 seconds)
Cbc0035I Maximum depth 0, 279 variables fixed on reduced cost
Cuts at root node changed objective from -396.922 to -396.041
Probing was tried 5 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 5 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 5 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                396.05401345
Enumerated nodes:               0
Total iterations:               21
Time (CPU seconds):             3.41
Time (Wallclock seconds):       4.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.02   (Wallclock seconds):       6.05

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/11e72d4e71d54b69a906b546923b9a58-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/11e72d4e71d54b69a906b546923b9a58-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 480660 COLUMNS
At line 1925563 RHS
At line 2406219 BOUNDS
At line 2408748 ENDATA
Problem MODEL has 480655 rows, 2528 columns and 490914 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 480.357 - 0.70 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 160 strengthened rows, 258 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 116 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 3769 rows, 850 columns (850 integer (849 of which binary)) and 10484 elements
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.28571
Cbc0038I Solution found of -440.511
Cbc0038I Cleaned solution of -440.511
Cbc0038I Before mini branch and bound, 833 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 850 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.27 seconds)
Cbc0038I Round again with cutoff of -444.496
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 2
Cbc0038I Pass   1: (1.29 seconds) suminf.    0.45584 (1) obj. -444.496 iterations 726
Cbc0038I Solution found of -444.496
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3770 rows 850 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -445.985
Cbc0038I Rounding solution of -452.629 is better than previous of -445.985

Cbc0038I Before mini branch and bound, 832 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.32 seconds)
Cbc0038I Round again with cutoff of -458.175
Cbc0038I Reduced cost fixing fixed 61 variables on major pass 3
Cbc0038I Pass   2: (1.36 seconds) suminf.    1.42031 (44) obj. -458.175 iterations 562
Cbc0038I Pass   3: (1.37 seconds) suminf.    1.99799 (35) obj. -458.175 iterations 255
Cbc0038I Pass   4: (1.38 seconds) suminf.    3.09524 (13) obj. -464.317 iterations 403
Cbc0038I Pass   5: (1.40 seconds) suminf.    0.64617 (44) obj. -458.175 iterations 488
Cbc0038I Pass   6: (1.41 seconds) suminf.    2.00000 (16) obj. -462.211 iterations 280
Cbc0038I Pass   7: (1.42 seconds) suminf.    2.15176 (13) obj. -458.175 iterations 370
Cbc0038I Pass   8: (1.44 seconds) suminf.    2.00000 (15) obj. -460.201 iterations 453
Cbc0038I Pass   9: (1.45 seconds) suminf.    2.82609 (13) obj. -461.922 iterations 448
Cbc0038I Pass  10: (1.47 seconds) suminf.    1.78571 (5) obj. -460.943 iterations 599
Cbc0038I Pass  11: (1.49 seconds) suminf.    0.40000 (4) obj. -459.79 iterations 376
Cbc0038I Pass  12: (1.50 seconds) suminf.    0.23336 (1) obj. -458.175 iterations 373
Cbc0038I Solution found of -458.175
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3770 rows 850 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -460.273
Cbc0038I Before mini branch and bound, 727 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 850 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (1.55 seconds)
Cbc0038I Round again with cutoff of -466.298
Cbc0038I Reduced cost fixing fixed 97 variables on major pass 4
Cbc0038I Pass  13: (1.56 seconds) suminf.    2.52606 (26) obj. -466.298 iterations 217
Cbc0038I Pass  14: (1.57 seconds) suminf.    5.31818 (13) obj. -476.787 iterations 216
Cbc0038I Pass  15: (1.57 seconds) suminf.    5.31818 (13) obj. -476.787 iterations 189
Cbc0038I Pass  16: (1.58 seconds) suminf.    4.69565 (26) obj. -472.443 iterations 340
Cbc0038I Pass  17: (1.59 seconds) suminf.    1.03744 (26) obj. -466.298 iterations 570
Cbc0038I Pass  18: (1.60 seconds) suminf.    0.73304 (16) obj. -466.298 iterations 266
Cbc0038I Pass  19: (1.61 seconds) suminf.    5.19231 (15) obj. -477.799 iterations 527
Cbc0038I Pass  20: (1.62 seconds) suminf.    0.00000 (0) obj. -468.535 iterations 242
Cbc0038I Solution found of -468.535
Cbc0038I Cleaned solution of -468.535
Cbc0038I Before mini branch and bound, 799 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 850 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of -472.081
Cbc0038I Reduced cost fixing fixed 121 variables on major pass 5
Cbc0038I Pass  21: (1.66 seconds) suminf.    3.55786 (30) obj. -472.081 iterations 47
Cbc0038I Pass  22: (1.67 seconds) suminf.    5.19231 (15) obj. -477.799 iterations 242
Cbc0038I Pass  23: (1.67 seconds) suminf.    4.40798 (16) obj. -472.081 iterations 203
Cbc0038I Pass  24: (1.68 seconds) suminf.    3.93259 (16) obj. -472.081 iterations 449
Cbc0038I Pass  25: (1.69 seconds) suminf.    5.19231 (15) obj. -477.799 iterations 502
Cbc0038I Pass  26: (1.69 seconds) suminf.    5.55319 (24) obj. -475.917 iterations 203
Cbc0038I Pass  27: (1.70 seconds) suminf.    4.47500 (18) obj. -472.081 iterations 265
Cbc0038I Pass  28: (1.71 seconds) suminf.    4.64448 (19) obj. -472.081 iterations 326
Cbc0038I Pass  29: (1.71 seconds) suminf.    4.64448 (19) obj. -472.081 iterations 336
Cbc0038I Pass  30: (1.72 seconds) suminf.    5.68362 (17) obj. -472.081 iterations 28
Cbc0038I Pass  31: (1.72 seconds) suminf.    4.64448 (19) obj. -472.081 iterations 23
Cbc0038I Pass  32: (1.72 seconds) suminf.    2.62465 (17) obj. -472.081 iterations 26
Cbc0038I Pass  33: (1.73 seconds) suminf.    1.34149 (16) obj. -472.081 iterations 82
Cbc0038I Pass  34: (1.73 seconds) suminf.    2.30769 (15) obj. -474.726 iterations 495
Cbc0038I Pass  35: (1.74 seconds) suminf.    2.89223 (18) obj. -472.081 iterations 334
Cbc0038I Pass  36: (1.76 seconds) suminf.    3.15029 (15) obj. -472.081 iterations 825
Cbc0038I Pass  37: (1.77 seconds) suminf.    2.87752 (21) obj. -472.081 iterations 306
Cbc0038I Pass  38: (1.78 seconds) suminf.    3.03112 (23) obj. -472.081 iterations 247
Cbc0038I Pass  39: (1.78 seconds) suminf.    3.03112 (23) obj. -472.081 iterations 284
Cbc0038I Pass  40: (1.79 seconds) suminf.    2.91532 (19) obj. -472.081 iterations 280
Cbc0038I Pass  41: (1.80 seconds) suminf.    3.03112 (23) obj. -472.081 iterations 279
Cbc0038I Pass  42: (1.80 seconds) suminf.    2.69129 (13) obj. -472.081 iterations 52
Cbc0038I Pass  43: (1.81 seconds) suminf.    4.09421 (16) obj. -472.081 iterations 459
Cbc0038I Pass  44: (1.82 seconds) suminf.    2.15385 (7) obj. -474.075 iterations 196
Cbc0038I Pass  45: (1.83 seconds) suminf.    3.55786 (30) obj. -472.081 iterations 356
Cbc0038I Pass  46: (1.84 seconds) suminf.    5.19231 (15) obj. -477.799 iterations 215
Cbc0038I Pass  47: (1.84 seconds) suminf.    5.05784 (21) obj. -472.081 iterations 206
Cbc0038I Pass  48: (1.85 seconds) suminf.    3.29081 (18) obj. -472.081 iterations 568
Cbc0038I Pass  49: (1.86 seconds) suminf.    3.27244 (24) obj. -472.081 iterations 272
Cbc0038I Pass  50: (1.87 seconds) suminf.   10.73705 (52) obj. -472.081 iterations 552
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 695 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 850 columns, reduced to 122 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -468.535 to -470.433 (1.90 seconds)
Cbc0038I Round again with cutoff of -475.392
Cbc0038I Reduced cost fixing fixed 149 variables on major pass 6
Cbc0038I Pass  50: (1.92 seconds) suminf.    5.05128 (24) obj. -475.392 iterations 453
Cbc0038I Pass  51: (1.93 seconds) suminf.    7.28571 (17) obj. -480.357 iterations 564
Cbc0038I Pass  52: (1.94 seconds) suminf.    7.28571 (17) obj. -480.357 iterations 167
Cbc0038I Pass  53: (1.94 seconds) suminf.    7.28571 (17) obj. -480.357 iterations 273
Cbc0038I Pass  54: (1.95 seconds) suminf.    6.38862 (23) obj. -475.392 iterations 315
Cbc0038I Pass  55: (1.96 seconds) suminf.    5.73484 (18) obj. -475.392 iterations 450
Cbc0038I Pass  56: (1.97 seconds) suminf.    7.28571 (17) obj. -480.357 iterations 458
Cbc0038I Pass  57: (1.97 seconds) suminf.    7.28571 (17) obj. -480.357 iterations 228
Cbc0038I Pass  58: (1.98 seconds) suminf.   11.52585 (41) obj. -475.392 iterations 279
Cbc0038I Pass  59: (1.98 seconds) suminf.    9.69231 (21) obj. -479.868 iterations 198
Cbc0038I Pass  60: (1.99 seconds) suminf.    9.50902 (21) obj. -475.392 iterations 97
Cbc0038I Pass  61: (2.01 seconds) suminf.    4.37957 (14) obj. -475.392 iterations 619
Cbc0038I Pass  62: (2.02 seconds) suminf.    2.88889 (13) obj. -478.369 iterations 526
Cbc0038I Pass  63: (2.02 seconds) suminf.    3.23810 (17) obj. -478.104 iterations 144
Cbc0038I Pass  64: (2.03 seconds) suminf.    2.88889 (13) obj. -478.369 iterations 132
Cbc0038I Pass  65: (2.05 seconds) suminf.    4.37957 (14) obj. -475.392 iterations 538
Cbc0038I Pass  66: (2.05 seconds) suminf.    4.12506 (23) obj. -475.392 iterations 83
Cbc0038I Pass  67: (2.05 seconds) suminf.    2.38493 (26) obj. -475.392 iterations 43
Cbc0038I Pass  68: (2.06 seconds) suminf.    2.58185 (31) obj. -475.392 iterations 39
Cbc0038I Pass  69: (2.07 seconds) suminf.    0.00000 (0) obj. -475.772 iterations 618
Cbc0038I Solution found of -475.772
Cbc0038I Cleaned solution of -475.772
Cbc0038I Before mini branch and bound, 743 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3769 rows 850 columns, reduced to 41 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (2.09 seconds)
Cbc0038I After 2.09 seconds - Feasibility pump exiting with objective of -475.772 - took 0.81 seconds
Cbc0012I Integer solution of -475.77215 found by feasibility pump after 0 iterations and 0 nodes (2.09 seconds)
Cbc0038I Full problem 3769 rows 850 columns, reduced to 2 rows 4 columns
Cbc0031I 5 added rows had average density of 34
Cbc0013I At root node, 5 cuts changed objective from -480.35689 to -477.50772 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 8.5 elements, 8 column cuts (8 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 9 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 72 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 203.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -475.77215 best solution, best possible -477.50772 (2.27 seconds)
Cbc0012I Integer solution of -476.7408 found by DiveCoefficient after 488 iterations and 8 nodes (2.49 seconds)
Cbc0001I Search completed - best objective -476.7407992930109, took 630 iterations and 12 nodes (2.54 seconds)
Cbc0032I Strong branching done 138 times (1019 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 212 variables fixed on reduced cost
Cuts at root node changed objective from -480.357 to -477.508
Probing was tried 34 times and created 149 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 33 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 33 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 33 times and created 198 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                476.74079929
Enumerated nodes:               12
Total iterations:               630
Time (CPU seconds):             2.58
Time (Wallclock seconds):       2.89

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.28   (Wallclock seconds):       3.68

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3b400cbd3a0b40388f85d4744c696b67-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/3b400cbd3a0b40388f85d4744c696b67-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 539766 COLUMNS
At line 2162263 RHS
At line 2702025 BOUNDS
At line 2704828 ENDATA
Problem MODEL has 539761 rows, 2802 columns and 549999 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 364.579 - 0.70 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 258 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 3566 rows, 848 columns (848 integer (848 of which binary)) and 9666 elements
Cbc0038I Initial state - 35 integers unsatisfied sum - 5
Cbc0038I Solution found of -357.766
Cbc0038I Before mini branch and bound, 813 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3566 rows 848 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.28 seconds)
Cbc0038I Round again with cutoff of -358.448
Cbc0038I Reduced cost fixing fixed 125 variables on major pass 2
Cbc0038I Pass   1: (1.30 seconds) suminf.    0.07626 (6) obj. -358.448 iterations 741
Cbc0038I Pass   2: (1.30 seconds) suminf.    0.42857 (6) obj. -361.595 iterations 145
Cbc0038I Pass   3: (1.31 seconds) suminf.    0.12719 (15) obj. -358.448 iterations 297
Cbc0038I Pass   4: (1.32 seconds) suminf.    1.09524 (22) obj. -362.093 iterations 344
Cbc0038I Pass   5: (1.33 seconds) suminf.    2.57143 (9) obj. -361.022 iterations 364
Cbc0038I Pass   6: (1.34 seconds) suminf.    0.95630 (12) obj. -358.448 iterations 385
Cbc0038I Pass   7: (1.34 seconds) suminf.    0.96000 (6) obj. -358.469 iterations 170
Cbc0038I Pass   8: (1.35 seconds) suminf.    2.33333 (7) obj. -361.617 iterations 246
Cbc0038I Pass   9: (1.36 seconds) suminf.    6.27825 (19) obj. -358.448 iterations 620
Cbc0038I Pass  10: (1.37 seconds) suminf.    4.27824 (14) obj. -358.448 iterations 252
Cbc0038I Pass  11: (1.38 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 313
Cbc0038I Pass  12: (1.39 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 7
Cbc0038I Pass  13: (1.40 seconds) suminf.    1.63459 (14) obj. -358.448 iterations 127
Cbc0038I Pass  14: (1.40 seconds) suminf.    2.77396 (8) obj. -358.448 iterations 263
Cbc0038I Pass  15: (1.41 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 187
Cbc0038I Pass  16: (1.41 seconds) suminf.    3.79975 (21) obj. -358.448 iterations 209
Cbc0038I Pass  17: (1.42 seconds) suminf.    5.42367 (16) obj. -358.448 iterations 332
Cbc0038I Pass  18: (1.43 seconds) suminf.    4.83981 (22) obj. -358.448 iterations 324
Cbc0038I Pass  19: (1.44 seconds) suminf.    3.91803 (14) obj. -358.448 iterations 302
Cbc0038I Pass  20: (1.45 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 374
Cbc0038I Pass  21: (1.46 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 13
Cbc0038I Pass  22: (1.47 seconds) suminf.    1.63459 (14) obj. -358.448 iterations 139
Cbc0038I Pass  23: (1.47 seconds) suminf.    0.94737 (9) obj. -361.116 iterations 273
Cbc0038I Pass  24: (1.48 seconds) suminf.    0.07626 (6) obj. -358.448 iterations 291
Cbc0038I Pass  25: (1.48 seconds) suminf.    0.42857 (6) obj. -361.595 iterations 138
Cbc0038I Pass  26: (1.49 seconds) suminf.    2.00000 (14) obj. -359.185 iterations 196
Cbc0038I Pass  27: (1.50 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 167
Cbc0038I Pass  28: (1.50 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 3
Cbc0038I Pass  29: (1.51 seconds) suminf.    1.63459 (14) obj. -358.448 iterations 129
Cbc0038I Pass  30: (1.52 seconds) suminf.    1.00000 (14) obj. -362.935 iterations 254
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 684 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3566 rows 848 columns, reduced to 96 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -357.766 to -361.185 (1.57 seconds)
Cbc0038I Round again with cutoff of -361.864
Cbc0038I Reduced cost fixing fixed 160 variables on major pass 3
Cbc0038I Pass  30: (1.57 seconds) suminf.    0.47642 (6) obj. -361.864 iterations 50
Cbc0038I Pass  31: (1.57 seconds) suminf.    0.48000 (6) obj. -361.895 iterations 145
Cbc0038I Pass  32: (1.58 seconds) suminf.    4.17139 (17) obj. -361.864 iterations 226
Cbc0038I Pass  33: (1.59 seconds) suminf.    1.71232 (13) obj. -361.864 iterations 390
Cbc0038I Pass  34: (1.60 seconds) suminf.    1.86667 (7) obj. -362.56 iterations 172
Cbc0038I Pass  35: (1.60 seconds) suminf.    2.95414 (16) obj. -361.864 iterations 320
Cbc0038I Pass  36: (1.61 seconds) suminf.    1.33333 (4) obj. -362.954 iterations 306
Cbc0038I Pass  37: (1.62 seconds) suminf.    0.95216 (34) obj. -361.864 iterations 339
Cbc0038I Pass  38: (1.63 seconds) suminf.    0.66667 (6) obj. -362.043 iterations 310
Cbc0038I Pass  39: (1.64 seconds) suminf.    1.82064 (14) obj. -361.864 iterations 366
Cbc0038I Pass  40: (1.65 seconds) suminf.    5.97200 (30) obj. -361.864 iterations 485
Cbc0038I Pass  41: (1.66 seconds) suminf.    1.76138 (7) obj. -361.864 iterations 396
Cbc0038I Pass  42: (1.66 seconds) suminf.    0.61944 (7) obj. -361.864 iterations 222
Cbc0038I Pass  43: (1.67 seconds) suminf.    0.47642 (6) obj. -361.864 iterations 214
Cbc0038I Pass  44: (1.67 seconds) suminf.    0.48000 (6) obj. -361.895 iterations 97
Cbc0038I Pass  45: (1.68 seconds) suminf.    1.50000 (6) obj. -363.373 iterations 283
Cbc0038I Pass  46: (1.68 seconds) suminf.    1.09630 (6) obj. -361.864 iterations 308
Cbc0038I Pass  47: (1.69 seconds) suminf.    0.92857 (11) obj. -362.966 iterations 277
Cbc0038I Pass  48: (1.70 seconds) suminf.    0.87500 (7) obj. -363.087 iterations 275
Cbc0038I Pass  49: (1.70 seconds) suminf.    0.68750 (11) obj. -362.988 iterations 138
Cbc0038I Pass  50: (1.71 seconds) suminf.    4.64765 (18) obj. -361.864 iterations 616
Cbc0038I Pass  51: (1.72 seconds) suminf.    0.68750 (11) obj. -362.988 iterations 467
Cbc0038I Pass  52: (1.73 seconds) suminf.    0.79835 (2) obj. -361.864 iterations 413
Cbc0038I Pass  53: (1.75 seconds) suminf.    0.44711 (13) obj. -361.864 iterations 346
Cbc0038I Pass  54: (1.75 seconds) suminf.    0.46667 (7) obj. -361.936 iterations 207
Cbc0038I Pass  55: (1.76 seconds) suminf.    0.67908 (18) obj. -361.864 iterations 463
Cbc0038I Pass  56: (1.77 seconds) suminf.    0.71845 (9) obj. -361.864 iterations 245
Cbc0038I Pass  57: (1.78 seconds) suminf.    2.62500 (7) obj. -362.064 iterations 432
Cbc0038I Pass  58: (1.79 seconds) suminf.    1.59344 (18) obj. -361.864 iterations 555
Cbc0038I Pass  59: (1.80 seconds) suminf.    1.65000 (11) obj. -362.006 iterations 375
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 721 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3566 rows 848 columns, reduced to 62 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -361.185 to -363.065 (1.83 seconds)
Cbc0038I Round again with cutoff of -363.519
Cbc0038I Reduced cost fixing fixed 177 variables on major pass 4
Cbc0038I Pass  59: (1.84 seconds) suminf.    0.84003 (13) obj. -363.519 iterations 119
Cbc0038I Pass  60: (1.84 seconds) suminf.    0.93333 (7) obj. -363.94 iterations 173
Cbc0038I Pass  61: (1.85 seconds) suminf.    2.19050 (12) obj. -363.519 iterations 316
Cbc0038I Pass  62: (1.86 seconds) suminf.    1.51728 (15) obj. -363.519 iterations 642
Cbc0038I Pass  63: (1.87 seconds) suminf.    1.17129 (18) obj. -363.519 iterations 409
Cbc0038I Pass  64: (1.88 seconds) suminf.    1.47250 (19) obj. -363.519 iterations 479
Cbc0038I Pass  65: (1.90 seconds) suminf.    3.29060 (9) obj. -363.519 iterations 745
Cbc0038I Pass  66: (1.91 seconds) suminf.    3.18189 (20) obj. -363.519 iterations 583
Cbc0038I Pass  67: (1.91 seconds) suminf.    4.97250 (18) obj. -363.519 iterations 32
Cbc0038I Pass  68: (1.92 seconds) suminf.    4.97250 (18) obj. -363.519 iterations 0
Cbc0038I Pass  69: (1.92 seconds) suminf.    4.97250 (18) obj. -363.519 iterations 16
Cbc0038I Pass  70: (1.93 seconds) suminf.    1.23077 (8) obj. -363.999 iterations 543
Cbc0038I Pass  71: (1.94 seconds) suminf.    0.84003 (13) obj. -363.519 iterations 255
Cbc0038I Pass  72: (1.94 seconds) suminf.    0.93333 (7) obj. -363.94 iterations 145
Cbc0038I Pass  73: (1.95 seconds) suminf.    3.46547 (30) obj. -363.519 iterations 200
Cbc0038I Pass  74: (1.96 seconds) suminf.    0.87642 (14) obj. -363.519 iterations 384
Cbc0038I Pass  75: (1.97 seconds) suminf.    1.13598 (13) obj. -363.519 iterations 434
Cbc0038I Pass  76: (1.98 seconds) suminf.    1.22597 (23) obj. -363.519 iterations 385
Cbc0038I Pass  77: (1.99 seconds) suminf.    1.13602 (8) obj. -363.519 iterations 345
Cbc0038I Pass  78: (2.00 seconds) suminf.    1.23077 (8) obj. -363.999 iterations 224
Cbc0038I Pass  79: (2.00 seconds) suminf.    1.12096 (13) obj. -363.519 iterations 264
Cbc0038I Pass  80: (2.01 seconds) suminf.    0.84003 (13) obj. -363.519 iterations 292
Cbc0038I Pass  81: (2.02 seconds) suminf.    1.25712 (15) obj. -363.519 iterations 407
Cbc0038I Pass  82: (2.03 seconds) suminf.    1.43703 (14) obj. -363.519 iterations 367
Cbc0038I Pass  83: (2.05 seconds) suminf.    3.32171 (12) obj. -363.519 iterations 1074
Cbc0038I Pass  84: (2.06 seconds) suminf.    3.30818 (11) obj. -363.519 iterations 11
Cbc0038I Pass  85: (2.06 seconds) suminf.    3.30818 (11) obj. -363.519 iterations 8
Cbc0038I Pass  86: (2.06 seconds) suminf.    3.30818 (11) obj. -363.519 iterations 8
Cbc0038I Pass  87: (2.08 seconds) suminf.    0.84003 (13) obj. -363.519 iterations 769
Cbc0038I Pass  88: (2.08 seconds) suminf.    0.84003 (13) obj. -363.519 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 744 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3566 rows 848 columns, reduced to 61 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (2.11 seconds)
Cbc0038I After 2.11 seconds - Feasibility pump exiting with objective of -363.065 - took 0.83 seconds
Cbc0012I Integer solution of -363.06507 found by feasibility pump after 0 iterations and 0 nodes (2.11 seconds)
Cbc0038I Full problem 3566 rows 848 columns, reduced to 3 rows 5 columns
Cbc0031I 3 added rows had average density of 28
Cbc0013I At root node, 16 cuts changed objective from -364.57946 to -362.97233 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 62 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0001I Search completed - best objective -363.065073035895, took 113 iterations and 0 nodes (2.20 seconds)
Cbc0035I Maximum depth 0, 174 variables fixed on reduced cost
Cuts at root node changed objective from -364.579 to -362.972
Probing was tried 5 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 5 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 5 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                363.06507304
Enumerated nodes:               0
Total iterations:               113
Time (CPU seconds):             2.32
Time (Wallclock seconds):       2.79

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.15   (Wallclock seconds):       3.83

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/a6ad59a7f53f4517948d77456cc2f08b-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/a6ad59a7f53f4517948d77456cc2f08b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1366228 COLUMNS
At line 5469667 RHS
At line 6835891 BOUNDS
At line 6839918 ENDATA
Problem MODEL has 1366223 rows, 4026 columns and 1381897 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 442.708 - 1.30 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 194 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 5821 rows, 1348 columns (1348 integer (1347 of which binary)) and 15919 elements
Cbc0038I Initial state - 15 integers unsatisfied sum - 6.31579
Cbc0038I Pass   1: (2.99 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 911
Cbc0038I Pass   2: (2.99 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 2
Cbc0038I Solution found of -403.336
Cbc0038I Cleaned solution of -403.336
Cbc0038I Rounding solution of -424.682 is better than previous of -403.336

Cbc0038I Before mini branch and bound, 1324 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -424.682 to -429.437 (3.16 seconds)
Cbc0038I Round again with cutoff of -430.765
Cbc0038I Reduced cost fixing fixed 133 variables on major pass 2
Cbc0038I Pass   3: (3.16 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 0
Cbc0038I Pass   4: (3.17 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 4
Cbc0038I Pass   5: (3.19 seconds) suminf.    1.28788 (6) obj. -430.765 iterations 732
Cbc0038I Pass   6: (3.20 seconds) suminf.    1.00000 (3) obj. -430.765 iterations 370
Cbc0038I Pass   7: (3.23 seconds) suminf.    0.00000 (0) obj. -433.326 iterations 682
Cbc0038I Solution found of -433.326
Cbc0038I Cleaned solution of -433.326
Cbc0038I Before mini branch and bound, 1320 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (3.28 seconds)
Cbc0038I Round again with cutoff of -435.203
Cbc0038I Reduced cost fixing fixed 186 variables on major pass 3
Cbc0038I Pass   8: (3.28 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 0
Cbc0038I Pass   9: (3.29 seconds) suminf.    0.66667 (6) obj. -441.045 iterations 3
Cbc0038I Pass  10: (3.31 seconds) suminf.    2.61014 (6) obj. -435.203 iterations 558
Cbc0038I Pass  11: (3.32 seconds) suminf.    0.55556 (5) obj. -439.622 iterations 302
Cbc0038I Pass  12: (3.33 seconds) suminf.    2.49490 (7) obj. -435.203 iterations 440
Cbc0038I Pass  13: (3.35 seconds) suminf.    0.25057 (1) obj. -435.203 iterations 441
Cbc0038I Pass  14: (3.36 seconds) suminf.    0.20000 (1) obj. -436.637 iterations 162
Cbc0038I Pass  15: (3.37 seconds) suminf.    2.62693 (6) obj. -435.203 iterations 421
Cbc0038I Pass  16: (3.38 seconds) suminf.    1.63663 (5) obj. -435.203 iterations 335
Cbc0038I Pass  17: (3.39 seconds) suminf.    0.43984 (4) obj. -435.203 iterations 341
Cbc0038I Pass  18: (3.41 seconds) suminf.    1.28571 (3) obj. -438.597 iterations 551
Cbc0038I Pass  19: (3.42 seconds) suminf.    0.07808 (1) obj. -435.203 iterations 230
Cbc0038I Pass  20: (3.42 seconds) suminf.    0.40000 (1) obj. -436.232 iterations 154
Cbc0038I Pass  21: (3.44 seconds) suminf.    0.88224 (2) obj. -435.203 iterations 464
Cbc0038I Pass  22: (3.45 seconds) suminf.    0.16051 (4) obj. -435.203 iterations 298
Cbc0038I Pass  23: (3.46 seconds) suminf.    1.28571 (3) obj. -439.326 iterations 552
Cbc0038I Pass  24: (3.47 seconds) suminf.    0.02849 (1) obj. -435.203 iterations 236
Cbc0038I Pass  25: (3.48 seconds) suminf.    0.40000 (1) obj. -436.961 iterations 156
Cbc0038I Pass  26: (3.48 seconds) suminf.    0.40000 (1) obj. -436.961 iterations 232
Cbc0038I Pass  27: (3.49 seconds) suminf.    0.40000 (1) obj. -436.961 iterations 205
Cbc0038I Pass  28: (3.50 seconds) suminf.    0.27135 (5) obj. -435.203 iterations 582
Cbc0038I Pass  29: (3.51 seconds) suminf.    0.56686 (3) obj. -435.203 iterations 312
Cbc0038I Pass  30: (3.52 seconds) suminf.    0.33479 (6) obj. -435.203 iterations 239
Cbc0038I Pass  31: (3.53 seconds) suminf.    0.56686 (3) obj. -435.203 iterations 255
Cbc0038I Pass  32: (3.55 seconds) suminf.    0.02849 (1) obj. -435.203 iterations 969
Cbc0038I Pass  33: (3.57 seconds) suminf.    3.00096 (10) obj. -435.203 iterations 443
Cbc0038I Pass  34: (3.58 seconds) suminf.    2.06026 (7) obj. -435.203 iterations 273
Cbc0038I Pass  35: (3.58 seconds) suminf.    1.33333 (6) obj. -437.258 iterations 25
Cbc0038I Pass  36: (3.60 seconds) suminf.    2.17668 (6) obj. -435.203 iterations 525
Cbc0038I Pass  37: (3.61 seconds) suminf.    2.07358 (9) obj. -435.203 iterations 470
Cbc0038I Rounding solution of -434.84 is better than previous of -433.326

Cbc0038I Before mini branch and bound, 1288 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -434.84 to -440.738 (3.66 seconds)
Cbc0038I Round again with cutoff of -441.329
Cbc0038I Reduced cost fixing fixed 316 variables on major pass 4
Cbc0038I Pass  37: (3.67 seconds) suminf.    0.78947 (15) obj. -442.115 iterations 23
Cbc0038I Pass  38: (3.67 seconds) suminf.    0.78947 (15) obj. -442.115 iterations 6
Cbc0038I Pass  39: (3.70 seconds) suminf.    6.59585 (26) obj. -441.329 iterations 809
Cbc0038I Pass  40: (3.70 seconds) suminf.    5.81572 (23) obj. -441.329 iterations 38
Cbc0038I Pass  41: (3.71 seconds) suminf.    0.00000 (0) obj. -441.36 iterations 709
Cbc0038I Solution found of -441.36
Cbc0038I Cleaned solution of -441.36
Cbc0038I Before mini branch and bound, 1308 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 1 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -441.36 to -441.36 (3.76 seconds)
Cbc0038I Round again with cutoff of -441.764
Cbc0038I Reduced cost fixing fixed 325 variables on major pass 5
Cbc0038I Pass  42: (3.77 seconds) suminf.    0.78947 (15) obj. -442.115 iterations 2
Cbc0038I Pass  43: (3.78 seconds) suminf.    0.78947 (15) obj. -442.115 iterations 4
Cbc0038I Pass  44: (3.80 seconds) suminf.    6.89780 (26) obj. -441.764 iterations 858
Cbc0038I Pass  45: (3.81 seconds) suminf.    6.09360 (13) obj. -441.764 iterations 219
Cbc0038I Pass  46: (3.83 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 741
Cbc0038I Pass  47: (3.83 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 25
Cbc0038I Pass  48: (3.83 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 7
Cbc0038I Pass  49: (3.84 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 4
Cbc0038I Pass  50: (3.84 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 6
Cbc0038I Pass  51: (3.84 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 20
Cbc0038I Pass  52: (3.87 seconds) suminf.    4.66667 (12) obj. -442.246 iterations 788
Cbc0038I Pass  53: (3.89 seconds) suminf.    3.37174 (16) obj. -441.764 iterations 1060
Cbc0038I Pass  54: (3.90 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 37
Cbc0038I Pass  55: (3.91 seconds) suminf.    7.06453 (15) obj. -441.764 iterations 724
Cbc0038I Pass  56: (3.92 seconds) suminf.    7.06453 (15) obj. -441.764 iterations 46
Cbc0038I Pass  57: (3.94 seconds) suminf.    4.00000 (8) obj. -442.091 iterations 855
Cbc0038I Pass  58: (3.96 seconds) suminf.    3.40676 (11) obj. -441.764 iterations 998
Cbc0038I Pass  59: (3.97 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 50
Cbc0038I Pass  60: (3.98 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 19
Cbc0038I Pass  61: (3.99 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 275
Cbc0038I Pass  62: (4.00 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 308
Cbc0038I Pass  63: (4.01 seconds) suminf.    3.96959 (13) obj. -441.764 iterations 601
Cbc0038I Pass  64: (4.04 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 1059
Cbc0038I Pass  65: (4.06 seconds) suminf.    3.42127 (13) obj. -441.764 iterations 681
Cbc0038I Pass  66: (4.08 seconds) suminf.    3.96959 (13) obj. -441.764 iterations 500
Cbc0038I Pass  67: (4.10 seconds) suminf.    7.06453 (15) obj. -441.764 iterations 1082
Cbc0038I Pass  68: (4.11 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 10
Cbc0038I Pass  69: (4.11 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 9
Cbc0038I Pass  70: (4.16 seconds) suminf.    6.09360 (13) obj. -441.764 iterations 1820
Cbc0038I Pass  71: (4.18 seconds) suminf.    3.49793 (15) obj. -441.764 iterations 697
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1296 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (4.21 seconds)
Cbc0038I After 4.22 seconds - Feasibility pump exiting with objective of -441.36 - took 1.14 seconds
Cbc0012I Integer solution of -441.35981 found by feasibility pump after 0 iterations and 0 nodes (4.22 seconds)
Cbc0038I Full problem 5821 rows 1348 columns, reduced to 0 rows 0 columns
Cbc0031I 4 added rows had average density of 9.25
Cbc0013I At root node, 7 cuts changed objective from -442.70751 to -441.30693 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 99 row cuts average 11.9 elements, 14 column cuts (14 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 60 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 13 row cuts average 371.1 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0001I Search completed - best objective -441.3598062869271, took 105 iterations and 0 nodes (4.57 seconds)
Cbc0035I Maximum depth 0, 328 variables fixed on reduced cost
Cuts at root node changed objective from -442.708 to -441.307
Probing was tried 8 times and created 113 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 8 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 8 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 8 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
ZeroHalf was tried 8 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.150 seconds)

Result - Optimal solution found

Objective value:                441.35980629
Enumerated nodes:               0
Total iterations:               105
Time (CPU seconds):             4.49
Time (Wallclock seconds):       5.63

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.61   (Wallclock seconds):       8.07

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/a5bbaa0d25704d0b9d2649ea57b44a60-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/a5bbaa0d25704d0b9d2649ea57b44a60-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1221766 COLUMNS
At line 4891720 RHS
At line 6113482 BOUNDS
At line 6117494 ENDATA
Problem MODEL has 1221761 rows, 4011 columns and 1236855 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 382.419 - 1.16 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 237 strengthened rows, 122 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 189 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 67 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 5326 rows, 1256 columns (1256 integer (1256 of which binary)) and 14888 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 3.77476e-15
Cbc0038I Solution found of -382.419
Cbc0038I Before mini branch and bound, 1256 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.91 seconds)
Cbc0038I After 2.91 seconds - Feasibility pump exiting with objective of -382.419 - took 0.02 seconds
Cbc0012I Integer solution of -382.41943 found by feasibility pump after 0 iterations and 0 nodes (2.91 seconds)
Cbc0001I Search completed - best objective -382.4194315687431, took 0 iterations and 0 nodes (2.92 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -382.419 to -382.419
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                382.41943157
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.98
Time (Wallclock seconds):       4.24

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.87   (Wallclock seconds):       6.43

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4d1364f2fe8e42f1b41495381b12639f-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/4d1364f2fe8e42f1b41495381b12639f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 525376 COLUMNS
At line 2104581 RHS
At line 2629953 BOUNDS
At line 2632622 ENDATA
Problem MODEL has 525371 rows, 2668 columns and 534589 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 417.04 - 0.64 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 135 strengthened rows, 182 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 111 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 3033 rows, 800 columns (800 integer (800 of which binary)) and 8369 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: (1.25 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 472
Cbc0038I Solution found of -361.549
Cbc0038I Before mini branch and bound, 784 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3033 rows 800 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -361.549 to -395.166 (1.33 seconds)
Cbc0038I Round again with cutoff of -397.353
Cbc0038I Reduced cost fixing fixed 59 variables on major pass 2
Cbc0038I Pass   2: (1.33 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 0
Cbc0038I Pass   3: (1.34 seconds) suminf.    4.01869 (18) obj. -397.353 iterations 462
Cbc0038I Pass   4: (1.35 seconds) suminf.    2.85714 (12) obj. -405.255 iterations 177
Cbc0038I Pass   5: (1.36 seconds) suminf.    0.74110 (4) obj. -397.353 iterations 307
Cbc0038I Pass   6: (1.37 seconds) suminf.    0.95238 (4) obj. -399.693 iterations 182
Cbc0038I Pass   7: (1.37 seconds) suminf.    4.55839 (21) obj. -397.353 iterations 245
Cbc0038I Solution found of -404.833
Cbc0038I Before mini branch and bound, 749 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3033 rows 800 columns, reduced to 23 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -404.833 to -410.854 (1.40 seconds)
Cbc0038I Round again with cutoff of -412.091
Cbc0038I Reduced cost fixing fixed 149 variables on major pass 3
Cbc0038I Pass   8: (1.40 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 0
Cbc0038I Pass   9: (1.41 seconds) suminf.    4.92154 (12) obj. -412.091 iterations 458
Cbc0038I Pass  10: (1.42 seconds) suminf.    4.97258 (14) obj. -412.091 iterations 267
Cbc0038I Pass  11: (1.42 seconds) suminf.    5.34717 (24) obj. -412.091 iterations 126
Cbc0038I Pass  12: (1.42 seconds) suminf.    5.00000 (15) obj. -412.091 iterations 150
Cbc0038I Pass  13: (1.43 seconds) suminf.    2.14286 (10) obj. -414.561 iterations 447
Cbc0038I Pass  14: (1.44 seconds) suminf.    4.42056 (12) obj. -412.091 iterations 408
Cbc0038I Pass  15: (1.45 seconds) suminf.    3.56432 (12) obj. -412.091 iterations 246
Cbc0038I Pass  16: (1.45 seconds) suminf.    4.30808 (12) obj. -412.091 iterations 245
Cbc0038I Pass  17: (1.46 seconds) suminf.    4.41507 (15) obj. -412.091 iterations 277
Cbc0038I Pass  18: (1.46 seconds) suminf.    4.95970 (14) obj. -412.091 iterations 186
Cbc0038I Pass  19: (1.47 seconds) suminf.    7.39677 (19) obj. -412.091 iterations 420
Cbc0038I Pass  20: (1.48 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 455
Cbc0038I Pass  21: (1.48 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 29
Cbc0038I Pass  22: (1.49 seconds) suminf.    4.92154 (12) obj. -412.091 iterations 378
Cbc0038I Pass  23: (1.49 seconds) suminf.    5.31576 (18) obj. -412.091 iterations 315
Cbc0038I Pass  24: (1.50 seconds) suminf.    0.71429 (10) obj. -416.461 iterations 175
Cbc0038I Pass  25: (1.50 seconds) suminf.    4.28011 (24) obj. -412.091 iterations 143
Cbc0038I Pass  26: (1.50 seconds) suminf.    1.42857 (10) obj. -415.471 iterations 130
Cbc0038I Pass  27: (1.51 seconds) suminf.    4.61558 (12) obj. -412.091 iterations 358
Cbc0038I Pass  28: (1.52 seconds) suminf.    4.40643 (12) obj. -412.091 iterations 290
Cbc0038I Pass  29: (1.52 seconds) suminf.    1.42857 (10) obj. -415.471 iterations 459
Cbc0038I Pass  30: (1.53 seconds) suminf.    3.66915 (10) obj. -412.091 iterations 424
Cbc0038I Pass  31: (1.53 seconds) suminf.    2.22222 (10) obj. -414.821 iterations 347
Cbc0038I Pass  32: (1.54 seconds) suminf.    2.00000 (4) obj. -416.057 iterations 167
Cbc0038I Pass  33: (1.54 seconds) suminf.    0.39794 (2) obj. -412.091 iterations 210
Cbc0038I Pass  34: (1.54 seconds) suminf.    0.50000 (2) obj. -413.091 iterations 98
Cbc0038I Pass  35: (1.55 seconds) suminf.    1.02491 (7) obj. -412.091 iterations 549
Cbc0038I Solution found of -413.381
Cbc0038I Before mini branch and bound, 707 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3033 rows 800 columns, reduced to 32 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -413.381 to -414.088 (1.57 seconds)
Cbc0038I Round again with cutoff of -414.974
Cbc0038I Reduced cost fixing fixed 185 variables on major pass 4
Cbc0038I Pass  36: (1.58 seconds) suminf.    0.72727 (8) obj. -416.852 iterations 8
Cbc0038I Pass  37: (1.59 seconds) suminf.    5.16638 (21) obj. -414.974 iterations 546
Cbc0038I Pass  38: (1.60 seconds) suminf.    4.25148 (12) obj. -414.974 iterations 431
Cbc0038I Pass  39: (1.60 seconds) suminf.    5.59623 (13) obj. -414.974 iterations 261
Cbc0038I Pass  40: (1.60 seconds) suminf.    4.40111 (22) obj. -414.974 iterations 31
Cbc0038I Pass  41: (1.61 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 476
Cbc0038I Pass  42: (1.61 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 1
Cbc0038I Pass  43: (1.62 seconds) suminf.    4.47618 (21) obj. -414.974 iterations 486
Cbc0038I Pass  44: (1.63 seconds) suminf.    3.21422 (11) obj. -414.974 iterations 391
Cbc0038I Pass  45: (1.63 seconds) suminf.    0.85714 (6) obj. -417.04 iterations 237
Cbc0038I Pass  46: (1.63 seconds) suminf.    0.72727 (8) obj. -416.852 iterations 105
Cbc0038I Pass  47: (1.64 seconds) suminf.    5.16638 (21) obj. -414.974 iterations 499
Cbc0038I Pass  48: (1.65 seconds) suminf.    3.98810 (21) obj. -414.974 iterations 429
Cbc0038I Pass  49: (1.66 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 229
Cbc0038I Pass  50: (1.66 seconds) suminf.    0.72727 (8) obj. -416.852 iterations 217
Cbc0038I Pass  51: (1.66 seconds) suminf.    1.12500 (9) obj. -416.983 iterations 215
Cbc0038I Pass  52: (1.66 seconds) suminf.    0.85714 (6) obj. -417.04 iterations 204
Cbc0038I Pass  53: (1.67 seconds) suminf.    0.85714 (6) obj. -417.04 iterations 165
Cbc0038I Pass  54: (1.67 seconds) suminf.    4.64427 (11) obj. -414.974 iterations 354
Cbc0038I Pass  55: (1.68 seconds) suminf.    4.64427 (11) obj. -414.974 iterations 327
Cbc0038I Pass  56: (1.68 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 455
Cbc0038I Pass  57: (1.69 seconds) suminf.    4.47618 (21) obj. -414.974 iterations 478
Cbc0038I Pass  58: (1.69 seconds) suminf.    8.09857 (22) obj. -414.974 iterations 144
Cbc0038I Pass  59: (1.70 seconds) suminf.    4.40111 (22) obj. -414.974 iterations 117
Cbc0038I Pass  60: (1.70 seconds) suminf.    4.40111 (22) obj. -414.974 iterations 9
Cbc0038I Pass  61: (1.71 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 448
Cbc0038I Pass  62: (1.71 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 11
Cbc0038I Pass  63: (1.72 seconds) suminf.    4.47618 (21) obj. -414.974 iterations 463
Cbc0038I Pass  64: (1.72 seconds) suminf.    1.45455 (8) obj. -416.252 iterations 305
Cbc0038I Pass  65: (1.73 seconds) suminf.    3.85342 (12) obj. -414.974 iterations 401
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 732 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3033 rows 800 columns, reduced to 17 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (1.75 seconds)
Cbc0038I After 1.75 seconds - Feasibility pump exiting with objective of -414.088 - took 0.45 seconds
Cbc0012I Integer solution of -414.08813 found by feasibility pump after 0 iterations and 0 nodes (1.75 seconds)
Cbc0031I 4 added rows had average density of 28
Cbc0013I At root node, 4 cuts changed objective from -417.03971 to -415.69684 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 41 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 212.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -414.08813 best solution, best possible -415.69144 (1.83 seconds)
Cbc0016I Integer solution of -414.94321 found by strong branching after 56 iterations and 1 nodes (1.84 seconds)
Cbc0001I Search completed - best objective -414.94321245654, took 130 iterations and 2 nodes (1.85 seconds)
Cbc0032I Strong branching done 10 times (80 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 183 variables fixed on reduced cost
Cuts at root node changed objective from -417.04 to -415.691
Probing was tried 12 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 12 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 7 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                414.94321246
Enumerated nodes:               2
Total iterations:               130
Time (CPU seconds):             1.83
Time (Wallclock seconds):       2.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.62   (Wallclock seconds):       3.07

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/984fab326332480a8792eb6993465a34-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/984fab326332480a8792eb6993465a34-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 75554 COLUMNS
At line 303511 RHS
At line 379061 BOUNDS
At line 380240 ENDATA
Problem MODEL has 75549 rows, 1178 columns and 78917 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 368.998 - 0.03 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 242 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0004I processed model has 762 rows, 246 columns (246 integer (246 of which binary)) and 2074 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 1.89189
Cbc0038I Pass   1: suminf.    1.89189 (10) obj. -368.998 iterations 124
Cbc0038I Solution found of -268.605
Cbc0038I Rounding solution of -287.366 is better than previous of -268.605

Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of -295.53
Cbc0038I Pass   2: suminf.    1.89189 (10) obj. -368.998 iterations 0
Cbc0038I Pass   3: suminf.    1.11497 (7) obj. -295.53 iterations 140
Cbc0038I Pass   4: suminf.    0.06667 (2) obj. -329.008 iterations 46
Cbc0038I Solution found of -327.381
Cbc0038I Rounding solution of -331.988 is better than previous of -327.381

Cbc0038I Before mini branch and bound, 229 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 246 columns, reduced to 7 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -339.39
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass   5: suminf.    1.89189 (10) obj. -368.998 iterations 0
Cbc0038I Pass   6: suminf.    3.48043 (12) obj. -339.39 iterations 141
Cbc0038I Pass   7: suminf.    1.56522 (6) obj. -339.754 iterations 52
Cbc0038I Pass   8: suminf.    1.52675 (8) obj. -339.39 iterations 58
Cbc0038I Pass   9: suminf.    1.56522 (6) obj. -339.754 iterations 47
Cbc0038I Pass  10: suminf.    1.80000 (11) obj. -343.973 iterations 70
Cbc0038I Pass  11: suminf.    0.73312 (12) obj. -339.39 iterations 105
Cbc0038I Pass  12: suminf.    0.16667 (3) obj. -341.907 iterations 57
Cbc0038I Pass  13: suminf.    0.16667 (3) obj. -341.907 iterations 10
Cbc0038I Pass  14: suminf.    1.65303 (12) obj. -339.39 iterations 106
Cbc0038I Pass  15: suminf.    0.16667 (3) obj. -341.907 iterations 47
Cbc0038I Pass  16: suminf.    0.46154 (6) obj. -341.45 iterations 49
Cbc0038I Pass  17: suminf.    1.19585 (9) obj. -339.39 iterations 109
Cbc0038I Pass  18: suminf.    0.38215 (8) obj. -339.39 iterations 142
Cbc0038I Pass  19: suminf.    0.39130 (6) obj. -339.476 iterations 50
Cbc0038I Pass  20: suminf.    1.46297 (14) obj. -339.39 iterations 137
Cbc0038I Pass  21: suminf.    0.57621 (6) obj. -339.39 iterations 160
Cbc0038I Pass  22: suminf.    0.45620 (11) obj. -339.39 iterations 76
Cbc0038I Pass  23: suminf.    0.45620 (11) obj. -339.39 iterations 84
Cbc0038I Pass  24: suminf.    7.65563 (21) obj. -339.39 iterations 122
Cbc0038I Pass  25: suminf.    1.90861 (13) obj. -339.39 iterations 74
Cbc0038I Pass  26: suminf.    1.38149 (18) obj. -339.39 iterations 110
Cbc0038I Pass  27: suminf.    4.32432 (10) obj. -361.648 iterations 134
Cbc0038I Pass  28: suminf.    4.32432 (10) obj. -361.648 iterations 31
Cbc0038I Pass  29: suminf.    2.32641 (12) obj. -339.39 iterations 110
Cbc0038I Pass  30: suminf.    0.39130 (6) obj. -339.476 iterations 56
Cbc0038I Pass  31: suminf.    0.38215 (8) obj. -339.39 iterations 71
Cbc0038I Pass  32: suminf.    0.39130 (6) obj. -339.476 iterations 37
Cbc0038I Pass  33: suminf.    1.11111 (4) obj. -347.054 iterations 120
Cbc0038I Pass  34: suminf.    0.37500 (1) obj. -349.528 iterations 48
Cbc0038I Rounding solution of -342.492 is better than previous of -331.988

Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 246 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -342.492 to -347.601 (0.15 seconds)
Cbc0038I Round again with cutoff of -354.02
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 4
Cbc0038I Pass  34: suminf.    1.89189 (10) obj. -368.998 iterations 0
Cbc0038I Pass  35: suminf.    5.44273 (16) obj. -354.02 iterations 116
Cbc0038I Pass  36: suminf.    1.89189 (10) obj. -368.998 iterations 61
Cbc0038I Pass  37: suminf.    7.00000 (21) obj. -363.311 iterations 55
Cbc0038I Pass  38: suminf.    6.40591 (25) obj. -354.02 iterations 58
Cbc0038I Pass  39: suminf.    5.67554 (26) obj. -354.02 iterations 14
Cbc0038I Pass  40: suminf.    3.10155 (10) obj. -354.02 iterations 9
Cbc0038I Pass  41: suminf.    1.89189 (10) obj. -368.998 iterations 36
Cbc0038I Pass  42: suminf.    5.44273 (16) obj. -354.02 iterations 112
Cbc0038I Pass  43: suminf.    1.89189 (10) obj. -368.998 iterations 63
Cbc0038I Pass  44: suminf.    0.54054 (10) obj. -367.41 iterations 78
Cbc0038I Pass  45: suminf.    0.54054 (10) obj. -367.41 iterations 60
Cbc0038I Pass  46: suminf.    7.07658 (16) obj. -354.02 iterations 137
Cbc0038I Pass  47: suminf.    0.54054 (10) obj. -367.41 iterations 56
Cbc0038I Pass  48: suminf.    3.24324 (10) obj. -368.766 iterations 64
Cbc0038I Pass  49: suminf.    3.24324 (10) obj. -368.766 iterations 56
Cbc0038I Pass  50: suminf.    4.13261 (16) obj. -354.02 iterations 86
Cbc0038I Pass  51: suminf.    3.24324 (10) obj. -368.766 iterations 55
Cbc0038I Pass  52: suminf.    6.27749 (15) obj. -354.02 iterations 86
Cbc0038I Pass  53: suminf.    6.27749 (15) obj. -354.02 iterations 98
Cbc0038I Pass  54: suminf.    1.75951 (15) obj. -354.02 iterations 23
Cbc0038I Pass  55: suminf.    0.90648 (6) obj. -354.02 iterations 175
Cbc0038I Pass  56: suminf.    0.91304 (6) obj. -354.149 iterations 50
Cbc0038I Pass  57: suminf.    3.00621 (10) obj. -354.02 iterations 79
Cbc0038I Pass  58: suminf.    3.00621 (10) obj. -354.02 iterations 101
Cbc0038I Pass  59: suminf.    4.13261 (16) obj. -354.02 iterations 199
Cbc0038I Pass  60: suminf.    4.13261 (16) obj. -354.02 iterations 43
Cbc0038I Pass  61: suminf.    1.66772 (21) obj. -354.02 iterations 79
Cbc0038I Pass  62: suminf.    1.32894 (16) obj. -354.02 iterations 52
Cbc0038I Pass  63: suminf.    1.89189 (10) obj. -357.184 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 246 columns, reduced to 90 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -347.601 to -354.518 (0.19 seconds)
Cbc0038I Round again with cutoff of -358.862
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 5
Cbc0038I Pass  63: suminf.    1.89189 (10) obj. -368.998 iterations 0
Cbc0038I Pass  64: suminf.    4.74958 (14) obj. -358.862 iterations 105
Cbc0038I Pass  65: suminf.    1.89189 (10) obj. -368.998 iterations 67
Cbc0038I Pass  66: suminf.    4.52590 (19) obj. -358.862 iterations 93
Cbc0038I Pass  67: suminf.    4.52590 (19) obj. -358.862 iterations 81
Cbc0038I Pass  68: suminf.    4.52590 (19) obj. -358.862 iterations 103
Cbc0038I Pass  69: suminf.    4.52590 (19) obj. -358.862 iterations 56
Cbc0038I Pass  70: suminf.    2.97421 (17) obj. -358.862 iterations 134
Cbc0038I Pass  71: suminf.    2.97421 (17) obj. -358.862 iterations 58
Cbc0038I Pass  72: suminf.    1.89189 (10) obj. -368.998 iterations 113
Cbc0038I Pass  73: suminf.    4.74958 (14) obj. -358.862 iterations 88
Cbc0038I Pass  74: suminf.    1.89189 (10) obj. -368.998 iterations 65
Cbc0038I Pass  75: suminf.    4.54873 (16) obj. -358.862 iterations 95
Cbc0038I Pass  76: suminf.    4.54873 (16) obj. -358.862 iterations 43
Cbc0038I Pass  77: suminf.    3.37611 (22) obj. -358.862 iterations 6
Cbc0038I Pass  78: suminf.    1.87500 (6) obj. -360.977 iterations 110
Cbc0038I Pass  79: suminf.    1.90283 (14) obj. -358.862 iterations 94
Cbc0038I Pass  80: suminf.    2.97297 (10) obj. -368.503 iterations 56
Cbc0038I Pass  81: suminf.    0.64151 (24) obj. -360.032 iterations 97
Cbc0038I Pass  82: suminf.    0.28619 (14) obj. -358.862 iterations 94
Cbc0038I Pass  83: suminf.    0.54054 (10) obj. -361.154 iterations 67
Cbc0038I Pass  84: suminf.    0.94118 (8) obj. -360.389 iterations 65
Cbc0038I Pass  85: suminf.    0.50000 (2) obj. -360.147 iterations 129
Cbc0038I Pass  86: suminf.    0.51933 (7) obj. -358.862 iterations 103
Cbc0038I Pass  87: suminf.    0.63951 (3) obj. -358.862 iterations 105
Cbc0038I Pass  88: suminf.    0.43734 (5) obj. -358.862 iterations 143
Cbc0038I Pass  89: suminf.    1.68881 (17) obj. -358.862 iterations 137
Cbc0038I Pass  90: suminf.    0.54828 (4) obj. -358.862 iterations 104
Cbc0038I Pass  91: suminf.    0.29842 (19) obj. -358.862 iterations 84
Cbc0038I Pass  92: suminf.    0.50000 (2) obj. -360.147 iterations 132
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 152 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 246 columns, reduced to 93 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -354.518 to -359.303 (0.24 seconds)
Cbc0038I Round again with cutoff of -363.181
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 6
Cbc0038I Pass  92: suminf.    1.89189 (10) obj. -368.998 iterations 0
Cbc0038I Pass  93: suminf.    3.73584 (11) obj. -363.181 iterations 105
Cbc0038I Pass  94: suminf.    1.89189 (10) obj. -368.998 iterations 59
Cbc0038I Pass  95: suminf.    1.89189 (10) obj. -368.998 iterations 77
Cbc0038I Pass  96: suminf.    6.08963 (23) obj. -363.181 iterations 118
Cbc0038I Pass  97: suminf.    3.49456 (11) obj. -363.181 iterations 91
Cbc0038I Pass  98: suminf.    3.49456 (11) obj. -363.181 iterations 109
Cbc0038I Pass  99: suminf.    1.89189 (10) obj. -368.998 iterations 113
Cbc0038I Pass 100: suminf.    3.73584 (11) obj. -363.181 iterations 84
Cbc0038I Pass 101: suminf.    1.89189 (10) obj. -368.998 iterations 48
Cbc0038I Pass 102: suminf.    2.54646 (15) obj. -363.181 iterations 147
Cbc0038I Pass 103: suminf.    2.54646 (15) obj. -363.181 iterations 32
Cbc0038I Pass 104: suminf.    2.54646 (15) obj. -363.181 iterations 6
Cbc0038I Pass 105: suminf.    2.54646 (15) obj. -363.181 iterations 8
Cbc0038I Pass 106: suminf.    1.89189 (10) obj. -368.998 iterations 112
Cbc0038I Pass 107: suminf.    3.73584 (11) obj. -363.181 iterations 85
Cbc0038I Pass 108: suminf.    1.89189 (10) obj. -368.998 iterations 59
Cbc0038I Pass 109: suminf.    7.17737 (17) obj. -363.181 iterations 69
Cbc0038I Pass 110: suminf.    7.17737 (17) obj. -363.181 iterations 93
Cbc0038I Pass 111: suminf.    5.81657 (17) obj. -363.181 iterations 16
Cbc0038I Pass 112: suminf.    0.54054 (10) obj. -367.41 iterations 73
Cbc0038I Pass 113: suminf.    1.92415 (14) obj. -363.181 iterations 75
Cbc0038I Pass 114: suminf.    0.54054 (10) obj. -367.41 iterations 82
Cbc0038I Pass 115: suminf.    0.54054 (10) obj. -367.41 iterations 61
Cbc0038I Pass 116: suminf.    2.66990 (13) obj. -363.181 iterations 121
Cbc0038I Pass 117: suminf.    0.54054 (10) obj. -367.41 iterations 79
Cbc0038I Pass 118: suminf.    2.09667 (20) obj. -363.181 iterations 85
Cbc0038I Pass 119: suminf.    3.51849 (21) obj. -363.181 iterations 92
Cbc0038I Pass 120: suminf.    4.89469 (27) obj. -363.181 iterations 95
Cbc0038I Pass 121: suminf.    4.37506 (18) obj. -363.181 iterations 76
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 157 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 246 columns, reduced to 89 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -359.303 to -362.315 (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -362.315 - took 0.19 seconds
Cbc0012I Integer solution of -362.31506 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0031I 6 added rows had average density of 17.333333
Cbc0013I At root node, 6 cuts changed objective from -368.99789 to -364.48521 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 15 column cuts (15 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 74 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -362.31506 best solution, best possible -364.24011 (0.33 seconds)
Cbc0001I Search completed - best objective -362.31506382522, took 279 iterations and 2 nodes (0.35 seconds)
Cbc0032I Strong branching done 76 times (984 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Cuts at root node changed objective from -368.998 to -364.24
Probing was tried 12 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 12 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 12 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 4 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                362.31506383
Enumerated nodes:               2
Total iterations:               279
Time (CPU seconds):             0.37
Time (Wallclock seconds):       0.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.52

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/906883dbef2742ccaab05ef6ffa27463-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/906883dbef2742ccaab05ef6ffa27463-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1531171 COLUMNS
At line 6129888 RHS
At line 7661055 BOUNDS
At line 7665533 ENDATA
Problem MODEL has 1531166 rows, 4477 columns and 1549151 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 460.737 - 1.43 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 292 strengthened rows, 268 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 224 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6709 rows, 1525 columns (1525 integer (1525 of which binary)) and 18696 elements
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.3
Cbc0038I Solution found of -431.705
Cbc0038I Before mini branch and bound, 1507 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6709 rows 1525 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (3.64 seconds)
Cbc0038I Round again with cutoff of -434.608
Cbc0038I Reduced cost fixing fixed 87 variables on major pass 2
Cbc0038I Pass   1: (3.70 seconds) suminf.    0.29131 (1) obj. -434.608 iterations 1559
Cbc0038I Solution found of -441.671
Cbc0038I Before mini branch and bound, 1506 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6709 rows 1525 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (3.77 seconds)
Cbc0038I Round again with cutoff of -445.484
Cbc0038I Reduced cost fixing fixed 157 variables on major pass 3
Cbc0038I Pass   2: (3.78 seconds) suminf.    0.49880 (4) obj. -445.484 iterations 31
Cbc0038I Pass   3: (3.80 seconds) suminf.    0.49880 (4) obj. -445.484 iterations 764
Cbc0038I Pass   4: (3.82 seconds) suminf.    0.66667 (3) obj. -454.651 iterations 613
Cbc0038I Pass   5: (3.83 seconds) suminf.    1.14286 (4) obj. -451.783 iterations 231
Cbc0038I Pass   6: (3.84 seconds) suminf.    0.66667 (3) obj. -454.651 iterations 213
Cbc0038I Pass   7: (3.85 seconds) suminf.    3.59864 (9) obj. -445.484 iterations 258
Cbc0038I Pass   8: (3.87 seconds) suminf.    2.02158 (5) obj. -445.484 iterations 548
Cbc0038I Pass   9: (3.88 seconds) suminf.    0.66667 (3) obj. -454.651 iterations 281
Cbc0038I Pass  10: (3.90 seconds) suminf.    2.20866 (22) obj. -445.484 iterations 423
Cbc0038I Pass  11: (3.92 seconds) suminf.    2.07525 (5) obj. -445.484 iterations 492
Cbc0038I Pass  12: (3.93 seconds) suminf.    1.00000 (3) obj. -451.373 iterations 269
Cbc0038I Pass  13: (3.93 seconds) suminf.    1.00000 (3) obj. -451.373 iterations 3
Cbc0038I Pass  14: (3.94 seconds) suminf.    1.17904 (4) obj. -445.484 iterations 275
Cbc0038I Pass  15: (3.96 seconds) suminf.    1.17904 (4) obj. -445.484 iterations 679
Cbc0038I Pass  16: (3.98 seconds) suminf.    5.39715 (13) obj. -445.484 iterations 669
Cbc0038I Pass  17: (3.99 seconds) suminf.    1.71429 (4) obj. -454.427 iterations 271
Cbc0038I Pass  18: (4.00 seconds) suminf.    1.71429 (4) obj. -454.427 iterations 2
Cbc0038I Pass  19: (4.01 seconds) suminf.    0.76673 (2) obj. -445.484 iterations 253
Cbc0038I Pass  20: (4.02 seconds) suminf.    0.88889 (2) obj. -447.062 iterations 169
Cbc0038I Pass  21: (4.04 seconds) suminf.    2.19477 (13) obj. -445.484 iterations 515
Cbc0038I Pass  22: (4.05 seconds) suminf.    2.03934 (7) obj. -445.484 iterations 511
Cbc0038I Pass  23: (4.06 seconds) suminf.    0.91185 (6) obj. -445.484 iterations 396
Cbc0038I Pass  24: (4.08 seconds) suminf.    1.71429 (4) obj. -449.715 iterations 330
Cbc0038I Pass  25: (4.08 seconds) suminf.    2.81250 (15) obj. -453.934 iterations 204
Cbc0038I Pass  26: (4.09 seconds) suminf.    1.71429 (4) obj. -454.427 iterations 194
Cbc0038I Pass  27: (4.11 seconds) suminf.    0.76673 (2) obj. -445.484 iterations 258
Cbc0038I Pass  28: (4.11 seconds) suminf.    0.88889 (2) obj. -447.062 iterations 178
Cbc0038I Pass  29: (4.13 seconds) suminf.    2.18370 (9) obj. -445.484 iterations 277
Cbc0038I Pass  30: (4.13 seconds) suminf.    0.88889 (2) obj. -447.062 iterations 229
Cbc0038I Pass  31: (4.16 seconds) suminf.    0.91639 (6) obj. -445.484 iterations 610
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1429 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6709 rows 1525 columns, reduced to 44 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -441.671 to -456.292 (4.26 seconds)
Cbc0038I Round again with cutoff of -457.625
Cbc0038I Reduced cost fixing fixed 300 variables on major pass 4
Cbc0038I Pass  31: (4.31 seconds) suminf.    4.50137 (20) obj. -457.625 iterations 1536
Cbc0038I Pass  32: (4.33 seconds) suminf.    0.73684 (14) obj. -459.105 iterations 514
Cbc0038I Pass  33: (4.34 seconds) suminf.    0.73684 (14) obj. -459.105 iterations 11
Cbc0038I Pass  34: (4.35 seconds) suminf.    4.50137 (20) obj. -457.625 iterations 625
Cbc0038I Pass  35: (4.36 seconds) suminf.    4.93932 (17) obj. -457.625 iterations 689
Cbc0038I Pass  36: (4.38 seconds) suminf.    4.51971 (13) obj. -457.625 iterations 630
Cbc0038I Pass  37: (4.41 seconds) suminf.    2.54545 (7) obj. -460.104 iterations 998
Cbc0038I Pass  38: (4.42 seconds) suminf.    2.14994 (13) obj. -457.625 iterations 377
Cbc0038I Pass  39: (4.43 seconds) suminf.    2.54545 (7) obj. -460.104 iterations 261
Cbc0038I Pass  40: (4.44 seconds) suminf.    2.54545 (7) obj. -460.104 iterations 237
Cbc0038I Pass  41: (4.45 seconds) suminf.    2.54545 (7) obj. -460.104 iterations 325
Cbc0038I Pass  42: (4.46 seconds) suminf.    2.57222 (8) obj. -457.625 iterations 594
Cbc0038I Pass  43: (4.47 seconds) suminf.    2.57222 (8) obj. -457.625 iterations 317
Cbc0038I Pass  44: (4.48 seconds) suminf.    3.17026 (14) obj. -457.625 iterations 128
Cbc0038I Pass  45: (4.52 seconds) suminf.    3.01343 (19) obj. -457.625 iterations 1208
Cbc0038I Pass  46: (4.53 seconds) suminf.    2.91575 (13) obj. -457.625 iterations 459
Cbc0038I Pass  47: (4.54 seconds) suminf.    2.91575 (13) obj. -457.625 iterations 18
Cbc0038I Pass  48: (4.55 seconds) suminf.    3.01343 (19) obj. -457.625 iterations 112
Cbc0038I Pass  49: (4.58 seconds) suminf.    2.52025 (15) obj. -457.625 iterations 1040
Cbc0038I Pass  50: (4.59 seconds) suminf.    2.52025 (15) obj. -457.625 iterations 370
Cbc0038I Pass  51: (4.60 seconds) suminf.    2.55042 (25) obj. -457.625 iterations 466
Cbc0038I Pass  52: (4.62 seconds) suminf.    2.52025 (15) obj. -457.625 iterations 535
Cbc0038I Pass  53: (4.63 seconds) suminf.    2.65587 (16) obj. -457.625 iterations 684
Cbc0038I Pass  54: (4.65 seconds) suminf.    2.16538 (12) obj. -457.625 iterations 630
Cbc0038I Pass  55: (4.68 seconds) suminf.    2.91575 (13) obj. -457.625 iterations 726
Cbc0038I Pass  56: (4.69 seconds) suminf.    2.91575 (13) obj. -457.625 iterations 362
Cbc0038I Pass  57: (4.70 seconds) suminf.    2.91575 (13) obj. -457.625 iterations 37
Cbc0038I Pass  58: (4.73 seconds) suminf.    2.54545 (7) obj. -460.104 iterations 1040
Cbc0038I Pass  59: (4.74 seconds) suminf.    2.57222 (8) obj. -457.625 iterations 410
Cbc0038I Pass  60: (4.75 seconds) suminf.    2.57222 (8) obj. -457.625 iterations 565
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1435 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6709 rows 1525 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (4.81 seconds)
Cbc0038I After 4.81 seconds - Feasibility pump exiting with objective of -456.292 - took 1.18 seconds
Cbc0012I Integer solution of -456.29157 found by feasibility pump after 0 iterations and 0 nodes (4.81 seconds)
Cbc0038I Full problem 6709 rows 1525 columns, reduced to 1 rows 3 columns
Cbc0031I 4 added rows had average density of 35.5
Cbc0013I At root node, 4 cuts changed objective from -460.73657 to -460.17908 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 7 column cuts (7 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 55.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -456.29157 best solution, best possible -460.17908 (5.01 seconds)
Cbc0012I Integer solution of -456.80108 found by DiveCoefficient after 43 iterations and 1 nodes (5.05 seconds)
Cbc0012I Integer solution of -458.37984 found by DiveCoefficient after 737 iterations and 16 nodes (5.78 seconds)
Cbc0012I Integer solution of -459.60461 found by rounding after 776 iterations and 19 nodes (5.81 seconds)
Cbc0001I Search completed - best objective -459.604609173232, took 817 iterations and 20 nodes (5.81 seconds)
Cbc0032I Strong branching done 214 times (1550 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 394 variables fixed on reduced cost
Cuts at root node changed objective from -460.737 to -460.179
Probing was tried 34 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 34 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 5 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)

Result - Optimal solution found

Objective value:                459.60460917
Enumerated nodes:               20
Total iterations:               817
Time (CPU seconds):             5.72
Time (Wallclock seconds):       7.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.03   (Wallclock seconds):       9.70

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f22b4fbe4c6c439b8a6970280f17e24e-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f22b4fbe4c6c439b8a6970280f17e24e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1769796 COLUMNS
At line 7084365 RHS
At line 8854157 BOUNDS
At line 8858428 ENDATA
Problem MODEL has 1769791 rows, 4270 columns and 1790718 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 564.213 - 1.78 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 677 strengthened rows, 258 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 554 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 232 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 8339 rows, 1619 columns (1619 integer (1619 of which binary)) and 24576 elements
Cbc0038I Initial state - 112 integers unsatisfied sum - 44.5
Cbc0038I Pass   1: (4.73 seconds) suminf.    5.83333 (14) obj. -524.776 iterations 1567
Cbc0038I Solution found of -494.424
Cbc0038I Before mini branch and bound, 1498 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8339 rows 1619 columns, reduced to 65 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -494.424 to -530.169 (4.94 seconds)
Cbc0038I Round again with cutoff of -533.574
Cbc0038I Reduced cost fixing fixed 89 variables on major pass 2
Cbc0038I Pass   2: (4.99 seconds) suminf.    6.16667 (21) obj. -533.574 iterations 298
Cbc0038I Pass   3: (5.18 seconds) suminf.    2.99419 (10) obj. -533.574 iterations 1973
Cbc0038I Pass   4: (5.25 seconds) suminf.    0.66667 (8) obj. -547.347 iterations 705
Cbc0038I Pass   5: (5.41 seconds) suminf.    1.62658 (10) obj. -533.574 iterations 1527
Cbc0038I Pass   6: (5.52 seconds) suminf.    1.62658 (10) obj. -533.574 iterations 1159
Cbc0038I Pass   7: (5.61 seconds) suminf.    2.82353 (8) obj. -554.382 iterations 1096
Cbc0038I Pass   8: (5.68 seconds) suminf.    4.61538 (10) obj. -552.004 iterations 541
Cbc0038I Pass   9: (5.73 seconds) suminf.    2.82353 (8) obj. -554.382 iterations 443
Cbc0038I Pass  10: (5.78 seconds) suminf.    9.58015 (24) obj. -533.574 iterations 462
Cbc0038I Pass  11: (5.91 seconds) suminf.    1.00440 (21) obj. -533.574 iterations 1232
Cbc0038I Pass  12: (6.04 seconds) suminf.    0.39340 (2) obj. -533.574 iterations 1445
Cbc0038I Pass  13: (6.11 seconds) suminf.    0.40000 (2) obj. -533.646 iterations 578
Cbc0038I Pass  14: (6.24 seconds) suminf.    0.78821 (5) obj. -533.574 iterations 1064
Cbc0038I Pass  15: (6.32 seconds) suminf.    0.40000 (2) obj. -534.237 iterations 691
Cbc0038I Pass  16: (6.58 seconds) suminf.    0.92177 (4) obj. -533.574 iterations 2399
Cbc0038I Pass  17: (6.68 seconds) suminf.    0.40000 (2) obj. -538.861 iterations 881
Cbc0038I Pass  18: (6.69 seconds) suminf.    0.40000 (2) obj. -538.861 iterations 59
Cbc0038I Pass  19: (6.83 seconds) suminf.    1.44297 (14) obj. -533.574 iterations 1041
Cbc0038I Pass  20: (6.97 seconds) suminf.    1.20441 (5) obj. -533.574 iterations 1470
Cbc0038I Pass  21: (7.12 seconds) suminf.    1.36005 (7) obj. -533.574 iterations 1557
Cbc0038I Rounding solution of -530.496 is better than previous of -530.169

Cbc0038I After 7.12 seconds - Feasibility pump exiting with objective of -530.496 - took 2.35 seconds
Cbc0012I Integer solution of -530.49578 found by feasibility pump after 0 iterations and 0 nodes (7.12 seconds)
Cbc0038I Full problem 8339 rows 1619 columns, reduced to 67 rows 35 columns
Cbc0012I Integer solution of -532.58074 found by DiveCoefficient after 104 iterations and 0 nodes (7.47 seconds)
Cbc0031I 4 added rows had average density of 135.25
Cbc0013I At root node, 4 cuts changed objective from -564.21288 to -562.36779 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 44 column cuts (44 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 143.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 128.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -532.58074 best solution, best possible -562.36779 (7.61 seconds)
Cbc0012I Integer solution of -544.88451 found by DiveCoefficient after 273 iterations and 6 nodes (8.74 seconds)
Cbc0004I Integer solution of -551.11533 found after 841 iterations and 14 nodes (9.51 seconds)
Cbc0004I Integer solution of -554.1433 found after 1366 iterations and 26 nodes (9.79 seconds)
Cbc0012I Integer solution of -557.57525 found by DiveCoefficient after 1511 iterations and 29 nodes (9.86 seconds)
Cbc0001I Search completed - best objective -557.5752460057898, took 2087 iterations and 40 nodes (9.98 seconds)
Cbc0032I Strong branching done 502 times (12996 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 16, 1043 variables fixed on reduced cost
Cuts at root node changed objective from -564.213 to -562.368
Probing was tried 16 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 76 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)

Result - Optimal solution found

Objective value:                557.57524601
Enumerated nodes:               40
Total iterations:               2087
Time (CPU seconds):             9.72
Time (Wallclock seconds):       12.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       12.47   (Wallclock seconds):       15.41

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/07f9eca625774e1b9855cf7545c59af6-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/07f9eca625774e1b9855cf7545c59af6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 583956 COLUMNS
At line 2339041 RHS
At line 2922993 BOUNDS
At line 2925772 ENDATA
Problem MODEL has 583951 rows, 2778 columns and 594376 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 478.025 - 0.82 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 220 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0004I processed model has 3679 rows, 885 columns (885 integer (885 of which binary)) and 10038 elements
Cbc0038I Initial state - 24 integers unsatisfied sum - 5.14286
Cbc0038I Solution found of -466.353
Cbc0038I Before mini branch and bound, 861 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3679 rows 885 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.75 seconds)
Cbc0038I Round again with cutoff of -467.52
Cbc0038I Reduced cost fixing fixed 87 variables on major pass 2
Cbc0038I Pass   1: (1.78 seconds) suminf.    0.07027 (1) obj. -467.52 iterations 795
Cbc0038I Pass   2: (1.79 seconds) suminf.    0.33333 (1) obj. -471.89 iterations 125
Cbc0038I Pass   3: (1.79 seconds) suminf.    3.54122 (20) obj. -467.52 iterations 275
Cbc0038I Pass   4: (1.82 seconds) suminf.    2.32108 (9) obj. -467.52 iterations 689
Cbc0038I Pass   5: (1.82 seconds) suminf.    2.52632 (8) obj. -468.819 iterations 160
Cbc0038I Pass   6: (1.84 seconds) suminf.    4.00582 (20) obj. -467.52 iterations 605
Cbc0038I Pass   7: (1.84 seconds) suminf.    2.64998 (10) obj. -467.52 iterations 31
Cbc0038I Pass   8: (1.85 seconds) suminf.    3.71158 (18) obj. -467.52 iterations 39
Cbc0038I Pass   9: (1.85 seconds) suminf.    2.64998 (10) obj. -467.52 iterations 33
Cbc0038I Pass  10: (1.86 seconds) suminf.    3.09442 (15) obj. -467.52 iterations 424
Cbc0038I Pass  11: (1.87 seconds) suminf.    2.45476 (9) obj. -467.52 iterations 246
Cbc0038I Pass  12: (1.89 seconds) suminf.    3.58607 (14) obj. -467.52 iterations 423
Cbc0038I Pass  13: (1.90 seconds) suminf.    3.06839 (10) obj. -467.52 iterations 181
Cbc0038I Pass  14: (1.91 seconds) suminf.    1.58358 (16) obj. -467.52 iterations 224
Cbc0038I Pass  15: (1.92 seconds) suminf.    1.20000 (6) obj. -471.574 iterations 380
Cbc0038I Pass  16: (1.92 seconds) suminf.    1.20000 (6) obj. -471.574 iterations 16
Cbc0038I Pass  17: (1.94 seconds) suminf.    3.21266 (15) obj. -467.52 iterations 316
Cbc0038I Pass  18: (1.95 seconds) suminf.    0.84615 (11) obj. -474.703 iterations 248
Cbc0038I Pass  19: (1.96 seconds) suminf.    0.07027 (1) obj. -467.52 iterations 209
Cbc0038I Pass  20: (1.96 seconds) suminf.    0.33333 (1) obj. -471.89 iterations 107
Cbc0038I Pass  21: (1.97 seconds) suminf.    0.22222 (1) obj. -473.171 iterations 259
Cbc0038I Solution found of -469.48
Cbc0038I Rounding solution of -472.997 is better than previous of -469.48

Cbc0038I Before mini branch and bound, 810 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3679 rows 885 columns, reduced to 18 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (2.01 seconds)
Cbc0038I Round again with cutoff of -474.003
Cbc0038I Reduced cost fixing fixed 151 variables on major pass 3
Cbc0038I Pass  22: (2.03 seconds) suminf.    0.72100 (15) obj. -474.003 iterations 181
Cbc0038I Pass  23: (2.04 seconds) suminf.    0.84615 (11) obj. -474.703 iterations 183
Cbc0038I Pass  24: (2.05 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 387
Cbc0038I Pass  25: (2.06 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 241
Cbc0038I Pass  26: (2.07 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 158
Cbc0038I Pass  27: (2.07 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 139
Cbc0038I Pass  28: (2.08 seconds) suminf.    1.27540 (11) obj. -474.003 iterations 203
Cbc0038I Pass  29: (2.10 seconds) suminf.    1.73076 (21) obj. -474.003 iterations 387
Cbc0038I Pass  30: (2.11 seconds) suminf.    3.04837 (8) obj. -474.003 iterations 341
Cbc0038I Pass  31: (2.12 seconds) suminf.    2.00000 (6) obj. -474.678 iterations 453
Cbc0038I Pass  32: (2.14 seconds) suminf.    1.47924 (13) obj. -474.003 iterations 585
Cbc0038I Pass  33: (2.15 seconds) suminf.    0.39954 (4) obj. -474.003 iterations 142
Cbc0038I Pass  34: (2.16 seconds) suminf.    0.42105 (4) obj. -474.246 iterations 103
Cbc0038I Pass  35: (2.18 seconds) suminf.    1.77675 (8) obj. -474.003 iterations 429
Cbc0038I Pass  36: (2.19 seconds) suminf.    0.72100 (15) obj. -474.003 iterations 314
Cbc0038I Pass  37: (2.20 seconds) suminf.    0.84615 (11) obj. -474.703 iterations 144
Cbc0038I Pass  38: (2.21 seconds) suminf.    1.34290 (11) obj. -474.003 iterations 330
Cbc0038I Pass  39: (2.23 seconds) suminf.    1.86642 (11) obj. -474.003 iterations 574
Cbc0038I Pass  40: (2.24 seconds) suminf.    2.66675 (13) obj. -474.003 iterations 331
Cbc0038I Pass  41: (2.25 seconds) suminf.    2.00000 (6) obj. -474.678 iterations 188
Cbc0038I Pass  42: (2.27 seconds) suminf.    1.47924 (13) obj. -474.003 iterations 562
Cbc0038I Pass  43: (2.27 seconds) suminf.    0.39954 (4) obj. -474.003 iterations 133
Cbc0038I Pass  44: (2.27 seconds) suminf.    0.42105 (4) obj. -474.246 iterations 97
Cbc0038I Pass  45: (2.28 seconds) suminf.    3.37116 (14) obj. -474.003 iterations 175
Cbc0038I Pass  46: (2.29 seconds) suminf.    1.00000 (2) obj. -475.435 iterations 244
Cbc0038I Pass  47: (2.29 seconds) suminf.    1.00000 (2) obj. -475.435 iterations 129
Cbc0038I Pass  48: (2.31 seconds) suminf.    1.00000 (4) obj. -474.003 iterations 532
Cbc0038I Pass  49: (2.32 seconds) suminf.    1.00000 (2) obj. -475.435 iterations 523
Cbc0038I Pass  50: (2.32 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 161
Cbc0038I Pass  51: (2.33 seconds) suminf.    0.50000 (2) obj. -475.285 iterations 141
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 775 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3679 rows 885 columns, reduced to 43 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (2.36 seconds)
Cbc0038I After 2.36 seconds - Feasibility pump exiting with objective of -472.997 - took 0.59 seconds
Cbc0012I Integer solution of -472.99711 found by feasibility pump after 0 iterations and 0 nodes (2.36 seconds)
Cbc0012I Integer solution of -476.57427 found by DiveCoefficient after 62 iterations and 0 nodes (2.44 seconds)
Cbc0031I 3 added rows had average density of 59.666667
Cbc0013I At root node, 3 cuts changed objective from -478.02538 to -476.57427 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 13 column cuts (13 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 23 row cuts average 68.7 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 229.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -476.574272544074, took 62 iterations and 0 nodes (2.44 seconds)
Cbc0035I Maximum depth 0, 144 variables fixed on reduced cost
Cuts at root node changed objective from -478.025 to -476.574
Probing was tried 3 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                476.57427254
Enumerated nodes:               0
Total iterations:               62
Time (CPU seconds):             2.30
Time (Wallclock seconds):       2.99

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.27   (Wallclock seconds):       4.17

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b4e95f0f071a4d34a3f12521923c6477-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/b4e95f0f071a4d34a3f12521923c6477-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1007322 COLUMNS
At line 4033349 RHS
At line 5040667 BOUNDS
At line 5044100 ENDATA
Problem MODEL has 1007317 rows, 3432 columns and 1020879 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 508.102 - 1.07 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 107 strengthened rows, 202 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 87 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 5050 rows, 1191 columns (1191 integer (1191 of which binary)) and 13926 elements
Cbc0038I Initial state - 38 integers unsatisfied sum - 6
Cbc0038I Solution found of -495.497
Cbc0038I Before mini branch and bound, 1153 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5050 rows 1191 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.40 seconds)
Cbc0038I Round again with cutoff of -496.757
Cbc0038I Reduced cost fixing fixed 129 variables on major pass 2
Cbc0038I Pass   1: (2.43 seconds) suminf.    0.08027 (3) obj. -496.757 iterations 921
Cbc0038I Pass   2: (2.44 seconds) suminf.    0.56250 (3) obj. -504.329 iterations 167
Cbc0038I Pass   3: (2.45 seconds) suminf.    6.57403 (16) obj. -496.757 iterations 350
Cbc0038I Pass   4: (2.46 seconds) suminf.    2.43016 (15) obj. -496.757 iterations 259
Cbc0038I Pass   5: (2.48 seconds) suminf.    2.43016 (15) obj. -496.757 iterations 596
Cbc0038I Pass   6: (2.49 seconds) suminf.    3.24111 (13) obj. -496.757 iterations 47
Cbc0038I Pass   7: (2.49 seconds) suminf.    2.43016 (15) obj. -496.757 iterations 37
Cbc0038I Pass   8: (2.52 seconds) suminf.    0.08027 (3) obj. -496.757 iterations 921
Cbc0038I Pass   9: (2.52 seconds) suminf.    0.56250 (3) obj. -504.329 iterations 132
Cbc0038I Pass  10: (2.53 seconds) suminf.    3.20338 (8) obj. -496.757 iterations 333
Cbc0038I Pass  11: (2.55 seconds) suminf.    2.08476 (10) obj. -496.757 iterations 468
Cbc0038I Pass  12: (2.55 seconds) suminf.    2.08476 (10) obj. -496.757 iterations 0
Cbc0038I Pass  13: (2.56 seconds) suminf.    2.66667 (6) obj. -506.849 iterations 482
Cbc0038I Pass  14: (2.56 seconds) suminf.    2.66667 (6) obj. -506.849 iterations 3
Cbc0038I Pass  15: (2.57 seconds) suminf.    0.91334 (4) obj. -496.757 iterations 254
Cbc0038I Pass  16: (2.58 seconds) suminf.    1.25000 (4) obj. -501.082 iterations 161
Cbc0038I Pass  17: (2.60 seconds) suminf.    1.43588 (14) obj. -496.757 iterations 561
Cbc0038I Pass  18: (2.62 seconds) suminf.    0.70000 (7) obj. -497.598 iterations 498
Cbc0038I Pass  19: (2.64 seconds) suminf.    4.60985 (13) obj. -496.757 iterations 863
Cbc0038I Pass  20: (2.65 seconds) suminf.    2.78886 (11) obj. -496.757 iterations 112
Cbc0038I Pass  21: (2.66 seconds) suminf.    0.73459 (7) obj. -496.757 iterations 364
Cbc0038I Pass  22: (2.67 seconds) suminf.    0.71457 (12) obj. -496.757 iterations 428
Cbc0038I Pass  23: (2.68 seconds) suminf.    2.66667 (6) obj. -506.849 iterations 754
Cbc0038I Pass  24: (2.70 seconds) suminf.    0.91334 (4) obj. -496.757 iterations 282
Cbc0038I Pass  25: (2.70 seconds) suminf.    1.25000 (4) obj. -501.082 iterations 177
Cbc0038I Pass  26: (2.72 seconds) suminf.    6.37024 (16) obj. -496.757 iterations 466
Cbc0038I Pass  27: (2.73 seconds) suminf.    2.91341 (9) obj. -496.757 iterations 571
Cbc0038I Pass  28: (2.75 seconds) suminf.    1.33333 (6) obj. -501.082 iterations 503
Cbc0038I Pass  29: (2.75 seconds) suminf.    1.20000 (3) obj. -504.086 iterations 32
Cbc0038I Pass  30: (2.76 seconds) suminf.    0.08027 (3) obj. -496.757 iterations 274
Cbc0038I Rounding solution of -502.141 is better than previous of -495.497

Cbc0038I Before mini branch and bound, 1083 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5050 rows 1191 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -502.141 to -504.324 (2.83 seconds)
Cbc0038I Round again with cutoff of -505.08
Cbc0038I Reduced cost fixing fixed 236 variables on major pass 3
Cbc0038I Pass  30: (2.86 seconds) suminf.    1.10863 (13) obj. -505.08 iterations 373
Cbc0038I Pass  31: (2.87 seconds) suminf.    1.14706 (13) obj. -505.412 iterations 235
Cbc0038I Pass  32: (2.88 seconds) suminf.    0.51357 (7) obj. -505.08 iterations 419
Cbc0038I Pass  33: (2.89 seconds) suminf.    0.34002 (13) obj. -505.08 iterations 298
Cbc0038I Pass  34: (2.90 seconds) suminf.    0.38235 (13) obj. -505.446 iterations 203
Cbc0038I Pass  35: (2.91 seconds) suminf.    0.61623 (7) obj. -505.08 iterations 327
Cbc0038I Pass  36: (2.92 seconds) suminf.    0.34002 (13) obj. -505.08 iterations 329
Cbc0038I Pass  37: (2.93 seconds) suminf.    0.38235 (13) obj. -505.446 iterations 181
Cbc0038I Pass  38: (2.94 seconds) suminf.    0.58711 (7) obj. -505.08 iterations 341
Cbc0038I Pass  39: (2.95 seconds) suminf.    0.51881 (9) obj. -505.08 iterations 286
Cbc0038I Pass  40: (2.96 seconds) suminf.    0.34002 (13) obj. -505.08 iterations 375
Cbc0038I Pass  41: (2.97 seconds) suminf.    0.38235 (13) obj. -505.446 iterations 186
Cbc0038I Pass  42: (2.98 seconds) suminf.    0.58711 (7) obj. -505.08 iterations 331
Cbc0038I Pass  43: (2.99 seconds) suminf.    1.42857 (5) obj. -506.111 iterations 483
Cbc0038I Pass  44: (3.00 seconds) suminf.    1.33333 (6) obj. -505.613 iterations 216
Cbc0038I Pass  45: (3.02 seconds) suminf.    3.21702 (9) obj. -505.08 iterations 879
Cbc0038I Pass  46: (3.03 seconds) suminf.    2.22368 (10) obj. -505.08 iterations 129
Cbc0038I Pass  47: (3.04 seconds) suminf.    1.51412 (7) obj. -505.08 iterations 504
Cbc0038I Pass  48: (3.05 seconds) suminf.    3.21427 (12) obj. -505.08 iterations 364
Cbc0038I Pass  49: (3.06 seconds) suminf.    1.65157 (17) obj. -505.08 iterations 210
Cbc0038I Pass  50: (3.07 seconds) suminf.    1.14286 (4) obj. -505.501 iterations 461
Cbc0038I Pass  51: (3.08 seconds) suminf.    1.54065 (6) obj. -505.08 iterations 186
Cbc0038I Pass  52: (3.08 seconds) suminf.    1.14286 (4) obj. -505.501 iterations 184
Cbc0038I Pass  53: (3.10 seconds) suminf.    1.65157 (17) obj. -505.08 iterations 678
Cbc0038I Pass  54: (3.11 seconds) suminf.    2.97725 (18) obj. -505.08 iterations 250
Cbc0038I Pass  55: (3.11 seconds) suminf.    1.65157 (17) obj. -505.08 iterations 163
Cbc0038I Pass  56: (3.13 seconds) suminf.    1.14286 (4) obj. -505.501 iterations 463
Cbc0038I Pass  57: (3.13 seconds) suminf.    1.54065 (6) obj. -505.08 iterations 210
Cbc0038I Pass  58: (3.16 seconds) suminf.    3.50648 (12) obj. -505.08 iterations 912
Cbc0038I Pass  59: (3.18 seconds) suminf.    1.14286 (4) obj. -505.501 iterations 840
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1079 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5050 rows 1191 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (3.21 seconds)
Cbc0038I After 3.22 seconds - Feasibility pump exiting with objective of -504.324 - took 0.83 seconds
Cbc0012I Integer solution of -504.32416 found by feasibility pump after 0 iterations and 0 nodes (3.22 seconds)
Cbc0038I Full problem 5050 rows 1191 columns, reduced to 0 rows 0 columns
Cbc0031I 2 added rows had average density of 68.5
Cbc0013I At root node, 2 cuts changed objective from -508.1016 to -506.36543 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 88 row cuts average 67.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 323.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -504.32416 best solution, best possible -506.36543 (3.41 seconds)
Cbc0012I Integer solution of -505.39114 found by DiveCoefficient after 391 iterations and 2 nodes (3.52 seconds)
Cbc0001I Search completed - best objective -505.3911365460011, took 743 iterations and 8 nodes (3.61 seconds)
Cbc0032I Strong branching done 56 times (1425 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 259 variables fixed on reduced cost
Cuts at root node changed objective from -508.102 to -506.365
Probing was tried 13 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Gomory was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 7 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)

Result - Optimal solution found

Objective value:                505.39113655
Enumerated nodes:               8
Total iterations:               743
Time (CPU seconds):             3.70
Time (Wallclock seconds):       4.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.26   (Wallclock seconds):       6.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8b50c43d8d6d457a9b90ae9114ac5441-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8b50c43d8d6d457a9b90ae9114ac5441-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 91050 COLUMNS
At line 365547 RHS
At line 456593 BOUNDS
At line 457798 ENDATA
Problem MODEL has 91045 rows, 1204 columns and 94960 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 374.92 - 0.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 512 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 1060 rows, 296 columns (296 integer (296 of which binary)) and 2847 elements
Cbc0038I Initial state - 69 integers unsatisfied sum - 11.0776
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -334.164 iterations 242
Cbc0038I Solution found of -334.164
Cbc0038I Rounding solution of -340.808 is better than previous of -334.164

Cbc0038I Before mini branch and bound, 225 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1060 rows 296 columns, reduced to 71 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -340.808 to -366.695 (0.15 seconds)
Cbc0038I Round again with cutoff of -367.517
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   2: suminf.    4.75096 (17) obj. -367.517 iterations 164
Cbc0038I Pass   3: suminf.    3.30633 (19) obj. -367.517 iterations 107
Cbc0038I Pass   4: suminf.    5.14286 (12) obj. -370.411 iterations 163
Cbc0038I Pass   5: suminf.    5.79458 (15) obj. -367.517 iterations 168
Cbc0038I Pass   6: suminf.    5.70218 (25) obj. -367.517 iterations 24
Cbc0038I Pass   7: suminf.    3.30633 (19) obj. -367.517 iterations 34
Cbc0038I Pass   8: suminf.    3.33708 (17) obj. -367.517 iterations 24
Cbc0038I Pass   9: suminf.    3.33708 (17) obj. -367.517 iterations 12
Cbc0038I Pass  10: suminf.    3.33708 (17) obj. -367.517 iterations 17
Cbc0038I Pass  11: suminf.    3.30633 (19) obj. -367.517 iterations 150
Cbc0038I Pass  12: suminf.    9.42446 (25) obj. -367.517 iterations 153
Cbc0038I Pass  13: suminf.    4.02211 (21) obj. -367.517 iterations 108
Cbc0038I Pass  14: suminf.    3.30633 (19) obj. -367.517 iterations 42
Cbc0038I Pass  15: suminf.    3.30633 (19) obj. -367.517 iterations 20
Cbc0038I Pass  16: suminf.    3.60231 (17) obj. -367.517 iterations 96
Cbc0038I Pass  17: suminf.    3.33708 (17) obj. -367.517 iterations 93
Cbc0038I Pass  18: suminf.    4.24507 (23) obj. -367.517 iterations 19
Cbc0038I Pass  19: suminf.    4.73849 (13) obj. -367.517 iterations 183
Cbc0038I Pass  20: suminf.    4.68441 (19) obj. -367.517 iterations 137
Cbc0038I Pass  21: suminf.    2.06265 (23) obj. -367.517 iterations 111
Cbc0038I Pass  22: suminf.    0.12583 (5) obj. -367.517 iterations 126
Cbc0038I Pass  23: suminf.    0.19048 (4) obj. -368.227 iterations 61
Cbc0038I Pass  24: suminf.    0.45763 (19) obj. -368.052 iterations 79
Cbc0038I Pass  25: suminf.    2.02838 (15) obj. -367.517 iterations 214
Cbc0038I Pass  26: suminf.    6.49482 (25) obj. -367.517 iterations 45
Cbc0038I Pass  27: suminf.    1.43942 (7) obj. -367.517 iterations 30
Cbc0038I Pass  28: suminf.    0.43750 (7) obj. -368.503 iterations 181
Cbc0038I Pass  29: suminf.    0.45000 (9) obj. -368.6 iterations 154
Cbc0038I Pass  30: suminf.    1.60783 (42) obj. -367.517 iterations 166
Cbc0038I Pass  31: suminf.    1.77394 (25) obj. -367.517 iterations 193
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1060 rows 296 columns, reduced to 255 rows 90 columns
Cbc0038I Mini branch and bound improved solution from -366.695 to -367.322 (0.22 seconds)
Cbc0038I Round again with cutoff of -368.998
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  31: suminf.    4.95146 (17) obj. -368.998 iterations 0
Cbc0038I Pass  32: suminf.    4.57445 (16) obj. -368.998 iterations 70
Cbc0038I Pass  33: suminf.    5.14286 (12) obj. -370.411 iterations 132
Cbc0038I Pass  34: suminf.    4.00927 (13) obj. -368.998 iterations 203
Cbc0038I Pass  35: suminf.    3.99442 (23) obj. -368.998 iterations 173
Cbc0038I Pass  36: suminf.    7.12700 (15) obj. -368.998 iterations 113
Cbc0038I Pass  37: suminf.    6.43984 (28) obj. -368.998 iterations 47
Cbc0038I Pass  38: suminf.    2.89222 (13) obj. -368.998 iterations 25
Cbc0038I Pass  39: suminf.    2.78994 (13) obj. -368.998 iterations 230
Cbc0038I Pass  40: suminf.    2.68966 (13) obj. -370.175 iterations 103
Cbc0038I Pass  41: suminf.    2.89222 (13) obj. -368.998 iterations 203
Cbc0038I Pass  42: suminf.    6.92723 (46) obj. -368.998 iterations 144
Cbc0038I Pass  43: suminf.    0.10455 (1) obj. -368.998 iterations 175
Cbc0038I Pass  44: suminf.    0.13333 (1) obj. -369.459 iterations 49
Cbc0038I Pass  45: suminf.    0.22400 (8) obj. -368.998 iterations 102
Cbc0038I Pass  46: suminf.    0.87500 (7) obj. -372.73 iterations 135
Cbc0038I Pass  47: suminf.    0.66667 (13) obj. -371.113 iterations 131
Cbc0038I Pass  48: suminf.    0.50000 (7) obj. -372.056 iterations 125
Cbc0038I Pass  49: suminf.    1.82441 (10) obj. -368.998 iterations 216
Cbc0038I Pass  50: suminf.    8.92014 (26) obj. -368.998 iterations 172
Cbc0038I Pass  51: suminf.   10.02345 (26) obj. -368.998 iterations 55
Cbc0038I Pass  52: suminf.    6.90077 (29) obj. -368.998 iterations 97
Cbc0038I Pass  53: suminf.    3.36241 (15) obj. -368.998 iterations 74
Cbc0038I Pass  54: suminf.    3.36241 (15) obj. -368.998 iterations 13
Cbc0038I Pass  55: suminf.    0.84615 (11) obj. -370.157 iterations 142
Cbc0038I Pass  56: suminf.    0.84615 (11) obj. -370.157 iterations 11
Cbc0038I Pass  57: suminf.    1.81887 (15) obj. -368.998 iterations 164
Cbc0038I Pass  58: suminf.    6.78443 (17) obj. -368.998 iterations 95
Cbc0038I Pass  59: suminf.    2.24138 (13) obj. -373.095 iterations 111
Cbc0038I Pass  60: suminf.    4.27204 (17) obj. -368.998 iterations 149
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1060 rows 296 columns, reduced to 140 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -367.322 - took 0.17 seconds
Cbc0012I Integer solution of -367.32248 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 1060 rows 296 columns, reduced to 68 rows 27 columns
Cbc0031I 8 added rows had average density of 41.5
Cbc0013I At root node, 8 cuts changed objective from -374.92028 to -371.79408 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 189 row cuts average 47.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 12 row cuts average 65.4 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -367.32248 best solution, best possible -371.75759 (0.53 seconds)
Cbc0012I Integer solution of -368.06801 found by DiveCoefficient after 645 iterations and 7 nodes (0.61 seconds)
Cbc0001I Search completed - best objective -368.068013276367, took 822 iterations and 10 nodes (0.63 seconds)
Cbc0032I Strong branching done 240 times (4430 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 58 variables fixed on reduced cost
Cuts at root node changed objective from -374.92 to -371.758
Probing was tried 27 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 9 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 27 times and created 338 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
ZeroHalf was tried 9 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
ImplicationCuts was tried 18 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                368.06801328
Enumerated nodes:               10
Total iterations:               822
Time (CPU seconds):             0.62
Time (Wallclock seconds):       0.69

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.77   (Wallclock seconds):       0.98

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6a410890c17647429a37bbb2ee878fe7-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/6a410890c17647429a37bbb2ee878fe7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 509571 COLUMNS
At line 2041312 RHS
At line 2550879 BOUNDS
At line 2553505 ENDATA
Problem MODEL has 509566 rows, 2625 columns and 519295 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 434.268 - 0.66 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 105 strengthened rows, 202 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0004I processed model has 3400 rows, 825 columns (825 integer (825 of which binary)) and 9346 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 6.32827e-15
Cbc0038I Solution found of -434.268
Cbc0038I Before mini branch and bound, 825 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.17 seconds)
Cbc0038I After 1.17 seconds - Feasibility pump exiting with objective of -434.268 - took 0.01 seconds
Cbc0012I Integer solution of -434.26759 found by feasibility pump after 0 iterations and 0 nodes (1.17 seconds)
Cbc0001I Search completed - best objective -434.2675925597779, took 0 iterations and 0 nodes (1.17 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -434.268 to -434.268
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                434.26759256
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.30
Time (Wallclock seconds):       1.51

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.34

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd4156627f1a4f1985690e50904b6e9a-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/cd4156627f1a4f1985690e50904b6e9a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 664187 COLUMNS
At line 2660224 RHS
At line 3324407 BOUNDS
At line 3327425 ENDATA
Problem MODEL has 664182 rows, 3017 columns and 675361 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 417.587 - 0.79 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 208 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 3955 rows, 951 columns (951 integer (951 of which binary)) and 10786 elements
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.31006e-14
Cbc0038I Solution found of -417.587
Cbc0038I Before mini branch and bound, 951 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.61 seconds)
Cbc0038I After 1.61 seconds - Feasibility pump exiting with objective of -417.587 - took 0.01 seconds
Cbc0012I Integer solution of -417.58745 found by feasibility pump after 0 iterations and 0 nodes (1.61 seconds)
Cbc0001I Search completed - best objective -417.5874463562191, took 0 iterations and 0 nodes (1.61 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -417.587 to -417.587
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                417.58744636
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.67
Time (Wallclock seconds):       2.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.68   (Wallclock seconds):       3.25

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f86092c8d6df4a82891f2eb7550390d3-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/f86092c8d6df4a82891f2eb7550390d3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1020686 COLUMNS
At line 4086853 RHS
At line 5107535 BOUNDS
At line 5111018 ENDATA
Problem MODEL has 1020681 rows, 3482 columns and 1035264 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 423.72 - 1.10 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 122 strengthened rows, 292 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 120 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 5504 rows, 1227 columns (1227 integer (1227 of which binary)) and 15288 elements
Cbc0038I Initial state - 47 integers unsatisfied sum - 20.3333
Cbc0038I Pass   1: (2.47 seconds) suminf.    0.00000 (0) obj. -396.425 iterations 1062
Cbc0038I Solution found of -396.425
Cbc0038I Rounding solution of -407.543 is better than previous of -396.425

Cbc0038I Before mini branch and bound, 1178 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5504 rows 1227 columns, reduced to 16 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (2.58 seconds)
Cbc0038I Round again with cutoff of -409.161
Cbc0038I Reduced cost fixing fixed 89 variables on major pass 2
Cbc0038I Pass   2: (2.61 seconds) suminf.    1.87502 (6) obj. -409.161 iterations 164
Cbc0038I Pass   3: (2.62 seconds) suminf.    0.54484 (2) obj. -409.161 iterations 396
Cbc0038I Solution found of -413.929
Cbc0038I Before mini branch and bound, 1176 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5504 rows 1227 columns, reduced to 16 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (2.66 seconds)
Cbc0038I Round again with cutoff of -415.887
Cbc0038I Reduced cost fixing fixed 162 variables on major pass 3
Cbc0038I Pass   4: (2.69 seconds) suminf.    3.98695 (30) obj. -415.887 iterations 237
Cbc0038I Pass   5: (2.70 seconds) suminf.    2.87941 (9) obj. -415.887 iterations 818
Cbc0038I Pass   6: (2.73 seconds) suminf.    0.27224 (16) obj. -415.887 iterations 979
Cbc0038I Pass   7: (2.74 seconds) suminf.    0.27224 (16) obj. -415.887 iterations 2
Cbc0038I Pass   8: (2.77 seconds) suminf.    2.65232 (8) obj. -415.887 iterations 917
Cbc0038I Pass   9: (2.80 seconds) suminf.    1.05849 (5) obj. -415.887 iterations 978
Cbc0038I Pass  10: (2.82 seconds) suminf.    0.29688 (2) obj. -415.887 iterations 525
Cbc0038I Pass  11: (2.83 seconds) suminf.    0.33333 (2) obj. -416.206 iterations 241
Cbc0038I Pass  12: (2.86 seconds) suminf.    1.15750 (29) obj. -415.887 iterations 622
Cbc0038I Pass  13: (2.87 seconds) suminf.    0.56218 (2) obj. -415.887 iterations 415
Cbc0038I Pass  14: (2.88 seconds) suminf.    0.66667 (2) obj. -416.802 iterations 209
Cbc0038I Pass  15: (2.90 seconds) suminf.    1.21191 (22) obj. -415.887 iterations 277
Cbc0038I Pass  16: (2.91 seconds) suminf.    0.18262 (2) obj. -415.887 iterations 422
Cbc0038I Pass  17: (2.93 seconds) suminf.    0.33333 (2) obj. -417.206 iterations 224
Cbc0038I Pass  18: (2.94 seconds) suminf.    1.50000 (7) obj. -415.887 iterations 450
Cbc0038I Pass  19: (2.97 seconds) suminf.    0.95238 (2) obj. -415.887 iterations 619
Cbc0038I Pass  20: (2.98 seconds) suminf.    1.00000 (2) obj. -416.304 iterations 218
Cbc0038I Pass  21: (3.00 seconds) suminf.    2.99942 (17) obj. -415.887 iterations 578
Cbc0038I Pass  22: (3.03 seconds) suminf.    0.45672 (2) obj. -415.887 iterations 760
Cbc0038I Pass  23: (3.04 seconds) suminf.    0.66667 (2) obj. -417.725 iterations 242
Cbc0038I Pass  24: (3.06 seconds) suminf.    1.17304 (17) obj. -415.887 iterations 341
Cbc0038I Solution found of -416.949
Cbc0038I Rounding solution of -417.627 is better than previous of -416.949

Cbc0038I Before mini branch and bound, 1090 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5504 rows 1227 columns, reduced to 63 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -417.627 to -419.403 (3.10 seconds)
Cbc0038I Round again with cutoff of -420.698
Cbc0038I Reduced cost fixing fixed 241 variables on major pass 4
Cbc0038I Pass  25: (3.16 seconds) suminf.   13.14008 (38) obj. -420.698 iterations 708
Cbc0038I Pass  26: (3.16 seconds) suminf.    7.74362 (43) obj. -420.698 iterations 181
Cbc0038I Pass  27: (3.17 seconds) suminf.    7.74362 (43) obj. -420.698 iterations 7
Cbc0038I Pass  28: (3.19 seconds) suminf.    8.05865 (41) obj. -420.698 iterations 728
Cbc0038I Pass  29: (3.22 seconds) suminf.   15.19928 (40) obj. -420.698 iterations 733
Cbc0038I Pass  30: (3.22 seconds) suminf.    8.05865 (41) obj. -420.698 iterations 25
Cbc0038I Pass  31: (3.23 seconds) suminf.    8.05865 (41) obj. -420.698 iterations 3
Cbc0038I Pass  32: (3.23 seconds) suminf.    7.48688 (41) obj. -420.698 iterations 7
Cbc0038I Pass  33: (3.23 seconds) suminf.    7.17529 (43) obj. -420.698 iterations 11
Cbc0038I Pass  34: (3.24 seconds) suminf.    7.48688 (41) obj. -420.698 iterations 30
Cbc0038I Pass  35: (3.24 seconds) suminf.    7.48688 (41) obj. -420.698 iterations 23
Cbc0038I Pass  36: (3.25 seconds) suminf.    7.48688 (41) obj. -420.698 iterations 23
Cbc0038I Pass  37: (3.25 seconds) suminf.    7.48688 (41) obj. -420.698 iterations 9
Cbc0038I Pass  38: (3.26 seconds) suminf.    8.33011 (41) obj. -420.698 iterations 12
Cbc0038I Pass  39: (3.26 seconds) suminf.    8.00715 (34) obj. -420.698 iterations 11
Cbc0038I Pass  40: (3.28 seconds) suminf.   12.47136 (32) obj. -420.698 iterations 609
Cbc0038I Pass  41: (3.30 seconds) suminf.   12.47136 (32) obj. -420.698 iterations 597
Cbc0038I Pass  42: (3.31 seconds) suminf.    8.00715 (34) obj. -420.698 iterations 319
Cbc0038I Pass  43: (3.31 seconds) suminf.   13.21509 (33) obj. -420.698 iterations 48
Cbc0038I Pass  44: (3.32 seconds) suminf.    9.08948 (33) obj. -420.698 iterations 47
Cbc0038I Pass  45: (3.32 seconds) suminf.    8.37609 (43) obj. -420.698 iterations 23
Cbc0038I Pass  46: (3.33 seconds) suminf.    8.37609 (43) obj. -420.698 iterations 7
Cbc0038I Pass  47: (3.35 seconds) suminf.   13.12782 (29) obj. -420.698 iterations 774
Cbc0038I Pass  48: (3.37 seconds) suminf.   10.97597 (34) obj. -420.698 iterations 747
Cbc0038I Pass  49: (3.38 seconds) suminf.   10.97597 (34) obj. -420.698 iterations 10
Cbc0038I Pass  50: (3.40 seconds) suminf.   11.09745 (30) obj. -420.698 iterations 730
Cbc0038I Pass  51: (3.42 seconds) suminf.   11.72506 (31) obj. -420.698 iterations 733
Cbc0038I Pass  52: (3.43 seconds) suminf.    8.37609 (43) obj. -420.698 iterations 49
Cbc0038I Pass  53: (3.43 seconds) suminf.    8.37609 (43) obj. -420.698 iterations 3
Cbc0038I Pass  54: (3.44 seconds) suminf.   11.30327 (34) obj. -420.698 iterations 285
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1147 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5504 rows 1227 columns, reduced to 52 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (3.48 seconds)
Cbc0038I After 3.48 seconds - Feasibility pump exiting with objective of -419.403 - took 0.94 seconds
Cbc0012I Integer solution of -419.40308 found by feasibility pump after 0 iterations and 0 nodes (3.48 seconds)
Cbc0038I Full problem 5504 rows 1227 columns, reduced to 16 rows 11 columns
Cbc0031I 5 added rows had average density of 45.4
Cbc0013I At root node, 5 cuts changed objective from -423.72039 to -420.30033 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 5.2 elements, 23 column cuts (23 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 15 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 178 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -419.40308 best solution, best possible -420.30033 (3.74 seconds)
Cbc0004I Integer solution of -419.5636 found after 352 iterations and 9 nodes (4.10 seconds)
Cbc0001I Search completed - best objective -419.5635996946621, took 577 iterations and 14 nodes (4.27 seconds)
Cbc0032I Strong branching done 100 times (1312 iterations), fathomed 4 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 308 variables fixed on reduced cost
Cuts at root node changed objective from -423.72 to -420.3
Probing was tried 24 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 24 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.114 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                419.56359969
Enumerated nodes:               14
Total iterations:               577
Time (CPU seconds):             4.24
Time (Wallclock seconds):       5.23

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.86   (Wallclock seconds):       7.11

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/186c43ba9048423cb32d75210983bc04-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/186c43ba9048423cb32d75210983bc04-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 706161 COLUMNS
At line 2828098 RHS
At line 3534255 BOUNDS
At line 3537203 ENDATA
Problem MODEL has 706156 rows, 2947 columns and 716471 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 465.854 - 0.75 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 263 strengthened rows, 250 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 258 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 3289 rows, 899 columns (899 integer (899 of which binary)) and 9364 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 1.26316
Cbc0038I Solution found of -458.659
Cbc0038I Before mini branch and bound, 887 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3289 rows 899 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.60 seconds)
Cbc0038I Round again with cutoff of -459.378
Cbc0038I Reduced cost fixing fixed 130 variables on major pass 2
Cbc0038I Pass   1: (1.62 seconds) suminf.    0.06828 (3) obj. -459.378 iterations 636
Cbc0038I Pass   2: (1.62 seconds) suminf.    0.42857 (3) obj. -463.175 iterations 104
Cbc0038I Pass   3: (1.63 seconds) suminf.    1.43493 (5) obj. -459.378 iterations 381
Cbc0038I Pass   4: (1.64 seconds) suminf.    0.50000 (1) obj. -463.142 iterations 359
Cbc0038I Pass   5: (1.64 seconds) suminf.    0.33333 (1) obj. -463.088 iterations 162
Cbc0038I Pass   6: (1.64 seconds) suminf.    0.33333 (1) obj. -463.088 iterations 166
Cbc0038I Pass   7: (1.65 seconds) suminf.    4.51379 (16) obj. -459.378 iterations 395
Cbc0038I Pass   8: (1.66 seconds) suminf.    0.00000 (0) obj. -459.417 iterations 319
Cbc0038I Solution found of -459.417
Cbc0038I Rounding solution of -460.981 is better than previous of -459.417

Cbc0038I Before mini branch and bound, 857 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3289 rows 899 columns, reduced to 1 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -460.981 to -462.997 (1.71 seconds)
Cbc0038I Round again with cutoff of -463.568
Cbc0038I Reduced cost fixing fixed 193 variables on major pass 3
Cbc0038I Pass   9: (1.72 seconds) suminf.    0.57872 (8) obj. -463.568 iterations 113
Cbc0038I Pass  10: (1.72 seconds) suminf.    0.92308 (6) obj. -465.522 iterations 166
Cbc0038I Pass  11: (1.73 seconds) suminf.    1.90609 (6) obj. -463.568 iterations 175
Cbc0038I Pass  12: (1.74 seconds) suminf.    1.70745 (9) obj. -463.568 iterations 394
Cbc0038I Pass  13: (1.74 seconds) suminf.    1.20000 (3) obj. -463.952 iterations 273
Cbc0038I Pass  14: (1.74 seconds) suminf.    1.20000 (3) obj. -463.952 iterations 4
Cbc0038I Pass  15: (1.75 seconds) suminf.    2.27588 (16) obj. -463.568 iterations 528
Cbc0038I Pass  16: (1.75 seconds) suminf.    1.46311 (7) obj. -463.568 iterations 28
Cbc0038I Pass  17: (1.76 seconds) suminf.    0.65419 (6) obj. -463.568 iterations 305
Cbc0038I Pass  18: (1.76 seconds) suminf.    0.65419 (6) obj. -463.568 iterations 5
Cbc0038I Pass  19: (1.77 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 363
Cbc0038I Pass  20: (1.77 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 4
Cbc0038I Pass  21: (1.77 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 123
Cbc0038I Pass  22: (1.78 seconds) suminf.    1.13226 (5) obj. -463.568 iterations 500
Cbc0038I Pass  23: (1.79 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 410
Cbc0038I Pass  24: (1.80 seconds) suminf.    2.33687 (15) obj. -463.568 iterations 520
Cbc0038I Pass  25: (1.81 seconds) suminf.    1.22959 (6) obj. -463.568 iterations 332
Cbc0038I Pass  26: (1.81 seconds) suminf.    0.65419 (6) obj. -463.568 iterations 220
Cbc0038I Pass  27: (1.81 seconds) suminf.    0.65419 (6) obj. -463.568 iterations 2
Cbc0038I Pass  28: (1.82 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 372
Cbc0038I Pass  29: (1.83 seconds) suminf.    1.73560 (5) obj. -463.568 iterations 504
Cbc0038I Pass  30: (1.84 seconds) suminf.    1.02786 (5) obj. -463.568 iterations 386
Cbc0038I Pass  31: (1.84 seconds) suminf.    1.00000 (2) obj. -463.846 iterations 494
Cbc0038I Pass  32: (1.85 seconds) suminf.    0.70083 (5) obj. -463.568 iterations 548
Cbc0038I Pass  33: (1.86 seconds) suminf.    0.69359 (14) obj. -463.568 iterations 9
Cbc0038I Pass  34: (1.87 seconds) suminf.    1.26316 (12) obj. -465.024 iterations 504
Cbc0038I Pass  35: (1.88 seconds) suminf.    0.65419 (6) obj. -463.568 iterations 455
Cbc0038I Pass  36: (1.88 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 365
Cbc0038I Pass  37: (1.89 seconds) suminf.    1.00000 (2) obj. -464.472 iterations 4
Cbc0038I Pass  38: (1.89 seconds) suminf.    1.13226 (5) obj. -463.568 iterations 507
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 840 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3289 rows 899 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (1.92 seconds)
Cbc0038I After 1.92 seconds - Feasibility pump exiting with objective of -462.997 - took 0.33 seconds
Cbc0012I Integer solution of -462.99689 found by feasibility pump after 0 iterations and 0 nodes (1.92 seconds)
Cbc0031I 6 added rows had average density of 49.5
Cbc0013I At root node, 6 cuts changed objective from -465.85445 to -463.51057 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 5.0 elements, 3 column cuts (3 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 40 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 262.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -462.99689 best solution, best possible -463.51057 (2.04 seconds)
Cbc0004I Integer solution of -463.49184 found after 217 iterations and 1 nodes (2.05 seconds)
Cbc0001I Search completed - best objective -463.491843723995, took 243 iterations and 2 nodes (2.05 seconds)
Cbc0032I Strong branching done 22 times (240 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 204 variables fixed on reduced cost
Cuts at root node changed objective from -465.854 to -463.511
Probing was tried 11 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 11 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                463.49184372
Enumerated nodes:               2
Total iterations:               243
Time (CPU seconds):             2.15
Time (Wallclock seconds):       2.60

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.25   (Wallclock seconds):       3.96

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/dc4d6d2db8cc4f52b61782628a1cedea-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/dc4d6d2db8cc4f52b61782628a1cedea-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1521516 COLUMNS
At line 6090985 RHS
At line 7612497 BOUNDS
At line 7616618 ENDATA
Problem MODEL has 1521511 rows, 4120 columns and 1538043 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 411.167 - 1.36 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 204 strengthened rows, 246 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 97 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6182 rows, 1427 columns (1427 integer (1427 of which binary)) and 17220 elements
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.15789
Cbc0038I Solution found of -387.153
Cbc0038I Before mini branch and bound, 1413 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (3.41 seconds)
Cbc0038I Round again with cutoff of -389.555
Cbc0038I Reduced cost fixing fixed 49 variables on major pass 2
Cbc0038I Pass   1: (3.46 seconds) suminf.    0.17963 (4) obj. -389.555 iterations 1344
Cbc0038I Pass   2: (3.48 seconds) suminf.    1.33333 (4) obj. -404.978 iterations 276
Cbc0038I Pass   3: (3.49 seconds) suminf.    1.00000 (5) obj. -402.712 iterations 409
Cbc0038I Solution found of -398.059
Cbc0038I Rounding solution of -401.38 is better than previous of -398.059

Cbc0038I Before mini branch and bound, 1397 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -401.38 to -406.646 (3.56 seconds)
Cbc0038I Round again with cutoff of -407.55
Cbc0038I Reduced cost fixing fixed 259 variables on major pass 3
Cbc0038I Pass   4: (3.62 seconds) suminf.    0.57664 (10) obj. -407.55 iterations 779
Cbc0038I Pass   5: (3.63 seconds) suminf.    0.57664 (10) obj. -407.55 iterations 39
Cbc0038I Pass   6: (3.64 seconds) suminf.    2.80000 (12) obj. -407.55 iterations 349
Cbc0038I Pass   7: (3.66 seconds) suminf.    0.57112 (12) obj. -407.55 iterations 875
Cbc0038I Pass   8: (3.67 seconds) suminf.    0.52478 (11) obj. -407.55 iterations 139
Cbc0038I Pass   9: (3.69 seconds) suminf.    3.68421 (10) obj. -410.565 iterations 848
Cbc0038I Pass  10: (3.72 seconds) suminf.    0.57664 (10) obj. -407.55 iterations 751
Cbc0038I Pass  11: (3.72 seconds) suminf.    0.57664 (10) obj. -407.55 iterations 1
Cbc0038I Pass  12: (3.73 seconds) suminf.    2.80000 (12) obj. -407.55 iterations 272
Cbc0038I Pass  13: (3.75 seconds) suminf.    1.40417 (26) obj. -407.55 iterations 412
Cbc0038I Pass  14: (3.76 seconds) suminf.    0.14941 (2) obj. -407.55 iterations 406
Cbc0038I Pass  15: (3.77 seconds) suminf.    0.40000 (2) obj. -409.581 iterations 241
Cbc0038I Pass  16: (3.79 seconds) suminf.    0.72651 (7) obj. -407.55 iterations 654
Cbc0038I Pass  17: (3.80 seconds) suminf.    0.81508 (5) obj. -407.55 iterations 255
Cbc0038I Pass  18: (3.82 seconds) suminf.    2.41592 (14) obj. -407.55 iterations 614
Cbc0038I Pass  19: (3.83 seconds) suminf.    0.14941 (2) obj. -407.55 iterations 481
Cbc0038I Pass  20: (3.84 seconds) suminf.    0.40000 (2) obj. -409.581 iterations 262
Cbc0038I Pass  21: (3.86 seconds) suminf.    0.14941 (2) obj. -407.55 iterations 377
Cbc0038I Pass  22: (3.87 seconds) suminf.    0.25000 (1) obj. -408 iterations 456
Cbc0038I Pass  23: (3.89 seconds) suminf.    0.54878 (5) obj. -407.55 iterations 421
Cbc0038I Pass  24: (3.89 seconds) suminf.    0.50000 (1) obj. -408 iterations 251
Cbc0038I Pass  25: (3.90 seconds) suminf.    3.80900 (10) obj. -407.55 iterations 281
Cbc0038I Pass  26: (3.92 seconds) suminf.    2.73428 (18) obj. -407.55 iterations 725
Cbc0038I Pass  27: (3.95 seconds) suminf.    1.25000 (5) obj. -408.898 iterations 865
Cbc0038I Pass  28: (3.95 seconds) suminf.    1.25000 (5) obj. -408.898 iterations 8
Cbc0038I Pass  29: (3.99 seconds) suminf.    1.80698 (7) obj. -407.55 iterations 1392
Cbc0038I Pass  30: (3.99 seconds) suminf.    1.49571 (7) obj. -407.55 iterations 53
Cbc0038I Pass  31: (4.02 seconds) suminf.    0.14941 (2) obj. -407.55 iterations 1189
Cbc0038I Pass  32: (4.03 seconds) suminf.    0.40000 (2) obj. -409.581 iterations 229
Cbc0038I Pass  33: (4.04 seconds) suminf.    1.87942 (5) obj. -407.55 iterations 212
Cbc0038I Rounding solution of -406.689 is better than previous of -406.646

Cbc0038I Before mini branch and bound, 1310 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 39 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -406.689 to -407.113 (4.14 seconds)
Cbc0038I Round again with cutoff of -408.635
Cbc0038I Reduced cost fixing fixed 281 variables on major pass 4
Cbc0038I Pass  33: (4.18 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 852
Cbc0038I Pass  34: (4.18 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 17
Cbc0038I Pass  35: (4.19 seconds) suminf.    2.63063 (9) obj. -408.635 iterations 353
Cbc0038I Pass  36: (4.22 seconds) suminf.    2.70960 (15) obj. -408.635 iterations 843
Cbc0038I Pass  37: (4.22 seconds) suminf.    2.70960 (15) obj. -408.635 iterations 64
Cbc0038I Pass  38: (4.25 seconds) suminf.    3.68421 (10) obj. -410.565 iterations 972
Cbc0038I Pass  39: (4.27 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 410
Cbc0038I Pass  40: (4.27 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 0
Cbc0038I Pass  41: (4.28 seconds) suminf.    2.63063 (9) obj. -408.635 iterations 345
Cbc0038I Pass  42: (4.30 seconds) suminf.    4.18934 (12) obj. -408.635 iterations 922
Cbc0038I Pass  43: (4.33 seconds) suminf.    0.40000 (2) obj. -409.741 iterations 1022
Cbc0038I Pass  44: (4.34 seconds) suminf.    0.24540 (2) obj. -408.635 iterations 343
Cbc0038I Pass  45: (4.35 seconds) suminf.    0.40000 (2) obj. -409.888 iterations 222
Cbc0038I Pass  46: (4.36 seconds) suminf.    0.57730 (4) obj. -408.635 iterations 264
Cbc0038I Pass  47: (4.37 seconds) suminf.    0.24540 (2) obj. -408.635 iterations 415
Cbc0038I Pass  48: (4.38 seconds) suminf.    0.40000 (2) obj. -409.888 iterations 195
Cbc0038I Pass  49: (4.39 seconds) suminf.    0.60000 (3) obj. -408.755 iterations 194
Cbc0038I Pass  50: (4.40 seconds) suminf.    0.66560 (6) obj. -408.635 iterations 367
Cbc0038I Pass  51: (4.41 seconds) suminf.    0.70000 (7) obj. -409.049 iterations 372
Cbc0038I Pass  52: (4.44 seconds) suminf.    3.10378 (12) obj. -408.635 iterations 974
Cbc0038I Pass  53: (4.44 seconds) suminf.    3.10378 (12) obj. -408.635 iterations 39
Cbc0038I Pass  54: (4.46 seconds) suminf.    3.68421 (10) obj. -410.565 iterations 867
Cbc0038I Pass  55: (4.48 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 393
Cbc0038I Pass  56: (4.48 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 1
Cbc0038I Pass  57: (4.49 seconds) suminf.    2.63063 (9) obj. -408.635 iterations 315
Cbc0038I Pass  58: (4.51 seconds) suminf.    2.63063 (9) obj. -408.635 iterations 833
Cbc0038I Pass  59: (4.54 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 1090
Cbc0038I Pass  60: (4.55 seconds) suminf.    2.63063 (9) obj. -408.635 iterations 343
Cbc0038I Pass  61: (4.58 seconds) suminf.    3.25461 (17) obj. -408.635 iterations 879
Cbc0038I Pass  62: (4.60 seconds) suminf.    0.78405 (8) obj. -408.635 iterations 1146
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1366 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (4.65 seconds)
Cbc0038I After 4.66 seconds - Feasibility pump exiting with objective of -407.113 - took 1.28 seconds
Cbc0012I Integer solution of -407.11309 found by feasibility pump after 0 iterations and 0 nodes (4.66 seconds)
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 2 rows 4 columns
Cbc0031I 1 added rows had average density of 409
Cbc0013I At root node, 1 cuts changed objective from -411.16718 to -411.16718 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 26 column cuts (26 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 409.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -407.11309 best solution, best possible -411.16718 (4.84 seconds)
Cbc0012I Integer solution of -407.87321 found by DiveCoefficient after 74 iterations and 5 nodes (5.22 seconds)
Cbc0004I Integer solution of -408.52183 found after 946 iterations and 33 nodes (6.08 seconds)
Cbc0038I Full problem 6182 rows 1427 columns, reduced to 3 rows 6 columns
Cbc0004I Integer solution of -409.01792 found after 1382 iterations and 43 nodes (6.26 seconds)
Cbc0038I Full problem 6183 rows 1427 columns, reduced to 254 rows 120 columns
Cbc0044I Reduced cost fixing - 254 rows, 120 columns - restarting search
Cbc0012I Integer solution of -409.01792 found by Previous solution after 0 iterations and 0 nodes (6.42 seconds)
Cbc0012I Integer solution of -409.67614 found by DiveCoefficient after 55 iterations and 0 nodes (6.57 seconds)
Cbc0031I 4 added rows had average density of 28.25
Cbc0013I At root node, 4 cuts changed objective from -411.16718 to -410.06113 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 9 column cuts (9 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 33 row cuts average 41.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 6 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 1 row cuts average 51.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -409.67614 best solution, best possible -410.06113 (6.57 seconds)
Cbc0012I Integer solution of -409.86032 found by DiveCoefficient after 159 iterations and 10 nodes (6.64 seconds)
Cbc0001I Search completed - best objective -409.8603233330872, took 177 iterations and 12 nodes (6.66 seconds)
Cbc0032I Strong branching done 106 times (362 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 41 variables fixed on reduced cost
Cbc0038I Probing was tried 21 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I Gomory was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Knapsack was tried 19 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 9 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I ZeroHalf was tried 9 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I Stored from first was tried 19 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -409.86032 found by Reduced search after 1876 iterations and 62 nodes (6.71 seconds)
Cbc0001I Search completed - best objective -409.8603233330872, took 1876 iterations and 62 nodes (6.71 seconds)
Cbc0032I Strong branching done 372 times (5468 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 466 variables fixed on reduced cost
Cuts at root node changed objective from -411.167 to -411.167
Probing was tried 18 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)

Result - Optimal solution found

Objective value:                409.86032333
Enumerated nodes:               62
Total iterations:               1876
Time (CPU seconds):             6.59
Time (Wallclock seconds):       8.24

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.94   (Wallclock seconds):       10.92

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7562aba544b54db785eaae896dd0d430-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/7562aba544b54db785eaae896dd0d430-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 398814 COLUMNS
At line 1598050 RHS
At line 1996860 BOUNDS
At line 1999326 ENDATA
Problem MODEL has 398809 rows, 2465 columns and 407403 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 390.597 - 0.60 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 70 strengthened rows, 332 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2697 rows, 681 columns (681 integer (681 of which binary)) and 7353 elements
Cbc0038I Initial state - 48 integers unsatisfied sum - 14.8163
Cbc0038I Pass   1: suminf.    7.49575 (126) obj. -367.732 iterations 657
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -334.687 iterations 77
Cbc0038I Solution found of -334.687
Cbc0038I Rounding solution of -338.009 is better than previous of -334.687

Cbc0038I Before mini branch and bound, 533 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2697 rows 681 columns, reduced to 451 rows 113 columns
Cbc0038I Mini branch and bound improved solution from -338.009 to -386.549 (1.33 seconds)
Cbc0038I Round again with cutoff of -386.954
Cbc0038I Reduced cost fixing fixed 123 variables on major pass 2
Cbc0038I Pass   3: suminf.    8.95945 (31) obj. -386.954 iterations 276
Cbc0038I Pass   4: suminf.    5.12848 (16) obj. -386.954 iterations 213
Cbc0038I Pass   5: suminf.    0.58204 (10) obj. -386.954 iterations 346
Cbc0038I Pass   6: suminf.    0.03297 (20) obj. -386.954 iterations 96
Cbc0038I Pass   7: suminf.    0.35714 (10) obj. -389.784 iterations 109
Cbc0038I Pass   8: suminf.    0.35714 (5) obj. -388.761 iterations 150
Cbc0038I Pass   9: suminf.    0.05047 (2) obj. -386.954 iterations 260
Cbc0038I Pass  10: suminf.    0.06561 (6) obj. -386.954 iterations 228
Cbc0038I Pass  11: suminf.    0.61538 (8) obj. -389.927 iterations 198
Cbc0038I Pass  12: suminf.    0.05447 (20) obj. -386.954 iterations 214
Cbc0038I Pass  13: suminf.    0.05714 (9) obj. -386.954 iterations 224
Cbc0038I Pass  14: suminf.    0.40000 (2) obj. -389.757 iterations 238
Cbc0038I Pass  15: suminf.    0.05047 (2) obj. -386.954 iterations 222
Cbc0038I Pass  16: suminf.    0.75000 (6) obj. -389.921 iterations 249
Cbc0038I Pass  17: suminf.    2.85714 (20) obj. -388.556 iterations 181
Cbc0038I Pass  18: suminf.    2.85714 (20) obj. -388.556 iterations 114
Cbc0038I Pass  19: suminf.    4.36593 (28) obj. -386.954 iterations 270
Cbc0038I Pass  20: suminf.    3.09292 (26) obj. -386.954 iterations 474
Cbc0038I Pass  21: suminf.    2.54888 (12) obj. -386.954 iterations 274
Cbc0038I Solution found of -389.871
Cbc0038I Before mini branch and bound, 582 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2697 rows 681 columns, reduced to 48 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (1.48 seconds)
Cbc0038I Round again with cutoff of -390.016
Cbc0038I Reduced cost fixing fixed 153 variables on major pass 3
Cbc0038I Pass  22: suminf.    3.37659 (35) obj. -390.016 iterations 372
Cbc0038I Pass  23: suminf.    0.67498 (24) obj. -390.016 iterations 58
Cbc0038I Pass  24: suminf.    0.97409 (29) obj. -390.016 iterations 811
Cbc0038I Pass  25: suminf.    0.68607 (40) obj. -390.016 iterations 506
Cbc0038I Pass  26: suminf.    0.68826 (9) obj. -390.016 iterations 217
Cbc0038I Pass  27: suminf.    0.70252 (15) obj. -390.016 iterations 552
Cbc0038I Pass  28: suminf.    0.67498 (24) obj. -390.016 iterations 55
Cbc0038I Pass  29: suminf.    0.68665 (16) obj. -390.016 iterations 25
Cbc0038I Pass  30: suminf.    0.68072 (20) obj. -390.016 iterations 62
Cbc0038I Pass  31: suminf.    0.73021 (10) obj. -390.016 iterations 8
Cbc0038I Pass  32: suminf.    0.67498 (24) obj. -390.016 iterations 10
Cbc0038I Pass  33: suminf.    0.69231 (9) obj. -390.036 iterations 395
Cbc0038I Pass  34: suminf.    0.68826 (9) obj. -390.016 iterations 193
Cbc0038I Pass  35: suminf.    0.67498 (24) obj. -390.016 iterations 403
Cbc0038I Pass  36: suminf.    0.68072 (20) obj. -390.016 iterations 4
Cbc0038I Pass  37: suminf.    0.68626 (18) obj. -390.016 iterations 407
Cbc0038I Pass  38: suminf.    0.67498 (24) obj. -390.016 iterations 405
Cbc0038I Pass  39: suminf.    0.68695 (14) obj. -390.016 iterations 357
Cbc0038I Pass  40: suminf.    0.73021 (10) obj. -390.016 iterations 356
Cbc0038I Pass  41: suminf.    0.68072 (20) obj. -390.016 iterations 10
Cbc0038I Pass  42: suminf.    0.68072 (20) obj. -390.016 iterations 1
Cbc0038I Pass  43: suminf.    0.73021 (10) obj. -390.016 iterations 9
Cbc0038I Pass  44: suminf.    0.68891 (12) obj. -390.016 iterations 108
Cbc0038I Pass  45: suminf.    0.67498 (24) obj. -390.016 iterations 161
Cbc0038I Pass  46: suminf.    0.68891 (12) obj. -390.016 iterations 244
Cbc0038I Pass  47: suminf.    0.67498 (24) obj. -390.016 iterations 278
Cbc0038I Pass  48: suminf.    0.67498 (24) obj. -390.016 iterations 4
Cbc0038I Pass  49: suminf.    0.68072 (20) obj. -390.016 iterations 58
Cbc0038I Pass  50: suminf.    0.68072 (20) obj. -390.016 iterations 62
Cbc0038I Pass  51: suminf.    0.73021 (10) obj. -390.016 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 556 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2697 rows 681 columns, reduced to 23 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I After 1.66 seconds - Feasibility pump exiting with objective of -389.871 - took 0.36 seconds
Cbc0012I Integer solution of -389.87074 found by feasibility pump after 0 iterations and 0 nodes (1.66 seconds)
Cbc0038I Full problem 2697 rows 681 columns, reduced to 14 rows 9 columns
Cbc0031I 2 added rows had average density of 94
Cbc0013I At root node, 7 cuts changed objective from -390.59673 to -389.87074 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 173.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -389.8707418166951, took 0 iterations and 0 nodes (1.69 seconds)
Cbc0035I Maximum depth 0, 151 variables fixed on reduced cost
Cuts at root node changed objective from -390.597 to -389.871
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                389.87074182
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.57
Time (Wallclock seconds):       2.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.19   (Wallclock seconds):       2.84

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/91264d0c9af84e6bbb701b672e0396a2-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/91264d0c9af84e6bbb701b672e0396a2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 533862 COLUMNS
At line 2138687 RHS
At line 2672545 BOUNDS
At line 2675402 ENDATA
Problem MODEL has 533857 rows, 2856 columns and 543996 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 375.191 - 0.69 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 265 strengthened rows, 196 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 210 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 91 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 3379 rows, 841 columns (841 integer (840 of which binary)) and 9591 elements
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.11628
Cbc0038I Solution found of -346.005
Cbc0038I Cleaned solution of -346.005
Cbc0038I Before mini branch and bound, 807 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3379 rows 841 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.44 seconds)
Cbc0038I Round again with cutoff of -348.923
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: (1.46 seconds) suminf.    0.06640 (1) obj. -348.923 iterations 752
Cbc0038I Solution found of -348.923
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3380 rows 841 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -351.478
Cbc0038I Rounding solution of -357.537 is better than previous of -351.478

Cbc0038I Before mini branch and bound, 806 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.49 seconds)
Cbc0038I Round again with cutoff of -361.068
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass   2: (1.53 seconds) suminf.    1.16015 (75) obj. -361.068 iterations 656
Cbc0038I Pass   3: (1.55 seconds) suminf.    4.50000 (10) obj. -370.549 iterations 328
Cbc0038I Pass   4: (1.55 seconds) suminf.    0.50000 (10) obj. -367.279 iterations 254
Cbc0038I Solution found of -364.552
Cbc0038I Cleaned solution of -364.552
Cbc0038I Rounding solution of -367.288 is better than previous of -364.552

Cbc0038I Before mini branch and bound, 745 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3379 rows 841 columns, reduced to 1 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (1.59 seconds)
Cbc0038I Round again with cutoff of -369.659
Cbc0038I Reduced cost fixing fixed 100 variables on major pass 4
Cbc0038I Pass   5: (1.60 seconds) suminf.    2.27028 (8) obj. -369.659 iterations 76
Cbc0038I Pass   6: (1.60 seconds) suminf.    3.27273 (8) obj. -372.213 iterations 264
Cbc0038I Pass   7: (1.61 seconds) suminf.    4.66234 (11) obj. -369.659 iterations 419
Cbc0038I Pass   8: (1.62 seconds) suminf.    3.68180 (16) obj. -369.659 iterations 318
Cbc0038I Pass   9: (1.63 seconds) suminf.    3.65625 (13) obj. -373.575 iterations 505
Cbc0038I Pass  10: (1.64 seconds) suminf.    0.12467 (4) obj. -369.659 iterations 476
Cbc0038I Solution found of -369.807
Cbc0038I Cleaned solution of -369.807
Cbc0038I Before mini branch and bound, 779 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3379 rows 841 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of -371.422
Cbc0038I Reduced cost fixing fixed 124 variables on major pass 5
Cbc0038I Pass  11: (1.67 seconds) suminf.    2.49038 (8) obj. -371.422 iterations 0
Cbc0038I Pass  12: (1.67 seconds) suminf.    3.27273 (8) obj. -372.213 iterations 253
Cbc0038I Pass  13: (1.68 seconds) suminf.    2.93031 (9) obj. -371.422 iterations 262
Cbc0038I Pass  14: (1.68 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 279
Cbc0038I Pass  15: (1.69 seconds) suminf.    2.90909 (8) obj. -371.617 iterations 706
Cbc0038I Pass  16: (1.70 seconds) suminf.    2.93031 (9) obj. -371.422 iterations 323
Cbc0038I Pass  17: (1.71 seconds) suminf.    2.91821 (9) obj. -371.422 iterations 359
Cbc0038I Pass  18: (1.72 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 366
Cbc0038I Pass  19: (1.72 seconds) suminf.    3.25000 (13) obj. -372.827 iterations 288
Cbc0038I Pass  20: (1.73 seconds) suminf.    3.02984 (10) obj. -371.422 iterations 279
Cbc0038I Pass  21: (1.74 seconds) suminf.    2.71543 (15) obj. -371.422 iterations 578
Cbc0038I Pass  22: (1.75 seconds) suminf.    2.61405 (14) obj. -371.422 iterations 209
Cbc0038I Pass  23: (1.76 seconds) suminf.    2.61405 (14) obj. -371.422 iterations 278
Cbc0038I Pass  24: (1.77 seconds) suminf.    2.84375 (13) obj. -371.846 iterations 488
Cbc0038I Pass  25: (1.78 seconds) suminf.    4.34978 (18) obj. -371.422 iterations 506
Cbc0038I Pass  26: (1.78 seconds) suminf.    3.11144 (15) obj. -371.422 iterations 18
Cbc0038I Pass  27: (1.78 seconds) suminf.    3.11144 (15) obj. -371.422 iterations 20
Cbc0038I Pass  28: (1.80 seconds) suminf.    3.25000 (13) obj. -372.827 iterations 543
Cbc0038I Pass  29: (1.81 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 588
Cbc0038I Pass  30: (1.82 seconds) suminf.    2.90909 (8) obj. -371.617 iterations 276
Cbc0038I Pass  31: (1.82 seconds) suminf.    3.02984 (10) obj. -371.422 iterations 426
Cbc0038I Pass  32: (1.83 seconds) suminf.    4.50357 (16) obj. -371.422 iterations 416
Cbc0038I Pass  33: (1.84 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 372
Cbc0038I Pass  34: (1.85 seconds) suminf.    3.25000 (13) obj. -372.827 iterations 278
Cbc0038I Pass  35: (1.85 seconds) suminf.    3.42857 (8) obj. -372.867 iterations 147
Cbc0038I Pass  36: (1.85 seconds) suminf.    3.42857 (8) obj. -372.867 iterations 136
Cbc0038I Pass  37: (1.87 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 651
Cbc0038I Pass  38: (1.87 seconds) suminf.    2.90909 (8) obj. -371.617 iterations 268
Cbc0038I Pass  39: (1.88 seconds) suminf.    3.02984 (10) obj. -371.422 iterations 514
Cbc0038I Pass  40: (1.89 seconds) suminf.    2.22561 (21) obj. -371.422 iterations 208
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 749 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3379 rows 841 columns, reduced to 18 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -369.807 to -371.636 (1.91 seconds)
Cbc0038I Round again with cutoff of -373.058
Cbc0038I Reduced cost fixing fixed 156 variables on major pass 6
Cbc0038I Pass  40: (1.95 seconds) suminf.    3.42860 (14) obj. -373.058 iterations 724
Cbc0038I Pass  41: (1.97 seconds) suminf.    3.65625 (13) obj. -373.575 iterations 528
Cbc0038I Pass  42: (1.98 seconds) suminf.    4.51906 (16) obj. -373.058 iterations 505
Cbc0038I Pass  43: (1.98 seconds) suminf.    3.42860 (14) obj. -373.058 iterations 16
Cbc0038I Pass  44: (1.99 seconds) suminf.    3.65625 (13) obj. -373.575 iterations 498
Cbc0038I Pass  45: (2.00 seconds) suminf.    3.93967 (16) obj. -373.058 iterations 223
Cbc0038I Pass  46: (2.00 seconds) suminf.    3.42860 (14) obj. -373.058 iterations 386
Cbc0038I Pass  47: (2.02 seconds) suminf.    3.65625 (13) obj. -373.575 iterations 522
Cbc0038I Pass  48: (2.02 seconds) suminf.    3.67208 (14) obj. -373.058 iterations 148
Cbc0038I Pass  49: (2.03 seconds) suminf.    5.50271 (20) obj. -373.058 iterations 420
Cbc0038I Pass  50: (2.04 seconds) suminf.    0.03609 (1) obj. -373.058 iterations 539
Cbc0038I Solution found of -373.058
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3380 rows 841 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of -373.157
Cbc0038I Before mini branch and bound, 766 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3379 rows 841 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (2.08 seconds)
Cbc0038I After 2.08 seconds - Feasibility pump exiting with objective of -373.157 - took 0.64 seconds
Cbc0012I Integer solution of -373.15694 found by feasibility pump after 0 iterations and 0 nodes (2.08 seconds)
Cbc0038I Full problem 3379 rows 841 columns, reduced to 1 rows 3 columns
Cbc0012I Integer solution of -373.53833 found by DiveCoefficient after 51 iterations and 0 nodes (2.15 seconds)
Cbc0031I 4 added rows had average density of 14.75
Cbc0013I At root node, 4 cuts changed objective from -375.19139 to -373.53833 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.0 elements, 15 column cuts (15 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 198.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0001I Search completed - best objective -373.538331779327, took 51 iterations and 0 nodes (2.15 seconds)
Cbc0035I Maximum depth 0, 167 variables fixed on reduced cost
Cuts at root node changed objective from -375.191 to -373.538
Probing was tried 3 times and created 175 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                373.53833178
Enumerated nodes:               0
Total iterations:               51
Time (CPU seconds):             2.19
Time (Wallclock seconds):       2.57

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.99   (Wallclock seconds):       3.48

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8e40b5a6e7f14b7198dcf2d43e1ca89a-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/8e40b5a6e7f14b7198dcf2d43e1ca89a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 38902 COLUMNS
At line 156604 RHS
At line 195502 BOUNDS
At line 196430 ENDATA
Problem MODEL has 38897 rows, 927 columns and 41597 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 329.441 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 98 strengthened rows, 466 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0004I processed model has 525 rows, 175 columns (175 integer (175 of which binary)) and 1465 elements
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.93103
Cbc0038I Pass   1: suminf.    0.93750 (3) obj. -326.65 iterations 81
Cbc0038I Solution found of -310.344
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 525 rows 175 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -312.254
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.93750 (3) obj. -326.65 iterations 0
Cbc0038I Pass   3: suminf.    0.07923 (7) obj. -312.254 iterations 75
Cbc0038I Pass   4: suminf.    0.53030 (7) obj. -323.125 iterations 38
Cbc0038I Pass   5: suminf.    9.18484 (26) obj. -312.254 iterations 69
Cbc0038I Pass   6: suminf.    3.44110 (20) obj. -312.254 iterations 63
Cbc0038I Pass   7: suminf.    3.30540 (19) obj. -312.254 iterations 65
Cbc0038I Pass   8: suminf.    2.75578 (7) obj. -312.254 iterations 139
Cbc0038I Pass   9: suminf.    2.75578 (7) obj. -312.254 iterations 8
Cbc0038I Pass  10: suminf.    2.86364 (7) obj. -314.854 iterations 30
Cbc0038I Pass  11: suminf.    2.75578 (7) obj. -312.254 iterations 60
Cbc0038I Pass  12: suminf.    2.82865 (10) obj. -312.254 iterations 70
Cbc0038I Pass  13: suminf.    8.17846 (19) obj. -312.254 iterations 128
Cbc0038I Pass  14: suminf.    7.11638 (26) obj. -312.254 iterations 29
Cbc0038I Pass  15: suminf.    7.11638 (26) obj. -312.254 iterations 4
Cbc0038I Pass  16: suminf.    7.11638 (26) obj. -312.254 iterations 85
Cbc0038I Pass  17: suminf.    4.32182 (26) obj. -312.254 iterations 62
Cbc0038I Pass  18: suminf.    4.28391 (26) obj. -312.254 iterations 47
Cbc0038I Pass  19: suminf.    2.60000 (6) obj. -316.381 iterations 181
Cbc0038I Pass  20: suminf.    2.60000 (6) obj. -316.381 iterations 8
Cbc0038I Pass  21: suminf.    1.62130 (7) obj. -312.254 iterations 48
Cbc0038I Pass  22: suminf.    1.80303 (7) obj. -316.634 iterations 33
Cbc0038I Pass  23: suminf.    2.33588 (12) obj. -312.456 iterations 67
Cbc0038I Pass  24: suminf.    1.96154 (6) obj. -315.494 iterations 64
Cbc0038I Pass  25: suminf.    0.57143 (3) obj. -316.958 iterations 55
Cbc0038I Pass  26: suminf.    0.57143 (3) obj. -316.958 iterations 27
Cbc0038I Pass  27: suminf.    0.57143 (3) obj. -316.958 iterations 40
Cbc0038I Pass  28: suminf.    0.57143 (3) obj. -316.958 iterations 35
Cbc0038I Pass  29: suminf.    0.57143 (3) obj. -316.958 iterations 38
Cbc0038I Pass  30: suminf.    8.42857 (17) obj. -314.787 iterations 79
Cbc0038I Pass  31: suminf.    1.64706 (7) obj. -315.482 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 525 rows 175 columns, reduced to 165 rows 70 columns - 9 fixed gives 73, 38 - ok now
Cbc0038I Full problem 525 rows 175 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -310.344 - took 0.03 seconds
Cbc0012I Integer solution of -310.34449 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 525 rows 175 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -325.35716 found by DiveCoefficient after 41 iterations and 0 nodes (0.09 seconds)
Cbc0031I 3 added rows had average density of 35.333333
Cbc0013I At root node, 3 cuts changed objective from -329.44098 to -325.35716 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 8 column cuts (8 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 8 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -325.357155269129, took 41 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Cuts at root node changed objective from -329.441 to -325.357
Probing was tried 3 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                325.35715527
Enumerated nodes:               0
Total iterations:               41
Time (CPU seconds):             0.11
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/eb240f5d63fe4b36b4d62f57d4b19fe9-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/eb240f5d63fe4b36b4d62f57d4b19fe9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1014741 COLUMNS
At line 4063186 RHS
At line 5077923 BOUNDS
At line 5081555 ENDATA
Problem MODEL has 1014736 rows, 3631 columns and 1027827 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 352.72 - 1.04 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 74 strengthened rows, 196 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 4611 rows, 1142 columns (1142 integer (1142 of which binary)) and 12588 elements
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.33333
Cbc0038I Pass   1: (2.09 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 724
Cbc0038I Pass   2: (2.10 seconds) suminf.    0.00000 (0) obj. -312.203 iterations 210
Cbc0038I Solution found of -312.203
Cbc0038I Rounding solution of -320.414 is better than previous of -312.203

Cbc0038I Before mini branch and bound, 1109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (2.20 seconds)
Cbc0038I Round again with cutoff of -323.645
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   3: (2.21 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 0
Cbc0038I Pass   4: (2.25 seconds) suminf.    0.03416 (1) obj. -323.645 iterations 1165
Cbc0038I Pass   5: (2.25 seconds) suminf.    0.03416 (1) obj. -323.645 iterations 0
Cbc0038I Pass   6: (2.26 seconds) suminf.    0.37500 (1) obj. -325.848 iterations 284
Cbc0038I Pass   7: (2.27 seconds) suminf.    0.17679 (1) obj. -323.645 iterations 250
Cbc0038I Pass   8: (2.28 seconds) suminf.    0.20000 (1) obj. -327.204 iterations 435
Cbc0038I Solution found of -326.109
Cbc0038I Before mini branch and bound, 1103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -326.109 to -330.671 (2.32 seconds)
Cbc0038I Round again with cutoff of -335.081
Cbc0038I Reduced cost fixing fixed 64 variables on major pass 3
Cbc0038I Pass   9: (2.33 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 0
Cbc0038I Pass  10: (2.36 seconds) suminf.    1.55046 (5) obj. -335.081 iterations 1124
Cbc0038I Pass  11: (2.37 seconds) suminf.    1.25000 (4) obj. -335.678 iterations 238
Cbc0038I Pass  12: (2.38 seconds) suminf.    1.89366 (7) obj. -335.081 iterations 341
Cbc0038I Pass  13: (2.40 seconds) suminf.    1.42504 (18) obj. -335.081 iterations 652
Cbc0038I Pass  14: (2.41 seconds) suminf.    5.15789 (14) obj. -350.97 iterations 702
Cbc0038I Pass  15: (2.43 seconds) suminf.    1.94999 (15) obj. -335.081 iterations 894
Cbc0038I Pass  16: (2.45 seconds) suminf.    1.13523 (4) obj. -335.081 iterations 531
Cbc0038I Pass  17: (2.46 seconds) suminf.    1.12500 (3) obj. -335.101 iterations 295
Cbc0038I Pass  18: (2.48 seconds) suminf.    1.24360 (5) obj. -335.081 iterations 578
Cbc0038I Pass  19: (2.48 seconds) suminf.    1.25000 (4) obj. -335.119 iterations 185
Cbc0038I Pass  20: (2.50 seconds) suminf.    2.61623 (14) obj. -335.081 iterations 386
Cbc0038I Pass  21: (2.51 seconds) suminf.    1.70530 (18) obj. -335.081 iterations 373
Cbc0038I Pass  22: (2.52 seconds) suminf.    2.33333 (7) obj. -336.846 iterations 355
Cbc0038I Pass  23: (2.52 seconds) suminf.    5.59513 (20) obj. -335.081 iterations 269
Cbc0038I Pass  24: (2.53 seconds) suminf.    0.58333 (7) obj. -342.973 iterations 210
Cbc0038I Pass  25: (2.53 seconds) suminf.    0.58333 (7) obj. -342.973 iterations 4
Cbc0038I Pass  26: (2.56 seconds) suminf.    3.64944 (15) obj. -335.081 iterations 809
Cbc0038I Pass  27: (2.57 seconds) suminf.    4.17241 (11) obj. -336.666 iterations 310
Cbc0038I Pass  28: (2.58 seconds) suminf.    2.16724 (23) obj. -335.081 iterations 410
Cbc0038I Pass  29: (2.59 seconds) suminf.    1.16667 (7) obj. -336.438 iterations 279
Cbc0038I Pass  30: (2.61 seconds) suminf.    4.12798 (18) obj. -335.081 iterations 726
Cbc0038I Pass  31: (2.62 seconds) suminf.    4.30702 (12) obj. -335.081 iterations 432
Cbc0038I Pass  32: (2.63 seconds) suminf.    0.60266 (8) obj. -335.081 iterations 312
Cbc0038I Solution found of -336.044
Cbc0038I Before mini branch and bound, 1034 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 31 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -336.044 to -346.072 (2.67 seconds)
Cbc0038I Round again with cutoff of -348.067
Cbc0038I Reduced cost fixing fixed 190 variables on major pass 4
Cbc0038I Pass  33: (2.68 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 0
Cbc0038I Pass  34: (2.69 seconds) suminf.    5.40018 (19) obj. -348.067 iterations 642
Cbc0038I Pass  35: (2.70 seconds) suminf.    5.40018 (19) obj. -348.067 iterations 440
Cbc0038I Pass  36: (2.71 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 699
Cbc0038I Pass  37: (2.73 seconds) suminf.    2.39794 (11) obj. -348.067 iterations 550
Cbc0038I Pass  38: (2.74 seconds) suminf.    2.39794 (11) obj. -348.067 iterations 357
Cbc0038I Pass  39: (2.74 seconds) suminf.    2.00000 (5) obj. -348.067 iterations 267
Cbc0038I Pass  40: (2.75 seconds) suminf.    1.58972 (8) obj. -348.067 iterations 442
Cbc0038I Pass  41: (2.77 seconds) suminf.    1.53846 (10) obj. -350.168 iterations 461
Cbc0038I Pass  42: (2.77 seconds) suminf.    1.53846 (10) obj. -350.168 iterations 3
Cbc0038I Pass  43: (2.78 seconds) suminf.    5.40018 (19) obj. -348.067 iterations 549
Cbc0038I Pass  44: (2.79 seconds) suminf.    5.40018 (19) obj. -348.067 iterations 436
Cbc0038I Pass  45: (2.81 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 695
Cbc0038I Pass  46: (2.81 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 34
Cbc0038I Pass  47: (2.82 seconds) suminf.    6.91215 (14) obj. -348.067 iterations 232
Cbc0038I Pass  48: (2.84 seconds) suminf.    6.91215 (14) obj. -348.067 iterations 519
Cbc0038I Pass  49: (2.86 seconds) suminf.    5.15789 (14) obj. -350.97 iterations 599
Cbc0038I Pass  50: (2.87 seconds) suminf.    5.42225 (19) obj. -348.067 iterations 541
Cbc0038I Pass  51: (2.88 seconds) suminf.    5.42225 (19) obj. -348.067 iterations 451
Cbc0038I Pass  52: (2.89 seconds) suminf.    5.15789 (14) obj. -350.97 iterations 675
Cbc0038I Pass  53: (2.91 seconds) suminf.    9.11105 (25) obj. -348.067 iterations 793
Cbc0038I Pass  54: (2.92 seconds) suminf.    8.17355 (18) obj. -348.067 iterations 493
Cbc0038I Pass  55: (2.94 seconds) suminf.    8.17147 (27) obj. -348.067 iterations 601
Cbc0038I Pass  56: (2.96 seconds) suminf.    5.15789 (14) obj. -350.97 iterations 604
Cbc0038I Pass  57: (2.97 seconds) suminf.    7.43410 (19) obj. -348.067 iterations 594
Cbc0038I Pass  58: (2.97 seconds) suminf.    2.59311 (15) obj. -348.067 iterations 56
Cbc0038I Pass  59: (2.98 seconds) suminf.    0.66667 (4) obj. -348.939 iterations 625
Cbc0038I Pass  60: (3.00 seconds) suminf.    0.31432 (6) obj. -348.067 iterations 909
Cbc0038I Pass  61: (3.01 seconds) suminf.    0.31432 (6) obj. -348.067 iterations 43
Cbc0038I Pass  62: (3.01 seconds) suminf.    0.83333 (5) obj. -350.273 iterations 687
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1044 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -346.072 to -347.901 (3.05 seconds)
Cbc0038I Round again with cutoff of -349.463
Cbc0038I Reduced cost fixing fixed 215 variables on major pass 5
Cbc0038I Pass  62: (3.06 seconds) suminf.    5.89474 (14) obj. -350.785 iterations 0
Cbc0038I Pass  63: (3.08 seconds) suminf.    6.89459 (19) obj. -349.463 iterations 620
Cbc0038I Pass  64: (3.08 seconds) suminf.    3.58091 (15) obj. -349.463 iterations 328
Cbc0038I Pass  65: (3.09 seconds) suminf.    1.53846 (10) obj. -350.168 iterations 629
Cbc0038I Pass  66: (3.10 seconds) suminf.    1.92215 (6) obj. -349.463 iterations 219
Cbc0038I Pass  67: (3.10 seconds) suminf.    1.53846 (10) obj. -350.168 iterations 222
Cbc0038I Pass  68: (3.11 seconds) suminf.    1.66667 (5) obj. -350.119 iterations 225
Cbc0038I Pass  69: (3.12 seconds) suminf.    2.30795 (6) obj. -349.463 iterations 682
Cbc0038I Pass  70: (3.13 seconds) suminf.    2.30795 (6) obj. -349.463 iterations 21
Cbc0038I Pass  71: (3.14 seconds) suminf.    1.66667 (5) obj. -350.119 iterations 686
Cbc0038I Pass  72: (3.15 seconds) suminf.    5.93916 (29) obj. -349.463 iterations 643
Cbc0038I Pass  73: (3.16 seconds) suminf.    1.66667 (5) obj. -350.119 iterations 544
Cbc0038I Pass  74: (3.17 seconds) suminf.    1.92215 (6) obj. -349.463 iterations 291
Cbc0038I Pass  75: (3.18 seconds) suminf.    3.51199 (12) obj. -349.463 iterations 691
Cbc0038I Pass  76: (3.19 seconds) suminf.    2.30795 (6) obj. -349.463 iterations 49
Cbc0038I Pass  77: (3.21 seconds) suminf.    2.82732 (13) obj. -349.463 iterations 1042
Cbc0038I Pass  78: (3.21 seconds) suminf.    1.92314 (6) obj. -349.463 iterations 71
Cbc0038I Pass  79: (3.22 seconds) suminf.    1.92314 (6) obj. -349.463 iterations 84
Cbc0038I Pass  80: (3.23 seconds) suminf.    1.88415 (6) obj. -349.463 iterations 619
Cbc0038I Pass  81: (3.23 seconds) suminf.    1.53846 (10) obj. -350.168 iterations 58
Cbc0038I Pass  82: (3.25 seconds) suminf.    6.89459 (19) obj. -349.463 iterations 542
Cbc0038I Pass  83: (3.25 seconds) suminf.    3.58091 (15) obj. -349.463 iterations 331
Cbc0038I Pass  84: (3.26 seconds) suminf.    6.41789 (17) obj. -349.463 iterations 213
Cbc0038I Pass  85: (3.28 seconds) suminf.    1.47368 (14) obj. -350.974 iterations 636
Cbc0038I Pass  86: (3.29 seconds) suminf.    1.47368 (14) obj. -350.974 iterations 5
Cbc0038I Pass  87: (3.30 seconds) suminf.    4.47961 (16) obj. -349.463 iterations 780
Cbc0038I Pass  88: (3.32 seconds) suminf.    1.47368 (14) obj. -350.974 iterations 666
Cbc0038I Pass  89: (3.33 seconds) suminf.    1.96666 (15) obj. -349.463 iterations 444
Cbc0038I Pass  90: (3.34 seconds) suminf.    1.09540 (6) obj. -349.463 iterations 445
Cbc0038I Pass  91: (3.35 seconds) suminf.    0.80000 (2) obj. -350.067 iterations 143
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1038 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -347.901 to -349.476 (3.38 seconds)
Cbc0038I Round again with cutoff of -350.774
Cbc0038I Reduced cost fixing fixed 237 variables on major pass 6
Cbc0038I Pass  91: (3.39 seconds) suminf.    3.84615 (10) obj. -352.063 iterations 8
Cbc0038I Pass  92: (3.41 seconds) suminf.    3.31431 (16) obj. -350.774 iterations 651
Cbc0038I Pass  93: (3.41 seconds) suminf.    3.84615 (10) obj. -352.063 iterations 472
Cbc0038I Pass  94: (3.42 seconds) suminf.    0.55769 (11) obj. -350.774 iterations 291
Cbc0038I Solution found of -352.497
Cbc0038I Before mini branch and bound, 1096 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (3.46 seconds)
Cbc0038I After 3.46 seconds - Feasibility pump exiting with objective of -352.497 - took 1.33 seconds
Cbc0012I Integer solution of -352.49681 found by feasibility pump after 0 iterations and 0 nodes (3.46 seconds)
Cbc0038I Full problem 4611 rows 1142 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -352.72015 to -351.82397 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -352.4968146620441, took 0 iterations and 0 nodes (3.51 seconds)
Cbc0035I Maximum depth 0, 276 variables fixed on reduced cost
Cuts at root node changed objective from -352.72 to -351.824
Probing was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                352.49681466
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             3.68
Time (Wallclock seconds):       4.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.24   (Wallclock seconds):       6.06

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/sambriggs/opt/anaconda3/envs/Summarization/lib/python3.6/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/d2309777235f4afaaa8dc4ebb992e8c6-pulp.mps max timeMode elapsed branch printingOptions all solution /var/folders/lx/xdnf8rwx63nb6hpkbm31jz780000gn/T/d2309777235f4afaaa8dc4ebb992e8c6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1549631 COLUMNS
At line 6203684 RHS
At line 7753311 BOUNDS
At line 7757721 ENDATA
Problem MODEL has 1549626 rows, 4409 columns and 1566891 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 418.511 - 1.46 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 169 strengthened rows, 202 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 137 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 6478 rows, 1529 columns (1529 integer (1529 of which binary)) and 17824 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 3.11111
Cbc0038I Pass   1: (3.44 seconds) suminf.    2.54545 (21) obj. -415.383 iterations 1029
Cbc0038I Pass   2: (3.44 seconds) suminf.    0.00000 (0) obj. -288.288 iterations 222
Cbc0038I Solution found of -288.288
Cbc0038I Rounding solution of -294.347 is better than previous of -288.288

Cbc0038I Before mini branch and bound, 1501 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6478 rows 1529 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -294.347 to -400.509 (3.62 seconds)
Cbc0038I Round again with cutoff of -402.309
Cbc0038I Reduced cost fixing fixed 99 variables on major pass 2
Cbc0038I Pass   3: (3.64 seconds) suminf.    2.54545 (21) obj. -415.383 iterations 0
Cbc0038I Pass   4: (3.69 seconds) suminf.   11.91941 (29) obj. -402.309 iterations 1349
Cbc0038I Pass   5: (3.70 seconds) suminf.    2.54545 (21) obj. -415.383 iterations 294
Cbc0038I Pass   6: (3.71 seconds) suminf.    1.54980 (19) obj. -402.309 iterations 315
Cbc0038I Pass   7: (3.74 seconds) suminf.    0.91902 (9) obj. -402.309 iterations 847
Cbc0038I Pass   8: (3.77 seconds) suminf.    2.54545 (21) obj. -409.374 iterations 844
Cbc0038I Pass   9: (3.77 seconds) suminf.    2.54545 (21) obj. -409.374 iterations 10
Cbc0038I Pass  10: (3.80 seconds) suminf.    4.08423 (23) obj. -402.309 iterations 466
Cbc0038I Pass  11: (3.81 seconds) suminf.    0.60000 (3) obj. -408.74 iterations 442
Cbc0038I Solution found of -406.286
Cbc0038I Rounding solution of -409.608 is better than previous of -406.286

Cbc0038I Before mini branch and bound, 1458 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6478 rows 1529 columns, reduced to 19 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -409.608 to -416.533 (3.87 seconds)
Cbc0038I Round again with cutoff of -416.929
Cbc0038I Reduced cost fixing fixed 315 variables on major pass 3
Cbc0038I Pass  12: (3.88 seconds) suminf.    3.11111 (7) obj. -418.511 iterations 28
Cbc0038I Pass  13: (3.92 seconds) suminf.    2.53766 (13) obj. -416.929 iterations 1213
Cbc0038I Pass  14: (3.93 seconds) suminf.    3.11111 (7) obj. -418.511 iterations 987
Cbc0038I Pass  15: (3.95 seconds) suminf.    3.70058 (14) obj. -416.929 iterations 693
Cbc0038I Pass  16: (3.97 seconds) suminf.    1.69231 (11) obj. -418.021 iterations 590
Cbc0038I Pass  17: (4.00 seconds) suminf.    1.40407 (13) obj. -416.929 iterations 1033
Cbc0038I Pass  18: (4.03 seconds) suminf.    0.67094 (6) obj. -416.929 iterations 1112
Cbc0038I Pass  19: (4.03 seconds) suminf.    0.70588 (6) obj. -417.236 iterations 173
Cbc0038I Pass  20: (4.04 seconds) suminf.    0.53531 (10) obj. -416.929 iterations 281
Cbc0038I Pass  21: (4.05 seconds) suminf.    0.29310 (6) obj. -416.929 iterations 335
Cbc0038I Pass  22: (4.06 seconds) suminf.    0.35294 (6) obj. -417.455 iterations 168
Cbc0038I Pass  23: (4.07 seconds) suminf.    0.29310 (6) obj. -416.929 iterations 288
Cbc0038I Pass  24: (4.08 seconds) suminf.    0.50000 (3) obj. -417.201 iterations 379
Cbc0038I Pass  25: (4.08 seconds) suminf.    0.50000 (3) obj. -417.201 iterations 317
Cbc0038I Pass  26: (4.09 seconds) suminf.    0.29310 (6) obj. -416.929 iterations 428
Cbc0038I Pass  27: (4.10 seconds) suminf.    0.35624 (6) obj. -416.929 iterations 369
Cbc0038I Pass  28: (4.13 seconds) suminf.    0.53531 (10) obj. -416.929 iterations 879
Cbc0038I Pass  29: (4.15 seconds) suminf.    0.35214 (19) obj. -416.929 iterations 678
Cbc0038I Pass  30: (4.17 seconds) suminf.    0.40434 (16) obj. -416.929 iterations 493
Cbc0038I Pass  31: (4.19 seconds) suminf.    1.75000 (7) obj. -417.12 iterations 494
Cbc0038I Pass  32: (4.20 seconds) suminf.    1.34777 (5) obj. -416.929 iterations 484
Cbc0038I Pass  33: (4.21 seconds) suminf.    1.66667 (5) obj. -418.325 iterations 378
Cbc0038I Pass  34: (4.22 seconds) suminf.    1.35708 (13) obj. -416.929 iterations 492
Cbc0038I Pass  35: (4.24 seconds) suminf.    1.71593 (15) obj. -416.929 iterations 789
Cbc0038I Pass  36: (4.26 seconds) suminf.    0.70588 (6) obj. -417.236 iterations 449
Cbc0038I Pass  37: (4.29 seconds) suminf.    1.08362 (8) obj. -416.929 iterations 1038
Cbc0038I Pass  38: (4.33 seconds) suminf.    0.95327 (13) obj. -416.929 iterations 1276
Cbc0038I Pass  39: (4.35 seconds) suminf.    0.81548 (6) obj. -416.929 iterations 493
Cbc0038I Pass  40: (4.38 seconds) suminf.    0.94290 (13) obj. -416.929 iterations 1072
Cbc0038I Pass  41: (4.41 seconds) suminf.    0.88921 (13) obj. -416.929 iterations 875
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1421 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6478 rows 1529 columns, reduced to 1 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (4.49 seconds)
Cbc0038I After 4.49 seconds - Feasibility pump exiting with objective of -416.533 - took 0.94 seconds
Cbc0012I Integer solution of -416.53325 found by feasibility pump after 0 iterations and 0 nodes (4.49 seconds)
Cbc0031I 1 added rows had average density of 383
Cbc0013I At root node, 1 cuts changed objective from -418.51137 to -418.38169 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 13 column cuts (13 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 383.3 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -416.53325 best solution, best possible -418.38169 (4.69 seconds)
Cbc0012I Integer solution of -417.6416 found by DiveCoefficient after 55 iterations and 4 nodes (4.95 seconds)
Cbc0001I Search completed - best objective -417.641601982293, took 155 iterations and 10 nodes (5.10 seconds)
Cbc0032I Strong branching done 106 times (895 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 356 variables fixed on reduced cost
Cuts at root node changed objective from -418.511 to -418.382
Probing was tried 10 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)

Result - Optimal solution found

Objective value:                417.64160198
Enumerated nodes:               10
Total iterations:               155
Time (CPU seconds):             5.12
Time (Wallclock seconds):       6.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       7.59   (Wallclock seconds):       9.79

